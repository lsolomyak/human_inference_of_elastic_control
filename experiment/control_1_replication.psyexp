<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.5">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="$&quot;https://hujipsych.au1.qualtrics.com/jfe/form/SV_9vNlj3F6NhXG2QS?participant=&quot; +expInfo['participant']+'&amp;id='+expInfo['id']" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'id': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="$&quot;https://hujipsych.au1.qualtrics.com/jfe/form/SV_6YeeZkt5hM08j9Y?participant=&quot; +expInfo['participant']+'&amp;id='+expInfo['id']" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['subject_breakdown.csv', 'transport_rules/Slide1.jpeg', 'instr_new_draft/Slide1.jpeg', 'instr_new_draft/Slide2.jpeg', 'instr_new_draft/Slide3.jpeg', 'instr_new_draft/Slide4.jpeg', 'instr_new_draft/Slide5.jpeg', 'instr_new_draft/Slide6.jpeg', 'instr_new_draft/Slide7.jpeg', 'instr_new_draft/Slide8.jpeg', 'instr_new_draft/Slide9.jpeg', 'instr_new_draft/Slide10.jpeg', 'instr_new_draft/Slide11.jpeg', 'instr_new_draft/Slide12.jpeg', 'instr_new_draft/Slide13.jpeg', 'instr_new_draft/Slide14.jpeg', 'instr_new_draft/Slide15.jpeg', 'instr_new_draft/Slide16.jpeg', 'instr_new_draft/Slide17.jpeg', 'instr_new_draft/Slide18.jpeg', 'instr_new_draft/Slide19.jpeg', 'instr_new_draft/Slide20.jpeg', 'instr_new_draft/Slide21.jpeg', 'instr_new_draft/Slide22.jpeg', 'instr_new_draft/Slide23.jpeg', 'instr_new_draft/Slide24.jpeg', 'instr_new_draft/Slide25.jpeg', 'instr_new_draft/Slide26.jpeg', 'instr_new_draft/Slide27.jpeg', 'instr_new_draft/Slide28.jpeg', 'instr_new_draft/Slide29.jpeg', 'instr_new_draft/Slide30.jpeg', 'instr_new_draft/Slide31.jpeg', 'instr_new_draft/Slide32.jpeg', 'instr_new_draft/Slide33.jpeg', 'instr_new_draft/Slide34.jpeg', 'instr_new_draft/Slide35.jpeg', 'instr_new_draft/Slide36.jpeg', 'instr_new_draft/Slide37.jpeg', 'instr_new_draft/Slide38.jpeg', 'instr_new_draft/Slide39.jpeg', 'instr_new_draft/Slide40.jpeg', 'instr_new_draft/Slide41.jpeg', 'instr_new_draft/Slide42.jpeg', 'instr_new_draft/Slide43.jpeg', 'instr_new_draft/Slide44.jpeg', 'instr_new_draft/Slide45.jpeg', 'instr_new_draft/Slide46.jpeg', 'instr_new_draft/Slide47.jpeg', 'instr_new_draft/Slide48.jpeg', 'instr_new_draft/Slide49.jpeg', 'instr_new_draft/Slide50.jpeg', 'instr_new_draft/Slide51.jpeg', 'instr_new_draft/Slide52.jpeg', 'instr_new_draft/Slide53.jpeg', 'instr_new_draft/Slide54.jpeg', 'instr_new_draft/Slide55.jpeg', 'instr_new_draft/Slide56.jpeg', 'instr_new_draft/Slide57.jpeg', 'instr_new_draft/Slide58.jpeg', 'instr_new_draft/Slide59.jpeg', 'opt_inr.jpg', 'practice_one_ticket.jpg', 'tic.jpg', 'attempt_bo.jpg', 'risk_distributions_final/Slide1.jpeg', 'risk_distributions_final/Slide15.jpeg', 'risk_distributions_final/Slide14.jpeg', 'risk_distributions_final/Slide13.jpeg', 'risk_distributions_final/Slide12.jpeg', 'risk_distributions_final/Slide11.jpeg', 'risk_distributions_final/Slide10.jpeg', 'risk_distributions_final/Slide9.jpeg', 'risk_distributions_final/Slide8.jpeg', 'risk_distributions_final/Slide7.jpeg', 'risk_distributions_final/Slide6.jpeg', 'risk_distributions_final/Slide5.jpeg', 'risk_distributions_final/Slide4.jpeg', 'risk_distributions_final/Slide3.jpeg', 'risk_distributions_final/Slide2.jpeg', 'gamble.png', 'distinguiish_actions/Slide1.jpeg', 'distinguiish_actions/Slide3.jpeg', 'distinguiish_actions/Slide2.jpeg', 'transport_rules/Slide1.jpeg', 'planes/new_platform.png', 'planes/walking.png', 'Slide1.jpeg', 'islands/desert.png', 'islands/hut.png', 'planes/train.png', 'planes/down_arrow.png', 'planes/full_down_arrow.png', 'planes/left_diag.png', 'planes/plane.png', 'planes/pointer.png', 'planes/right_arrow.png', 'planes/right_diag.png', 'islands/mountain.png', 'islands/town.png', 'islands/win.png']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1440, 900]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="action_training_combine_other_part_next" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="action_prep">
      <RoutineSettingsComponent name="action_prep" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="action_prep" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="set_actions=1" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="set_actions = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="warning.alignHoriz = &quot;left&quot;;&amp;#10;if ((set_actions === 1)) {&amp;#10;    text = &quot;You will now try and catch your moving ride by pressing space when it is exactly in the center across the screen.\n\n Press space to continue&quot;;&amp;#10;} else {&amp;#10;    if ((set_actions === 2)) {&amp;#10;        if ((platform_examples.thisN === 0)) {&amp;#10;            text = &quot;Now we will try jumping from a WIDE platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue&quot;;&amp;#10;        } else {&amp;#10;            if ((platform_examples.thisN === 3)) {&amp;#10;                text = &quot;Now we will try jumping from a MEDIUM platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue&quot;;&amp;#10;            } else {&amp;#10;                if ((platform_examples.thisN === 6)) {&amp;#10;                    text = &quot;Now we will try jumping from a NARROW (hard) platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue&quot;;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((set_actions === 3)) {&amp;#10;            if ((additional_section.thisN &lt; 2)) {&amp;#10;                if (((ext_platform.thisN === 0) &amp;&amp; (additional_section.thisN === 0))) {&amp;#10;                    text = &quot;Let us see an example where the PLATFORM is NARROW, but the LOADING AREA is LONG!&quot;;&amp;#10;                } else {&amp;#10;                    text = &quot;Press space to jump from the additional section&quot;;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if (((ext_platform.thisN === 0) &amp;&amp; (additional_section.thisN === 2))) {&amp;#10;                    text = &quot;Let us see an example where the PLATFORM is SHORT, and the LOADING AREA is SHORT&quot;;&amp;#10;                } else {&amp;#10;                    text = &quot;Press space to jump from the LOADING AREA&quot;;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="warning.alignHoriz=&quot;left&quot;&amp;#10;if set_actions==1:&amp;#10;    text='You will now try and catch your moving ride by pressing space when it is exactly in the center across the screen.\n\n Press space to continue'&amp;#10;    &amp;#10;elif set_actions==2:&amp;#10;    if platform_examples.thisN==0:&amp;#10;        text='Now we will try jumping from a WIDE platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue'&amp;#10;    elif platform_examples.thisN==3:&amp;#10;        text='Now we will try jumping from a MEDIUM platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue'&amp;#10;    elif platform_examples.thisN==6:&amp;#10;        text='Now we will try jumping from a NARROW (hard) platform.\n\n Your goal is to press space when the vehicle is exactly in the middle of the screen\n\nPress space to continue'&amp;#10;&amp;#10;&amp;#10;elif set_actions==3:&amp;#10;    if additional_section.thisN&lt;2:&amp;#10;        if ext_platform.thisN==0 and additional_section.thisN==0:&amp;#10;            text='Let us see an example where the PLATFORM is NARROW, but the LOADING AREA is LONG!'&amp;#10;        &amp;#10;        else:&amp;#10;            text='Press space to jump from the additional section'&amp;#10;    else:&amp;#10;        if ext_platform.thisN==0 and additional_section.thisN==2:&amp;#10;            text='Let us see an example where the PLATFORM is SHORT, and the LOADING AREA is SHORT'&amp;#10;        else:&amp;#10;            text='Press space to jump from the LOADING AREA'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="warning" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="warning" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="ready" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="ready" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="object_type" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;nm = randint(0, 2);&amp;#10;plane_selected = transport[nm];&amp;#10;if ((plane_selected === plane)) {&amp;#10;    selected_object = &quot;plane&quot;;&amp;#10;} else {&amp;#10;    if ((plane_selected === train)) {&amp;#10;        selected_object = &quot;train&quot;;&amp;#10;    }&amp;#10;}&amp;#10;success_on = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random as rand&amp;#10;import numpy as np&amp;#10;nm=rand.randint(0,2)&amp;#10;&amp;#10;plane_selected=transport[nm]&amp;#10;&amp;#10;if plane_selected==plane:&amp;#10;    selected_object='plane'&amp;#10;elif plane_selected==train:&amp;#10;    selected_object='train'&amp;#10;    &amp;#10;success_on=[]&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="object_type" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="action_execution">
      <RoutineSettingsComponent name="action_execution" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="action_execution" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="moving_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="yScale=.45&amp;#10;minSize = .1&amp;#10;maxSize = .1&amp;#10;pathStart=[-1,-.95]&amp;#10;pathN = 0&amp;#10;xScale=win.size[0]/win.size[1]*.45&amp;#10;&amp;#10;posClock = core.Clock()&amp;#10;sizeClock = core.Clock()&amp;#10;&amp;#10;#myPaths = data.TrialHandler(&amp;#10;#nReps=1, &amp;#10;#method='sequential', &amp;#10;#extraInfo=expInfo, &amp;#10;#originPath=-1, &amp;#10;#trialList=data.importConditions('Book1paths.xlsx'), &amp;#10;#seed=None, &amp;#10;#name='myPaths')&amp;#10;current_pos=[1]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="yScale = 0.45;&amp;#10;minSize = 0.1;&amp;#10;maxSize = 0.1;&amp;#10;pathStart = [(- 1), (- 0.95)];&amp;#10;pathN = 0;&amp;#10;xScale = ((psychoJS.window.size[0] / psychoJS.window.size[1]) * 0.45);&amp;#10;posClock = new util.Clock();&amp;#10;sizeClock = new util.Clock();&amp;#10;current_pos = [1];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="yScale = 0.45;&amp;#10;minSize = 0.1;&amp;#10;maxSize = 0.1;&amp;#10;pathStart = [(- 1), (- 0.9)];&amp;#10;pathN = 0;&amp;#10;xScale = ((psychoJS.window.size[0] / psychoJS.window.size[1]) * 0.45);&amp;#10;posClock = new util.Clock();&amp;#10;sizeClock = new util.Clock();&amp;#10;cueSize = minSize;&amp;#10;cuePos = pathStart;&amp;#10;posClock.reset();&amp;#10;sizeClock.reset();&amp;#10;pathTime = 1;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="yScale=.45&amp;#10;minSize = .1&amp;#10;maxSize = .1&amp;#10;cuePulse = 3&amp;#10;pathStart=[-1,-.9]&amp;#10;pathN = 0&amp;#10;xScale=win.size[0]/win.size[1]*.45&amp;#10;&amp;#10;posClock = core.Clock()&amp;#10;sizeClock = core.Clock()&amp;#10;&amp;#10;#myPaths = data.TrialHandler(&amp;#10;#nReps=1, &amp;#10;#method='sequential', &amp;#10;#extraInfo=expInfo, &amp;#10;#originPath=-1, &amp;#10;#trialList=data.importConditions('Book1paths.xlsx'), &amp;#10;#seed=None, &amp;#10;#name='myPaths')&amp;#10;&amp;#10;&amp;#10;&amp;#10;#thisPath = myPaths.next()&amp;#10;cueSize = minSize&amp;#10;cuePos = pathStart&amp;#10;posClock.reset()&amp;#10;sizeClock.reset()&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="#pathN = myPaths.thisN&amp;#10;if action.keys == 'space':&amp;#10;    current_pos=cuePos    &amp;#10;   # continueRoutine = False;&amp;#10;&amp;#10;pathTime=1&amp;#10;pathEnd=[1,-.95]&amp;#10;#if posClock.getTime() &gt; pathTime:&amp;#10;#if posClock.getTime() &gt; thisPath[&quot;pathTime&quot;]:&amp;#10;   # if pathN &lt; len(myPaths.trialList) - 1:&amp;#10;      #  pathStart = [float(thisPath[&quot;pathEnd&quot;][0]),float(thisPath[&quot;pathEnd&quot;][1])]&amp;#10;    #   pathStart = [float(pathEnd[0]),float(pathEnd[1])]&amp;#10;     #  thisPath = myPaths.nextthis()&amp;#10;      # posClock.reset()&amp;#10;    #else:&amp;#10;     #   continueRoutine = False;&amp;#10;#cuePos = (xScale*(pathStart[0]+(float(thisPath['pathEnd'][0])-pathStart[0])*posClock.getTime()/float(thisPath['pathTime'])), yScale*(pathStart[1]+(float(thisPath['pathEnd'][1])-pathStart[1])*posClock.getTime()/float(thisPath['pathTime'])))&amp;#10;cuePos = (xScale*(pathStart[0]+(float(pathEnd[0])-pathStart[0])*posClock.getTime()/float(pathTime)), yScale*(pathStart[1]+(float(pathEnd[1])-pathStart[1])*posClock.getTime()/float(pathEnd[1])))&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((action.keys === &quot;space&quot;)) {&amp;#10;    current_pos = cuePos;&amp;#10;    //continueRoutine = false;&amp;#10;}&amp;#10;&amp;#10;pathEnd = [1, (- 0.95)];&amp;#10;cuePos = [(xScale * (pathStart[0] + (((Number.parseFloat(pathEnd[0]) - pathStart[0]) * posClock.getTime()) / Number.parseFloat(pathTime)))), (yScale * (pathStart[1] + (((Number.parseFloat(pathEnd[1]) - pathStart[1]) * posClock.getTime()) / Number.parseFloat(pathEnd[1]))))];&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="moving_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="moving_cue_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/train.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="moving_cue_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="cuePos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="action" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="action" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="end_after_one" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;path_time+.1:&amp;#10;    &amp;#10;    if len(action.keys) == 0:&amp;#10;        current_pos=[10,10]&amp;#10;        &amp;#10;    continueRoutine=False;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; (1 + 0.1))) {&amp;#10;    if ((action.keys === undefined)) {&amp;#10;        current_pos = [10, 10];&amp;#10;    }&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_after_one" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="try_again">
      <RoutineSettingsComponent name="try_again" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="try_again" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="continue_q_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((retry_practice.thisN === 0)) {&amp;#10;    success_r = [];&amp;#10;}&amp;#10;&amp;#10;if ((practice_ticket_buying.thisN === 0)) {&amp;#10;    w_self = 0.85;&amp;#10;} else {&amp;#10;    if ((practice_ticket_buying.thisN === 1)) {&amp;#10;        w_self = 0.6;&amp;#10;    } else {&amp;#10;        if ((practice_ticket_buying.thisN === 2)) {&amp;#10;            w_self = 0.35;&amp;#10;        } else {&amp;#10;            if ((practice_ticket_buying.thisN === 3)) {&amp;#10;                w_self = 0.05;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;cs = 1;&amp;#10;flip_coin = 0;&amp;#10;if ((performance_arr === undefined)) {&amp;#10;    per=.25;&amp;#10;    performance_arr.push(Math.abs(.3-action.rt));&amp;#10;&amp;#10;      &amp;#10;}  else if ((performance_arr.length === 0)) {&amp;#10;    per=.5;&amp;#10;    performance_arr.push(Math.abs(.3-action.rt));&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;}  &amp;#10;    &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;gor = 2;&amp;#10;percent_acc = ecdfArray(performance_arr);&amp;#10;&amp;#10;if ((action.keys === undefined)) {&amp;#10;    action.keys = [];&amp;#10;    action.rt = [];&amp;#10;    per=1.1;&amp;#10;} else {&amp;#10;    per = percent_acc(Math.abs((0.3 - action.rt)));&amp;#10;    performance_arr.push(Math.abs(.3-action.rt));&amp;#10;}&amp;#10;if ((per &lt; w_self)) {&amp;#10;    success_r.push(1);&amp;#10;} else {&amp;#10;    success_r.push(0);&amp;#10;}&amp;#10;&amp;#10;&amp;#10;if ((practicing_ticket.thisN &lt;2)) {&amp;#10;    continueRoutine=false; &amp;#10;    &amp;#10;    &amp;#10;}&amp;#10;&amp;#10;success=success_r.reduce((partialSum, a) =&gt; partialSum + a, 0)&gt;0&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if practice_ticket_buying.thisN==0:&amp;#10;    w_self=.85&amp;#10;elif practice_ticket_buying.thisN==1:&amp;#10;    w_self=.6&amp;#10;elif practice_ticket_buying.thisN==2:&amp;#10;    w_self=.4&amp;#10;elif practice_ticket_buying.thisN==3:&amp;#10;    w_self=.1&amp;#10;    &amp;#10;cs=1;&amp;#10;flip_coin=0&amp;#10;if retry_practice.thisN==0:&amp;#10;    success_r=[]&amp;#10;&amp;#10;gor=2&amp;#10;percent_acc = ecdfArray(performance_arr)&amp;#10;per=percent_acc(abs(.3-action.rt))&amp;#10;performance_arr.append(abs(.3-action.rt))&amp;#10;if per&lt;w_self:&amp;#10;    success_r.append(1)&amp;#10;else:&amp;#10;    success_r.append(0)&amp;#10;&amp;#10;&amp;#10;&amp;#10;if retry_practice.thisN==0:&amp;#10;    cost_try=10 &amp;#10;elif retry_practice.thisN==1:&amp;#10;    cost_try=5&amp;#10;else:&amp;#10;    continueRoutine=False  " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_try_again.keys === &quot;n&quot;)) {&amp;#10;    retry_practice.finished = true;&amp;#10;} else {&amp;#10;    nu_pr_tries += 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_try_again.keys =='n':&amp;#10;    retry_practice.finished=true &amp;#10;else:&amp;#10;    nu_pr_tries+=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="continue_q_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="choose_again" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="choose_again" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Do you want to try again?\n yes-&quot;y&quot; no-&quot;n&quot;\n\n\n\n Remmember the ticket officer in this case is '+ officer_strictness&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_try_again" plugin="None">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_try_again" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="save_cdf_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;position&quot;, Math.abs((0.3 - action.rt)));&amp;#10;psychoJS.experiment.addData(&quot;cdf&quot;, per);&amp;#10;psychoJS.experiment.addData(&quot;full_vector&quot;, performance_arr);&amp;#10;psychoJS.experiment.addData(&quot;num_attempts_practice&quot;, nu_pr_tries);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData(&quot;position&quot;, abs(.3-action.rt))&amp;#10;thisExp.addData(&quot;cdf&quot;, per)&amp;#10;thisExp.addData(&quot;full_vector&quot;, performance_arr)&amp;#10;thisExp.addData(&quot;num_attempts_practice&quot;, nu_pr_tries)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="save_cdf_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="feedback">
      <RoutineSettingsComponent name="feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="set_difficulty" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((set_actions === 2)) {&amp;#10;    if ((platform_examples.thisN &lt; 2)) {&amp;#10;        allowed_area = 0.3;&amp;#10;        w_self = 0.95;&amp;#10;        judge = &quot;LENIENT officer &quot;;&amp;#10;    } else {&amp;#10;        if ((platform_examples.thisN &lt; 4)) {&amp;#10;            allowed_area = 0.1;&amp;#10;            w_self = 0.6;&amp;#10;            judge = &quot;medium officer &quot;;&amp;#10;        } else {&amp;#10;            if ((platform_examples.thisN &lt; 6)) {&amp;#10;                w_self = 0.1;&amp;#10;                allowed_area = 0.01;&amp;#10;                judge = &quot;hard officer &quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    text_3.alignHoriz = &quot;left&quot;;&amp;#10;} else {&amp;#10;    if (((additional_section.thisN + (1 % 2)) === 0)) {&amp;#10;        w_self = 0.1;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if set_actions==2:&amp;#10;    if platform_examples.thisN&lt;2:&amp;#10;        allowed_area=.3;&amp;#10;        w_self=.95&amp;#10;        judge = &quot;LENIENT officer &quot;;&amp;#10;    elif platform_examples.thisN&lt;4:&amp;#10;        allowed_area=.1;&amp;#10;        w_self=.6&amp;#10;        judge = &quot;medium officer &quot;;&amp;#10;    elif  platform_examples.thisN&lt;6:&amp;#10;        w_self=.1&amp;#10;        allowed_area=.01;&amp;#10;        judge = &quot;hard officer &quot;;&amp;#10;&amp;#10;    text_3.alignHoriz=&quot;left&quot;&amp;#10;       &amp;#10;else:&amp;#10;    if additional_section.thisN+1 % 2==0 :&amp;#10;        w_self=.1&amp;#10;    &amp;#10;        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_difficulty" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="give_feedback" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="hard=False&amp;#10;gor=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="hard = false;&amp;#10;gor = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;if ((performance_arr.length &gt;1)) {&amp;#10;    percent_acc = ecdfArray(performance_arr);&amp;#10;    per = percent_acc(Math.abs((0.3 - action.rt)));&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;if ((Math.abs(Math.abs((0.3 - action.rt))) &lt; allowed_area)) {&amp;#10;    success = 1;&amp;#10;} else {&amp;#10;    success = 0;&amp;#10;}&amp;#10;&amp;#10;if ((plane_selected === plane)) {&amp;#10;    transp = &quot;plane&quot;;&amp;#10;} else {&amp;#10;    transp = &quot;train&quot;;&amp;#10;}&amp;#10;if ((success === 1)) {&amp;#10;    got = (&quot;Success! you were timely enough to catch the &quot; + transp.toString());&amp;#10;} else {&amp;#10;    got = (&quot;Sorry. You were NOT timely enough to catch the &quot; + transp.toString());&amp;#10;}&amp;#10;if ((action.keys === undefined)) {&amp;#10;    action.keys = [];&amp;#10;    action.rt = [];&amp;#10;} else {&amp;#10;    performance_arr.push(Math.abs(.3-action.rt));&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#get_times[trials.thisN]=current_pos[0]&amp;#10;if hard==False:&amp;#10;    allowed_area=.085&amp;#10;    w_self=.75&amp;#10;    judge='lenient officer '&amp;#10;else:&amp;#10;    allowed_area=.02&amp;#10;    w_self=.3&amp;#10;    judge='strict officer '&amp;#10;&amp;#10;&amp;#10;&amp;#10;if abs(abs(.3-action.rt))&lt;allowed_area:&amp;#10;    #did they get it right at least once &amp;#10;    success=1&amp;#10;else:&amp;#10;    success=0&amp;#10;&amp;#10;&amp;#10;if plane_selected==plane:&amp;#10;    transp=&quot;plane&quot;&amp;#10;else:&amp;#10;    transp=&quot;train&quot;&amp;#10;&amp;#10; &amp;#10;if success==1:&amp;#10;    got='Success! You succesfully caught the '+ str(transp)&amp;#10;else:&amp;#10;    got='Sorry.  You were NOT timely enough to catch the '+ str(transp)&amp;#10;&amp;#10;&amp;#10;performance_arr.append(abs(.3-action.rt))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if easy.finished==True:&amp;#10;    if hard.finished==True:&amp;#10;        trials_actions.finished=True&amp;#10;        trials_hard_officer.finished=True&amp;#10;&amp;#10; " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="give_feedback" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$got" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_18" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_18" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="save_cdf" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;position&quot;, Math.abs((0.3 - action.rt)));&amp;#10;psychoJS.experiment.addData(&quot;cdf&quot;, per);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData(&quot;position&quot;, abs(.3-action.rt))&amp;#10;thisExp.addData(&quot;cdf&quot;, per)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="save_cdf" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_26" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_26" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press space to continue" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="second_instruct">
      <RoutineSettingsComponent name="second_instruct" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="second_instruct" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="instructions_2=0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instructions_2 = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((instructions_2 === 0)) {&amp;#10;    text_to_show = &quot;On other planets you will have strict ticket officers. Strict ticket officers will only let you on if your timing is really accurate.&quot;;&amp;#10;} else {&amp;#10;    if ((instructions_2 === 1)) {&amp;#10;        text_to_show = &quot;Let\u2019s see how successful you can be when a strict judge is assessing your spacebar press.&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if instructions_2==0:&amp;#10;    text_to_show='On other planets you will have strict ticket officers. Strict ticket officers will only let you on if your timing is really accurate.'&amp;#10;elif instructions_2==1:&amp;#10;    text_to_show='Let’s see how successful you can be when a strict judge is assessing your spacebar press.'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((instructions_2 === 1) &amp;&amp; (key_resp_actions_learning_2.keys === &quot;right&quot;))) {&amp;#10;    trials_hard_officer.finished = true;&amp;#10;    rem_planets = 1;&amp;#10;}&amp;#10;if ((key_resp_actions_learning_2.keys === &quot;right&quot;)) {&amp;#10;    instructions_2 = (instructions_2 + 1);&amp;#10;} else {&amp;#10;    if (((key_resp_actions_learning_2.keys === &quot;left&quot;) &amp;&amp; (instructions_2 !== 0))) {&amp;#10;        instructions_2 = (instructions_2 - 1);&amp;#10;    }&amp;#10;}&amp;#10;hard = true;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if instructions_2==1 and key_resp_actions_learning_2.keys=='right':&amp;#10;    trials_hard_officer.finished=True&amp;#10;    rem_planets=1&amp;#10;&amp;#10;if key_resp_actions_learning_2.keys=='right':&amp;#10;    instructions_2 = instructions_2 + 1&amp;#10;    &amp;#10;elif key_resp_actions_learning_2.keys=='left'and instructions_2!=0:&amp;#10;    instructions_2 = instructions_2 - 1    &amp;#10;    &amp;#10;hard=True " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="welcome_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="welcome_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to_show" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_arrow_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="right_arrow_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="[.8,-.65]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Next" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_actions_learning_2" plugin="None">
        <Param val="'right','left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_actions_learning_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="next_pointer_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/right_arrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="next_pointer_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.8, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.22, 0.22)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="back_pointer" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/pointer.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="back_pointer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$y_back_arrow" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.22, 0.22)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="left_arrow" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="left_arrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$y_back_word" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Back" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="moving_cue_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/train.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="moving_cue_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.1, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$show_cue" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="instruct_rebuy">
      <RoutineSettingsComponent name="instruct_rebuy" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instruct_rebuy" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="instruct_rebuy=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instruct_rebuy = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((instruct_rebuy === 0)) {&amp;#10;    text_to_show = &quot;These tricky planets! Not only do you have to catch your method of transportation, but you will not even be immediately told whether you succeeded in getting on or not.&quot;;&amp;#10;} else {&amp;#10;    if ((instruct_rebuy === 1)) {&amp;#10;        text_to_show = &quot;Before seeing whether you made it or not, you will be offered an option to purchase another ticket for half of the price of the previous ticket.\n\n Another ticket means that if there is another vehicle of the same type departing the station you can board it in case you miss your first ride.\n\nThis improves your chances, because to get on the vehicle of your choice, it\u2019s enough to succeed and get on on either of the two vehicles.&quot;;&amp;#10;    } else {&amp;#10;        if ((instruct_rebuy === 2)) {&amp;#10;            text_to_show = &quot;So, for example, if on your first try you got on in time but then paid for another ticket and on your second try you failed to get on in time, you still make it!&quot;;&amp;#10;        } else {&amp;#10;            if ((instruct_rebuy === 3)) {&amp;#10;                text_to_show = &quot;You are allowed to purchase up to 3 tickets total. Each subsequent ticket will cost you half the price of the previous ticket!&quot;;&amp;#10;            } else {&amp;#10;                if ((instruct_rebuy === 4)) {&amp;#10;                    text_to_show = &quot;If you buy one ticket and you make it to the rewarded destination.\n You win 100 coins (treasure) - 20 coins (ticket cost)=80 total coins\n\n If you dont get to the destination with the treasure and bandits rob you, you will be down 120 coins&quot;;&amp;#10;                } else {&amp;#10;                    if ((instruct_rebuy === 5)) {&amp;#10;                        text_to_show = &quot;If you buy two tickets and you make it to the rewarded destination.\n You win 100 coins - 30 coins (combined cost of 2 tickets)=70 total coins\n\n If you dont get to the destination with the treasure and bandits rob you, you will be down 130 coins &quot;;&amp;#10;                    } else {&amp;#10;                        if ((instruct_rebuy === 6)) {&amp;#10;                            text_to_show = &quot;If you buy three tickets and you make it to the rewarded destination.\n You win 100 coins - 35 coins for the ticket=65 total coins\n\n But if you dont get to the destination with the treasure and bandits rob you, you will be down 135 coins&quot;;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if instruct_rebuy==0:&amp;#10;    text_to_show='These tricky planets! Not only do you have to catch your method of transportation, but you will not even be immediately told whether you succeeded in getting on or not.'&amp;#10;elif instruct_rebuy==1:&amp;#10;    text_to_show='Before seeing whether you made it or not, you will be offered an option to purchase another ticket for half of the price of the previous ticket.\n\n Another ticket means that if there is another vehicle of the same type departing the station you can board it in case you miss your first ride.\n\nThis improves your chances, because to get on the vehicle of your choice, it’s enough to succeed and get on on either of the two vehicles.'&amp;#10;elif instruct_rebuy==2:&amp;#10;    text_to_show='So, for example, if on your first try you got on in time but then paid for another ticket and on your second try you failed to get on in time, you still make it!'&amp;#10;elif instruct_rebuy==3:&amp;#10;    text_to_show='You are allowed to purchase up to 3 tickets total. Each subsequent ticket will cost you half the price of the previous ticket!'&amp;#10;elif instruct_rebuy==4:&amp;#10;     text_to_show='If you buy one ticket and you make it to the rewarded destination.\n You win 100 coins (treasure) - 20 coins (ticket cost)=80 total coins\n\n If you dont get to the destination with the treasure and bandits rob you, you will be down 120 coins'&amp;#10;elif instruct_rebuy==5:&amp;#10;         text_to_show='If you buy two tickets and you make it to the rewarded destination.\n You win 100 coins - 30 coins (combined cost of 2 tickets)=70 total coins\n\n If you dont get to the destination with the treasure and bandits rob you, you will be down 130 coins '&amp;#10;elif instruct_rebuy==6:&amp;#10;         text_to_show='If you buy three tickets and you make it to the rewarded destination.\n You win 100 coins - 35 coins for the ticket=65 total coins\n\n But if you dont get to the destination with the treasure and bandits rob you, you will be down 135 coins'&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;        " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((instruct_rebuy === 3) &amp;&amp; (key_resp_actions_learning_3.keys === &quot;right&quot;))) {&amp;#10;    rebuy_ticket.finished = true;&amp;#10;}&amp;#10;if ((key_resp_actions_learning_3.keys === &quot;right&quot;)) {&amp;#10;    instruct_rebuy = (instruct_rebuy + 1);&amp;#10;} else {&amp;#10;    if (((key_resp_actions_learning_3.keys === &quot;left&quot;) &amp;&amp; (instruct_rebuy !== 0))) {&amp;#10;        instruct_rebuy = (instruct_rebuy - 1);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if instruct_rebuy==3 and key_resp_actions_learning_3.keys=='right':&amp;#10;    rebuy_ticket.finished=True&amp;#10;    &amp;#10;    &amp;#10;    &amp;#10;if key_resp_actions_learning_3.keys=='right':&amp;#10;    instruct_rebuy = instruct_rebuy + 1&amp;#10;    &amp;#10;elif key_resp_actions_learning_3.keys=='left'and instruct_rebuy!=0:&amp;#10;    instruct_rebuy = instruct_rebuy - 1    &amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="welcome_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="welcome_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to_show" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="right_arrow_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="right_arrow_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="[.8,-.65]" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Next" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_actions_learning_3" plugin="None">
        <Param val="'right','left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_actions_learning_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="go_back_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_resp_actions_learning_3.keys === &quot;left&quot;)) {&amp;#10;    rebuy_ticket.thisRepN -= 1;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_actions_learning_3.keys=='left':&amp;#10;    rebuy_ticket.thisRepN-=1" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="go_back_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="next_pointer_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/right_arrow.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="next_pointer_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.8, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.22, 0.22)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="left_arrow_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="left_arrow_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$y_back_word" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Back" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="back_pointer_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/pointer.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="back_pointer_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$y_back_arrow" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.22, 0.22)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="moving_cue_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/train.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="moving_cue_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.1, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$show_cue" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="open_questions">
      <RoutineSettingsComponent name="open_questions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="open_questions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_to = &quot;Do you have any questions or feedback about any parts of the game?\n\n Response must be a minimum of two sentences.&quot;;&amp;#10;document.body.style.cursor = &quot;auto&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_to='Do you have any questions or feedback about any parts of the game?\n\n Response must be a minimum of two sentences.'&amp;#10;document.body.style.cursor='auto';" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="textbox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textbox" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Enter text here&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <TextComponent name="text_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click on this text to move on (you might need to press slightly below) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse" plugin="None">
        <Param val="text_7" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="text_8" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="force_write" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_review.thisN === 0)) {&amp;#10;    time_to_show = 0;&amp;#10;} else {&amp;#10;    if ((trials_review.thisN &gt; 0)) {&amp;#10;        time_to_show = 100000;&amp;#10;    }&amp;#10;}&amp;#10;please_write_more.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_review.thisN==0:&amp;#10;    time_to_show=0&amp;#10;elif trials_review.thisN&gt;0:&amp;#10;    time_to_show=100000&amp;#10;please_write_more.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((textbox.text.length &gt; 30)) {&amp;#10;    trials_review.finished = true;&amp;#10;}&amp;#10;let practice_end = new Date().toLocaleTimeString();&amp;#10;psychoJS.experiment.addData(&quot;instructions_ended&quot;, practice_end);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if len(textbox.text)&gt;30:&amp;#10;    trials_review.finished=True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="force_write" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="please_write_more" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="please_write_more" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_to_show" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Your response was not long enough. Please provide us with more detailed feedback in the textbox. &amp;#10;Specifically,&amp;#10;&amp;#10;1) Which part of the instructions did you find most confusing? &amp;#10;2) Do you still remmember which transport takes you where or do you prefer a refresher? " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="init_code">
      <RoutineSettingsComponent name="init_code" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="init_code" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="python_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import random " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="python_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="codeInit" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="function randomsample(arr, size) {&amp;#10;    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;&amp;#10;    while (i-- &gt; min) {&amp;#10;        index = Math.floor((i + 1) * Math.random());&amp;#10;        temp = shuffled[index];&amp;#10;        shuffled[index] = shuffled[i];&amp;#10;        shuffled[i] = temp;&amp;#10;    }&amp;#10;    return shuffled.slice(min);&amp;#10;}" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import pandas as pd &amp;#10;sub_data=pd.read_csv('subject_breakdowns.csv',sep=',')&amp;#10;w_self_exp=[.4,.7,.9,1]&amp;#10;w_env_exp=[.6,.7,1,.4]&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;//document.body.style.cursor='none';" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="sub_data = new TrialHandler({&amp;#10;        psychoJS: psychoJS,&amp;#10;        nReps: 1, method: TrialHandler.Method.RANDOM,&amp;#10;        extraInfo: expInfo, originPath: undefined,&amp;#10;        trialList: 'subject_breakdown.csv',&amp;#10;        seed: undefined, name: 'sub_data'&amp;#10;});&amp;#10;&amp;#10;datasub = sub_data.getTrialList();&amp;#10;//which_four=randint(1,490);&amp;#10;&amp;#10;&amp;#10;//w_env_1=datasub[0]['w_env']  // row 1&amp;#10;//w_env_2=datasub[1]['w_env']  // row 2&amp;#10;&amp;#10;// If you want to create two arrays for two types of condition, &amp;#10;// you can filter the list of objects based on a variable in conditions file &amp;#10;// e.g., column labelled &quot;condition&quot; for condition 0 and condition 1&amp;#10;//cond0 = trialList.filter((trial) =&gt; trial['condition']==0)&amp;#10;//cond1 = trialList.filter((trial) =&gt; trial['condition']==1) &amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="corr_total=[]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="codeInit" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_JS_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="thisExp=psychoJS.experiment;&amp;#10;win=psychoJS.window;&amp;#10;event=psychoJS.eventManager;&amp;#10;shuffle = util.shuffle;&amp;#10;&amp;#10;random = Math.random;&amp;#10;randint = function(min, maxplusone) {&amp;#10;  return Math.floor(Math.random() * (maxplusone - min) ) + min;&amp;#10;}&amp;#10;range = function (size, startAt = 0) {&amp;#10;    return [...Array(size).keys()].map(i =&gt; i + startAt);&amp;#10;}&amp;#10;&amp;#10;&amp;#10;function randomsample(arr, size) {&amp;#10;    var shuffled = arr.slice(0), i = arr.length, min = i - size, temp, index;&amp;#10;    while (i-- &gt; min) {&amp;#10;        index = Math.floor((i + 1) * Math.random());&amp;#10;        temp = shuffled[index];&amp;#10;        shuffled[index] = shuffled[i];&amp;#10;        shuffled[i] = temp;&amp;#10;    }&amp;#10;    return shuffled.slice(min);&amp;#10;}&amp;#10;&amp;#10;&amp;#10;ecdfArray = function(data) {&amp;#10;&amp;#10;    &quot;use strict&quot;;&amp;#10;&amp;#10;    var f, sorted, xs, ps, i, j, l, xx;&amp;#10;&amp;#10;    if (Array.isArray(data) &amp;&amp; (data.length &gt; 0)) {&amp;#10;&amp;#10;      for (i = 0, l = data.length; i &lt; l; ++i) {&amp;#10;&amp;#10;        if (typeof(data[i]) !== 'number') {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + typeof(data[i]) + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        if (!isFinite(data[i])) {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + data[i] + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      sorted = data.slice().sort(function(a, b) {&amp;#10;&amp;#10;        return +a - b;&amp;#10;&amp;#10;      });&amp;#10;&amp;#10;      xs = [];&amp;#10;&amp;#10;      ps = [];&amp;#10;&amp;#10;      j = 0;&amp;#10;&amp;#10;      l = sorted.length;&amp;#10;&amp;#10;      xs[0] = sorted[0];&amp;#10;&amp;#10;      ps[0] = 1 / l;&amp;#10;&amp;#10;      for (i = 1; i &lt; l; ++i) {&amp;#10;&amp;#10;        xx = sorted[i];&amp;#10;&amp;#10;        if (xx === xs[j]) {&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        } else {&amp;#10;&amp;#10;          j++;&amp;#10;&amp;#10;          xs[j] = xx;&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      f = function(x) {&amp;#10;&amp;#10;        if (typeof(x) !== 'number') throw new TypeError('cdf function input must be a number, got:' + typeof(x));&amp;#10;&amp;#10;        if (Number.isNaN(x)) return Number.NaN;&amp;#10;&amp;#10;        var left = 0,&amp;#10;&amp;#10;          right = xs.length - 1,&amp;#10;&amp;#10;          mid, midval, iteration;&amp;#10;&amp;#10;        if (x &lt; xs[0]) return 0;&amp;#10;&amp;#10;        if (x &gt;= xs[xs.length - 1]) return 1;&amp;#10;&amp;#10;        iteration = 0;&amp;#10;&amp;#10;        while ((right - left) &gt; 1) {&amp;#10;&amp;#10;          mid = Math.floor((left + right) / 2);&amp;#10;&amp;#10;          midval = xs[mid];&amp;#10;&amp;#10;          if (x &gt; midval)&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;          else if (x &lt; midval)&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          else if (x === midval) {&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          }&amp;#10;&amp;#10;          ++iteration;&amp;#10;&amp;#10;          if (iteration&gt;40) throw new Error(&quot;cdf function exceeded 40 bisection iterations, aborting bisection loop&quot;);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        return ps[left];&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.xs = function() {&amp;#10;&amp;#10;        return xs;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.ps = function() {&amp;#10;&amp;#10;        return ps;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;    } else {&amp;#10;&amp;#10;      // missing or zero length data&amp;#10;&amp;#10;      throw new TypeError(&quot;cdf data must be an array of finite numbers, got: missing or empty array&quot;);&amp;#10;&amp;#10;    }&amp;#10;&amp;#10;    return f;&amp;#10;&amp;#10;  };&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_JS_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="for_sa_inst" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="cor_test_real=[]&amp;#10;num_consecutive_correct=0&amp;#10;num_ss_correct=0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cor_test_real = [];&amp;#10;num_consecutive_correct = 0;&amp;#10;num_ss_correct = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="for_sa_inst" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="cdf_function_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;ecdfArray = function(data) {&amp;#10;&amp;#10;    &quot;use strict&quot;;&amp;#10;&amp;#10;    var f, sorted, xs, ps, i, j, l, xx;&amp;#10;&amp;#10;    if (Array.isArray(data) &amp;&amp; (data.length &gt; 0)) {&amp;#10;&amp;#10;      for (i = 0, l = data.length; i &lt; l; ++i) {&amp;#10;&amp;#10;        if (typeof(data[i]) !== 'number') {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + typeof(data[i]) + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        if (!isFinite(data[i])) {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + data[i] + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      sorted = data.slice().sort(function(a, b) {&amp;#10;&amp;#10;        return +a - b;&amp;#10;&amp;#10;      });&amp;#10;&amp;#10;      xs = [];&amp;#10;&amp;#10;      ps = [];&amp;#10;&amp;#10;      j = 0;&amp;#10;&amp;#10;      l = sorted.length;&amp;#10;&amp;#10;      xs[0] = sorted[0];&amp;#10;&amp;#10;      ps[0] = 1 / l;&amp;#10;&amp;#10;      for (i = 1; i &lt; l; ++i) {&amp;#10;&amp;#10;        xx = sorted[i];&amp;#10;&amp;#10;        if (xx === xs[j]) {&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        } else {&amp;#10;&amp;#10;          j++;&amp;#10;&amp;#10;          xs[j] = xx;&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      f = function(x) {&amp;#10;&amp;#10;        if (typeof(x) !== 'number') throw new TypeError('cdf function input must be a number, got:' + typeof(x));&amp;#10;&amp;#10;        if (Number.isNaN(x)) return Number.NaN;&amp;#10;&amp;#10;        var left = 0,&amp;#10;&amp;#10;          right = xs.length - 1,&amp;#10;&amp;#10;          mid, midval, iteration;&amp;#10;&amp;#10;        if (x &lt; xs[0]) return 0;&amp;#10;&amp;#10;        if (x &gt;= xs[xs.length - 1]) return 1;&amp;#10;&amp;#10;        iteration = 0;&amp;#10;&amp;#10;        while ((right - left) &gt; 1) {&amp;#10;&amp;#10;          mid = Math.floor((left + right) / 2);&amp;#10;&amp;#10;          midval = xs[mid];&amp;#10;&amp;#10;          if (x &gt; midval)&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;          else if (x &lt; midval)&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          else if (x === midval) {&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          }&amp;#10;&amp;#10;          ++iteration;&amp;#10;&amp;#10;          if (iteration&gt;40) throw new Error(&quot;cdf function exceeded 40 bisection iterations, aborting bisection loop&quot;);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        return ps[left];&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.xs = function() {&amp;#10;&amp;#10;        return xs;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.ps = function() {&amp;#10;&amp;#10;        return ps;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;    } else {&amp;#10;&amp;#10;      // missing or zero length data&amp;#10;&amp;#10;      throw new TypeError(&quot;cdf data must be an array of finite numbers, got: missing or empty array&quot;);&amp;#10;&amp;#10;    }&amp;#10;&amp;#10;    return f;&amp;#10;&amp;#10;  };" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;ecdfArray = function(data) {&amp;#10;&amp;#10;    &quot;use strict&quot;;&amp;#10;&amp;#10;    var f, sorted, xs, ps, i, j, l, xx;&amp;#10;&amp;#10;    if (Array.isArray(data) &amp;&amp; (data.length &gt; 0)) {&amp;#10;&amp;#10;      for (i = 0, l = data.length; i &lt; l; ++i) {&amp;#10;&amp;#10;        if (typeof(data[i]) !== 'number') {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + typeof(data[i]) + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        if (!isFinite(data[i])) {&amp;#10;&amp;#10;          throw new TypeError(&quot;cdf data must be an array of finite numbers, got:&quot; + data[i] + &quot; at &quot; + i);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      sorted = data.slice().sort(function(a, b) {&amp;#10;&amp;#10;        return +a - b;&amp;#10;&amp;#10;      });&amp;#10;&amp;#10;      xs = [];&amp;#10;&amp;#10;      ps = [];&amp;#10;&amp;#10;      j = 0;&amp;#10;&amp;#10;      l = sorted.length;&amp;#10;&amp;#10;      xs[0] = sorted[0];&amp;#10;&amp;#10;      ps[0] = 1 / l;&amp;#10;&amp;#10;      for (i = 1; i &lt; l; ++i) {&amp;#10;&amp;#10;        xx = sorted[i];&amp;#10;&amp;#10;        if (xx === xs[j]) {&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        } else {&amp;#10;&amp;#10;          j++;&amp;#10;&amp;#10;          xs[j] = xx;&amp;#10;&amp;#10;          ps[j] = (1 + i) / l;&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;      }&amp;#10;&amp;#10;      f = function(x) {&amp;#10;&amp;#10;        if (typeof(x) !== 'number') throw new TypeError('cdf function input must be a number, got:' + typeof(x));&amp;#10;&amp;#10;        if (Number.isNaN(x)) return Number.NaN;&amp;#10;&amp;#10;        var left = 0,&amp;#10;&amp;#10;          right = xs.length - 1,&amp;#10;&amp;#10;          mid, midval, iteration;&amp;#10;&amp;#10;        if (x &lt; xs[0]) return 0;&amp;#10;&amp;#10;        if (x &gt;= xs[xs.length - 1]) return 1;&amp;#10;&amp;#10;        iteration = 0;&amp;#10;&amp;#10;        while ((right - left) &gt; 1) {&amp;#10;&amp;#10;          mid = Math.floor((left + right) / 2);&amp;#10;&amp;#10;          midval = xs[mid];&amp;#10;&amp;#10;          if (x &gt; midval)&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;          else if (x &lt; midval)&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          else if (x === midval) {&amp;#10;&amp;#10;            left = mid;&amp;#10;&amp;#10;            right = mid;&amp;#10;&amp;#10;          }&amp;#10;&amp;#10;          ++iteration;&amp;#10;&amp;#10;          if (iteration&gt;40) throw new Error(&quot;cdf function exceeded 40 bisection iterations, aborting bisection loop&quot;);&amp;#10;&amp;#10;        }&amp;#10;&amp;#10;        return ps[left];&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.xs = function() {&amp;#10;&amp;#10;        return xs;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;      f.ps = function() {&amp;#10;&amp;#10;        return ps;&amp;#10;&amp;#10;      };&amp;#10;&amp;#10;    } else {&amp;#10;&amp;#10;      // missing or zero length data&amp;#10;&amp;#10;      throw new TypeError(&quot;cdf data must be an array of finite numbers, got: missing or empty array&quot;);&amp;#10;&amp;#10;    }&amp;#10;&amp;#10;    return f;&amp;#10;&amp;#10;  };" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="cdf_function_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_transitions" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# start &amp;#10;island_b0='islands/hut.png'&amp;#10;island_b1='islands/desert.png'&amp;#10;islands_start=[island_b0,island_b1]&amp;#10;&amp;#10;#island arrival&amp;#10;island_0='islands/mountain.png'&amp;#10;island_1='islands/town.png'&amp;#10;islands=[island_0,island_1]&amp;#10;&amp;#10;#boat='planes/sailboat.png'&amp;#10;plane='planes/plane.png'&amp;#10;train='planes/train.png'&amp;#10;transport=[plane,train]&amp;#10;&amp;#10;&amp;#10;switch_i=random.randint(0,1)&amp;#10;if switch_i==0:&amp;#10;    state_transitions = {&amp;#10;    islands_start[0]:islands[0],&amp;#10;    islands_start[1]:islands[1]&amp;#10;        }&amp;#10;else:&amp;#10;       state_transitions = {&amp;#10;    islands_start[1]:islands[0],&amp;#10;    islands_start[0]:islands[1]&amp;#10;        }&amp;#10;&amp;#10;&amp;#10;switch_t=random.randint(0,1)&amp;#10;action_transitions ={boat:island_0,train:island_1,plane:island_2}&amp;#10;if switch_i==0:&amp;#10;    action_transitions = {&amp;#10;    plane:islands[0],&amp;#10;    train:islands[1]&amp;#10;        }&amp;#10;else:&amp;#10;       action_transitions = {&amp;#10;    train:islands[0],&amp;#10;    plane:islands[1]&amp;#10;        }&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;total_earned=0&amp;#10;&amp;#10;&amp;#10;cor_test_real=[]&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="island_b0 = &quot;islands/hut.png&quot;;&amp;#10;island_b1 = &quot;islands/desert.png&quot;;&amp;#10;islands_start = [island_b0, island_b1];&amp;#10;island_0 = &quot;islands/mountain.png&quot;;&amp;#10;island_1 = &quot;islands/town.png&quot;;&amp;#10;islands = [island_0, island_1];&amp;#10;plane = &quot;planes/plane.png&quot;;&amp;#10;train = &quot;planes/train.png&quot;;&amp;#10;transport = [plane, train];&amp;#10;switch_i = randint(0, 1);&amp;#10;if ((switch_i === 0)) {&amp;#10;    state_transitions = {[islands_start[0]]: islands[0], [islands_start[1]]: islands[1]};&amp;#10;} else {&amp;#10;    state_transitions = {[islands_start[1]]: islands[0], [islands_start[0]]: islands[1]};&amp;#10;}&amp;#10;switch_t = randint(0, 1);&amp;#10;if ((switch_i === 0)) {&amp;#10;    action_transitions = {[plane]: islands[0], [train]: islands[1]};&amp;#10;} else {&amp;#10;    action_transitions = {[train]: islands[0], [plane]: islands[1]};&amp;#10;}&amp;#10;total_earned = 0;&amp;#10;cor_test_real = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_transitions" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="track_experiment_duration" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;var todays= new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });&amp;#10;psychoJS.experiment.addData(&quot;experiment_started&quot;, todays);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="track_experiment_duration" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="action_setup" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="performance_arr=[];" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cor_test_real=[];&amp;#10;get_times=[0]*20;&amp;#10;corr_total=[];&amp;#10;soon_hard=0;&amp;#10;reivew=0; &amp;#10;corr_total_strict=[];&amp;#10;corr_total_rebuy=[];&amp;#10;time_for_hard_officer=false;&amp;#10;performance_arr=[];" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="action_setup" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_w_env_w_self" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (expInfo[&quot;participant&quot;].length) {&amp;#10;    part_id = expInfo[&quot;participant&quot;];&amp;#10;    s = &quot;id was succesful&quot;;&amp;#10;} else {&amp;#10;    part_id = randint(3, 60);&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;id_number&quot;, (part_id * 10000));&amp;#10;psychoJS.experiment.addData(&quot;participant&quot;, (part_id * 10000));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#w_self_full=[.05,.45,.8,1];&amp;#10;#w_env_full=[.2,.95,.8,.5];&amp;#10;&amp;#10;&amp;#10;if len(expInfo['participant']):&amp;#10;     part_id=expInfo['participant']&amp;#10;     s='id was succesful'&amp;#10;else:&amp;#10;    part_id=randint(3,50);&amp;#10;&amp;#10;&amp;#10; &amp;#10;psychoJS.experiment.addData(&quot;id_number&quot;, part_id*1000);&amp;#10;psychoJS.experiment.addData(&quot;participant&quot;, part_id*1000);&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_w_env_w_self" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="logistic_regression" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, numIterations, learningRate) {&amp;#10;  const m = features.length;&amp;#10;  const n = features[0].length;&amp;#10;  let weights = new Array(n + 1).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; numIterations; i++) {&amp;#10;    for (let j = 0; j &lt; m; j++) {&amp;#10;      let prediction = sigmoid(dotProduct(weights, [1, ...features[j]]));&amp;#10;      let error = prediction - labels[j];&amp;#10;      for (let k = 0; k &lt; n + 1; k++) {&amp;#10;        weights[k] = weights[k] - learningRate * error * ([1, ...features[j]][k]);&amp;#10;      }&amp;#10;    }&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.map((x, i) =&gt; a[i] * b[i]).reduce((m, n) =&gt; m + n);&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="// sigmoid function&amp;#10;function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;// logistic regression function&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  // add intercept column of 1s to features&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  // initialize weights&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    // calculate predictions&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}&amp;#10;&amp;#10;&amp;#10;//features = [[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.1],[ .2],[ .5],[ .7],[.4],[.4],[.4],[.4],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9],[.9]];&amp;#10;&amp;#10;//labels = [0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1];&amp;#10;numIterations = 120000;&amp;#10;learningRate = 0.01;&amp;#10;&amp;#10;//var weight = logisticRegression(features, labels, numIterations, learningRate);&amp;#10;//console.log(weight);" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="features = [[1, 2], [2, 3], [3, 4], [4, 5]];&amp;#10;labels = [0, 0, 1, 1];&amp;#10;&amp;#10;weights = logisticRegression(features, labels, 100, 0.01);&amp;#10;&amp;#10;console.log(weights); // [0.10330454545454545, -0.03795454545454545]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="logistic_regression" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="init_block">
      <RoutineSettingsComponent name="init_block" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="init_block" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="colors" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="l1 = [(0.18), (0.38), (0.95)];&amp;#10;l2 = [(.4), (.16), (.16)];&amp;#10;l3 = [(1 / 225), (45 / 225), (110 / 225)];&amp;#10;l4 = [(28 / 225), (28 / 225), (28 / 225)];&amp;#10;&amp;#10;l5 = [(28 / 225), (128 / 225), (38 / 225)];&amp;#10;l6 = [(130 / 225), (45 / 225), (110 / 225)];&amp;#10;l7 = [(128 / 225), (28 / 225), (28 / 225)];&amp;#10;l8 = [(255/255),(222/255),(222/255)];&amp;#10;l9= [(236/255),(255/255),(220/255)];&amp;#10;l10=[(242/255),(204/255),(132/255)];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="l1 = [(0.8039), (0.8039), (0.9608)];&amp;#10;l2 = [(100 / 225), (36 / 225), (36 / 225)];&amp;#10;l3 = [(30 / 225), (45 / 225), (110 / 225)];&amp;#10;l4 = [(28 / 225), (28 / 225), (28 / 225)];&amp;#10;&amp;#10;l5 = [(28 / 225), (28 / 225), (28 / 225)];&amp;#10;l6 = [(30 / 225), (45 / 225), (110 / 225)];&amp;#10;l7 = [(28 / 225), (28 / 225), (28 / 225)];&amp;#10;l8 = [(255/255),(222/255),(222/255)];&amp;#10;l9= [(255/255),(240/255),(203/255)];&amp;#10;l10=[(242/255),(204/255),(132/255)];&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="colors" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_w" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//w_self = w_self_exp[block.thisN];&amp;#10;//w_env = w_env_exp[block.thisN];&amp;#10;//w_envs=1;&amp;#10;//w_envs=datasub[which_four*4+block.thisRepN]['w_env'];  // set w_env&amp;#10;//w_self=datasub[which_four*4+block.thisRepN]['w_self'];  // set w_self&amp;#10;//theoretical_mean_ev=datasub[which_four*4+block.thisN]['overall_ev'];  // set w_self&amp;#10;//optimal_actions=datasub[which_four*4+block.thisN]['type'];  // set w_self&amp;#10;//ev1=datasub[which_four*4+block.thisN]['ev1'];  // set w_self&amp;#10;//ev2=datasub[which_four*4+block.thisN]['ev2'];  // set w_self&amp;#10;//ev3=datasub[which_four*4+block.thisN]['ev3'];  // set w_self&amp;#10;&amp;#10;&amp;#10;    &amp;#10;//part_id +=20; &amp;#10;console.log('session is ' + part_id);&amp;#10;//c_inelastic=datasub[part_id*4+block.thisRepN]['w_env'];  // set w_env&amp;#10;//c_elastic=datasub[part_id*4+block.thisRepN]['w_self'];  // set w_self&amp;#10;console.log(&quot;c_inelastic is &quot;+ c_inelastic);&amp;#10;console.log(&quot;c_elastic is &quot;+ c_elastic);&amp;#10;&amp;#10;//theoretical_mean_ev=datasub[which_four*4+block.thisN]['overall_ev'];  // set w_self&amp;#10;//optimal_actions=datasub[which_four*4+block.thisN]['type'];  // set w_self&amp;#10;&amp;#10;&amp;#10;&amp;#10;//w_env=w_envs;&amp;#10;// Initialize the vector with all zeros&amp;#10;let vector = [];&amp;#10;&amp;#10;for(let i = 0; i &lt; 6; i++) {&amp;#10;  // generate a subarray of 4 ones followed by a zero&amp;#10;  let subarray = Array(4).fill(1);&amp;#10;  subarray.push(0);&amp;#10;  &amp;#10;  // shuffle the subarray randomly&amp;#10;  for(let j = subarray.length - 1; j &gt; 0; j--) {&amp;#10;    const k = Math.floor(Math.random() * (j + 1));&amp;#10;    [subarray[j], subarray[k]] = [subarray[k], subarray[j]];&amp;#10;  }&amp;#10;  &amp;#10;  // add the subarray to the vector&amp;#10;  vector = vector.concat(subarray);&amp;#10;}&amp;#10;&amp;#10;console.log(vector); &amp;#10;shuffledArray=vector;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="w_self=w_self_exp[block.thisN]&amp;#10;w_env=w_env_exp[block.thisN]&amp;#10;&amp;#10;&amp;#10;# set colors&amp;#10;&amp;#10;l1=[[222/225,185/225,135/225]]&amp;#10;l2=[100/225,36/225,36/225]&amp;#10;l3=[30/225,45/225,110/225]&amp;#10;l4=[28/225,28/225,28/225]&amp;#10;l1.append(l2)&amp;#10;l1.append(l3)&amp;#10;l1.append(l4)&amp;#10;color_back=l1[block.thisN]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_w" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="pre_generate_success" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function generateVectors(fractionOnes) {&amp;#10;  var combinedVector = [];&amp;#10;&amp;#10;  // Generate 3 vectors&amp;#10;  for (var i = 0; i &lt; 3; i++) {&amp;#10;    var vector = generateVector(fractionOnes);&amp;#10;    combinedVector = combinedVector.concat(vector);&amp;#10;  }&amp;#10;&amp;#10;  return combinedVector;&amp;#10;}&amp;#10;&amp;#10;// Function to generate a vector with the specified specifications&amp;#10;function generateVector(fractionOnes) {&amp;#10;  var vector = [];&amp;#10;&amp;#10;  // Calculate the desired number of ones for the total vector&amp;#10;  var totalOnes = Math.floor(fractionOnes * 10);&amp;#10;&amp;#10;  // Calculate the number of ones for the first sub-vector&amp;#10;  var onesSubVector1 = Math.floor(totalOnes / 2);&amp;#10;&amp;#10;  // Generate the first sub-vector&amp;#10;  var subVector1 = generateSubVector(onesSubVector1);&amp;#10;  shuffleSubVector(subVector1, 3); // Shuffle the sub-vector three times&amp;#10;&amp;#10;  // Calculate the number of ones for the second sub-vector&amp;#10;  var onesSubVector2 = totalOnes - onesSubVector1;&amp;#10;&amp;#10;  // Generate the second sub-vector&amp;#10;  var subVector2 = generateSubVector(onesSubVector2);&amp;#10;  shuffleSubVector(subVector2, 3); // Shuffle the sub-vector three times&amp;#10;&amp;#10;  // Alternate between combining the sub-vectors in different orders&amp;#10;  if (Math.random() &lt; 0.5) {&amp;#10;    vector = vector.concat(subVector1, subVector2);&amp;#10;  } else {&amp;#10;    vector = vector.concat(subVector2, subVector1);&amp;#10;  }&amp;#10;&amp;#10;  return vector;&amp;#10;}&amp;#10;&amp;#10;// Function to generate a sub-vector with the desired number of ones&amp;#10;function generateSubVector(onesCount) {&amp;#10;  var subVector = [];&amp;#10;  for (var i = 0; i &lt; onesCount; i++) {&amp;#10;    subVector.push(1);&amp;#10;  }&amp;#10;  while (subVector.length &lt; 5) {&amp;#10;    subVector.push(0);&amp;#10;  }&amp;#10;  return subVector;&amp;#10;}&amp;#10;&amp;#10;// Function to shuffle a sub-vector randomly a specified number of times&amp;#10;function shuffleSubVector(subVector, numShuffles) {&amp;#10;  for (var i = 0; i &lt; numShuffles; i++) {&amp;#10;    shuffleVector(subVector);&amp;#10;  }&amp;#10;}&amp;#10;&amp;#10;// Function to shuffle a vector randomly&amp;#10;function shuffleVector(vector) {&amp;#10;  for (var i = vector.length - 1; i &gt; 0; i--) {&amp;#10;    var j = Math.floor(Math.random() * (i + 1));&amp;#10;    var temp = vector[i];&amp;#10;    vector[i] = vector[j];&amp;#10;    vector[j] = temp;&amp;#10;  }&amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pre_generate_success" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="num_blocks = 10;&amp;#10;if ((block.thisN &lt; 6)) {&amp;#10;    trial_length = 15;&amp;#10;} else {&amp;#10;    trial_length = 30;&amp;#10;}&amp;#10;if (((block.thisN === 0) || (block.thisN === 4))) {&amp;#10;    c_elastic = 0.0;&amp;#10;    c_inelastic = 0.9;&amp;#10;} else {&amp;#10;    if (((block.thisN === 1) || (block.thisN === 3))) {&amp;#10;        c_elastic = 0.9;&amp;#10;        c_inelastic = 0.0;&amp;#10;    } else {&amp;#10;        if (((block.thisN === 2) || (block.thisN === 5))) {&amp;#10;            c_elastic = 0.1;&amp;#10;            c_inelastic = 0.1;&amp;#10;        } else {&amp;#10;            if ((block.thisN === 6)) {&amp;#10;                c_elastic = 0.34;&amp;#10;                c_inelastic = 0.33;&amp;#10;            } else {&amp;#10;                c_inelastic = datasub[(((part_id * 3) + block.thisN) - 7)][&quot;c_inelastic&quot;];&amp;#10;                c_elastic = datasub[(((part_id * 3) + block.thisN) - 7)][&quot;c_elastic&quot;];&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;util.shuffle(l1);&amp;#10;if ((block.thisN === 0)) {&amp;#10;    color_back = l1;&amp;#10;} else {&amp;#10;    if ((block.thisN === 1)) {&amp;#10;        color_back = l2;&amp;#10;    } else {&amp;#10;        if ((block.thisN === 2)) {&amp;#10;            color_back = l3;&amp;#10;        } else {&amp;#10;            if ((block.thisN === 3)) {&amp;#10;                color_back = l4;&amp;#10;            } else {&amp;#10;                if ((block.thisN === 4)) {&amp;#10;                    color_back = l5;&amp;#10;                } else {&amp;#10;                    if ((block.thisN === 5)) {&amp;#10;                        color_back = l6;&amp;#10;                    } else {&amp;#10;                        if ((block.thisN === 6)) {&amp;#10;                            color_back = l7;&amp;#10;                        } else {&amp;#10;                            if ((block.thisN === 7)) {&amp;#10;                                color_back = l8;&amp;#10;                            } else {&amp;#10;                                if ((block.thisN === 8)) {&amp;#10;                                    color_back = l9;&amp;#10;                                } else {&amp;#10;                                    if ((block.thisN === 9)) {&amp;#10;                                        color_back = l10;&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;in_task = true;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_blocks=10&amp;#10;if block.thisN&lt;6:&amp;#10;    trial_length=15&amp;#10;else:&amp;#10;    trial_length=30&amp;#10;    &amp;#10;if block.thisN==0 or block.thisN==4:&amp;#10;    c_elastic=0.0&amp;#10;    c_inelastic=0.9&amp;#10;elif block.thisN==1 or block.thisN==3:&amp;#10;    c_elastic=.9&amp;#10;    c_inelastic=0.0&amp;#10;elif block.thisN==2 or block.thisN==5:&amp;#10;    c_elastic=.1&amp;#10;    c_inelastic=.1&amp;#10;elif block.thisN==6:&amp;#10;    # ambigious block&amp;#10;    c_elastic=.34&amp;#10;    c_inelastic=.33&amp;#10;else:&amp;#10;    c_inelastic=datasub[part_id*3+block.thisN-7]['c_inelastic'];  &amp;#10;    c_elastic=datasub[part_id*3+block.thisN-7]['c_elastic'];  &amp;#10;&amp;#10;    &amp;#10;    &amp;#10;#else:&amp;#10; #   c_inelastic=datasub[part_id*3+block.thisN-7]['c_inelastic'];  &amp;#10;  #  c_elastic=datasub[part_id*3+block.thisN-7]['c_elastic'];  &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;#l1.push(l2);&amp;#10;#l1.push(l3);&amp;#10;#l1.push(l4);&amp;#10;#l1.push(l5);&amp;#10;#l1.push(l6);&amp;#10;#l1.push(l7);&amp;#10;#l1.push(l8);&amp;#10;#l1.push(l9);&amp;#10;#l1.push(l10);&amp;#10;shuffle(l1)&amp;#10;if block.thisN==0:&amp;#10;    color_back=l1&amp;#10;elif block.thisN==1:&amp;#10;    color_back=l2&amp;#10;    &amp;#10;elif block.thisN==2:&amp;#10;    color_back=l3&amp;#10;elif block.thisN==3:&amp;#10;    color_back=l4&amp;#10;elif block.thisN==4:&amp;#10;    color_back=l5&amp;#10;    &amp;#10;elif block.thisN==5:&amp;#10;    color_back=l6&amp;#10;elif block.thisN==6:&amp;#10;    color_back=l7&amp;#10;elif block.thisN==7:&amp;#10;    color_back=l8&amp;#10;    &amp;#10;elif block.thisN==8:&amp;#10;    color_back=l9&amp;#10;elif block.thisN==9:&amp;#10;    color_back=l10&amp;#10;&amp;#10;&amp;#10;in_task=True&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="actually_generate_vector" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="percentageOfOnes = c_inelastic;&amp;#10;percentageOfTwos =   (c_inelastic+c_elastic/2);&amp;#10;percentageOfThrees = (c_inelastic+c_elastic);&amp;#10;&amp;#10;single_ticket_success = generateVectors(percentageOfOnes);&amp;#10;two_ticket_success = generateVectors(percentageOfTwos);&amp;#10;three_ticket_success = generateVectors(percentageOfThrees);&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;single_ticket_sucess&quot;, single_ticket_success);&amp;#10;psychoJS.experiment.addData(&quot;two_ticket_sucess&quot;, two_ticket_success);&amp;#10;psychoJS.experiment.addData(&quot;three_ticket_sucess&quot;, three_ticket_success);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="actually_generate_vector" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="make_choice">
      <RoutineSettingsComponent name="make_choice" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="make_choice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_15" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="num_actions = 1;&amp;#10;feedback_action = [];&amp;#10;timedOut = false;&amp;#10;if ((cs === 0)) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    continueRoutine = true;&amp;#10;}&amp;#10;cur_winnings.alignHoriz = &quot;left&quot;;&amp;#10;feedback_action = [];&amp;#10;timedOut = false;&amp;#10;if (((cs === 1) &amp;&amp; (forced_actions === false))) {&amp;#10;    show_total_earned = (total_earned - 40);&amp;#10;} else {&amp;#10;    show_total_earned = total_earned;&amp;#10;}&amp;#10;if ((forced_actions === true)) {&amp;#10;    proscribed_actions = 3;&amp;#10;    forced = 10;&amp;#10;    gors = 0;&amp;#10;} else {&amp;#10;    forced = 0;&amp;#10;    if ((block.thisN &lt; 6)) {&amp;#10;        gors = 0;&amp;#10;    } else {&amp;#10;        gors = 10;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="num_actions=1&amp;#10;feedback_action=[]&amp;#10;timedOut=false&amp;#10;#continueRoutine=False &amp;#10;&amp;#10;if cs==0:&amp;#10;&amp;#10;        &amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;else:&amp;#10;    continueRoutine=True&amp;#10;&amp;#10;cur_winnings.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;feedback_action=[]&amp;#10;timedOut=false&amp;#10;&amp;#10;if cs==1 and forced_actions==false:&amp;#10;    show_total_earned=total_earned-40&amp;#10;else:&amp;#10;    show_total_earned=total_earned&amp;#10;&amp;#10;if forced_actions==True:&amp;#10;    proscribed_actions=3&amp;#10;    forced=10&amp;#10;    gors=0&amp;#10;else:&amp;#10;    &amp;#10;    forced=0&amp;#10;    if block.thisN&lt;6:&amp;#10;        gors=0&amp;#10;    else:&amp;#10;        gors=10&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log((&quot;forced actions post choice&quot; + forced_actions.toString()));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(&quot;forced actions post choice&quot;+str(forced_actions))&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="press1_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="press1_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 1 " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="dep_island" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="left_choice" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left_choice" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24,.48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="right_choice" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right_choice" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="destination_island" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="destination_island" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="1,'1','9',9" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="cur_winnings" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cur_winnings" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.8,.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$gors" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'\n'+'Total Earnings Before Ticket: ' + str(show_total_earned+40)+'\nTotal Earnings After Ticket: '+str(show_total_earned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="timeOut2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="total_opt_timedOut=0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="startchoiceTime = new Date();&amp;#10;psychoJS.experiment.addData(&quot;choice_started&quot;, startchoiceTime);&amp;#10;choice_timedOut=false;&amp;#10;start_choice = Math.floor(startchoiceTime.getTime() / 1000);&amp;#10;total_choice_timedOut=0;&amp;#10;&amp;#10;if ((forced_actions === true)){&amp;#10;    timeAllowed=15;&amp;#10;} else {&amp;#10;    timeAllowed=15;&amp;#10;  &amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="time_choice = new Date();&amp;#10;currentChoice_time= Math.floor(time_choice.getTime() / 1000);&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (((currentChoice_time - start_choice) &gt; timeAllowed)) {&amp;#10;    timeOfChoicetimeOut = currentChoice_time;&amp;#10;&amp;#10;    psychoJS.experiment.addData(&quot;choice_timeout_time&quot;, timeOfChoicetimeOut);&amp;#10;    psychoJS.experiment.addData(&quot;choice_timeout&quot;, 1);&amp;#10;    cs=0;&amp;#10;    retry_loop=0;&amp;#10;    total_choice_timedOut+=1;&amp;#10;&amp;#10;    choice_timedOut=true;&amp;#10;&amp;#10;    continueRoutine = false;&amp;#10;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="&amp;#10;end_choice = new Date();&amp;#10;end_choice_time= Math.floor(end_choice.getTime() / 1000);&amp;#10;psychoJS.experiment.addData(&quot;end_choice_time&quot;, end_choice_time);&amp;#10;&amp;#10;&amp;#10;&amp;#10;if ((total_choice_timedOut&gt;7)){&amp;#10;    psychoJS.quit({message: 'You have timed out too many times and therefore cannot proceed with the study'});&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="timeOut2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="press9" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="press9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 9" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="planet_number_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="planet_number_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.75,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Planet ' +str(block.thisN+1) +' of ' +str(num_blocks)+ '\nTrip '+str(trials_task.thisN+1)+' of ' + str(trial_length)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="transport_rules/Slide1.jpeg" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.65, .65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_14" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.12" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.75, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$forced" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Free ticket! " valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="show_choice">
      <RoutineSettingsComponent name="show_choice" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="show_choice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="show_plane_selected" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="continueRoutine = false;&amp;#10;if (((cs === 0) || (choice_timedOut === true))) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    if ((trials_task.thisN &lt; (num_1_actions + num_3_actions))) {&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((forced_actions === true)) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((cs === 1)) {&amp;#10;    comp = 0;&amp;#10;    num_actions = 1;&amp;#10;    start_time = 0;&amp;#10;    if ((key_resp_2.keys === &quot;1&quot;)) {&amp;#10;        plane_selected = left_plane;&amp;#10;        var_time_left = 10;&amp;#10;        var_time_right = 0;&amp;#10;    } else {&amp;#10;        if ((key_resp_2.keys === &quot;9&quot;)) {&amp;#10;            plane_selected = right_plane;&amp;#10;            var_time_left = 0;&amp;#10;            var_time_right = 10;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;console.log(&quot;no issues 3&quot;);&amp;#10;if ((trials_task.thisN &gt;= total_num_forced)) {&amp;#10;    after_total_actions = 10;&amp;#10;} else {&amp;#10;    after_total_actions = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="continueRoutine=false &amp;#10;if cs==0 or choice_timedOut==True:&amp;#10;    continueRoutine=false&amp;#10;elif trials_task.thisN&lt;num_1_actions+num_3_actions:&amp;#10;    continueRoutine=false&amp;#10;elif forced_actions==True:&amp;#10;    continueRoutine=false&amp;#10;&amp;#10;    &amp;#10;&amp;#10;#means subject opted into choice &amp;#10;if cs==1:&amp;#10;    # do we show the fact that the computer is choosing&amp;#10;    comp=0&amp;#10;    num_actions=1&amp;#10;   # acted_or_not=1.5&amp;#10;    #when do we show plane selected&amp;#10;    start_time=0&amp;#10;    if key_resp_2.keys=='1':&amp;#10;        plane_selected=left_plane&amp;#10;        var_time_left=10&amp;#10;        var_time_right=0&amp;#10;    &amp;#10;    elif key_resp_2.keys=='9':&amp;#10;        plane_selected=right_plane&amp;#10;        var_time_left=0&amp;#10;        var_time_right=10&amp;#10;        &amp;#10;&amp;#10;print('no issues 3')&amp;#10;&amp;#10;&amp;#10;if trials_task.thisN&gt;=total_num_forced:&amp;#10;    after_total_actions=10&amp;#10;else:&amp;#10;    after_total_actions=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="show_plane_selected" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="dep_island_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="right_choice_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right_choice_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$var_time_right" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="destination_island_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="destination_island_3" valType="code" updates="None" name="name"/>
        <Param val=".4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="left_choice_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left_choice_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$var_time_left" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="treasure" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="treasure" valType="code" updates="None" name="name"/>
        <Param val=".4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="planet_number_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="planet_number_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.75,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Planet ' +str(block.thisN+1) +' of ' +str(num_blocks)+ '\nTrip '+str(trials_task.thisN+1)+' of ' + str(trial_length)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="data_saving_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(&quot;no issues 4&quot;);&amp;#10;psychoJS.experiment.addData(&quot;method_selected&quot;, plane_selected);&amp;#10;if (((cs === 1) &amp;&amp; (action_transitions[plane_selected] === end_island))) {&amp;#10;    psychoJS.experiment.addData(&quot;correct_chosen&quot;, 1);&amp;#10;} else {&amp;#10;    if ((cs === 0)) {&amp;#10;        psychoJS.experiment.addData(&quot;correct_chosen&quot;, &quot;&quot;);&amp;#10;    } else {&amp;#10;        psychoJS.experiment.addData(&quot;correct_chosen&quot;, 0);&amp;#10;    }&amp;#10;}&amp;#10;success_act = [];&amp;#10;timedOut = false;&amp;#10;buy_Second_ticket.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#where to put computer opt in and self opt in&amp;#10;print('no issues 4')&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;method_selected&quot;, plane_selected)&amp;#10;if cs==1 and action_transitions[plane_selected]==end_island:&amp;#10;    thisExp.addData(&quot;correct_chosen&quot;, 1)&amp;#10;elif cs==0:&amp;#10;    thisExp.addData(&quot;correct_chosen&quot;, '')&amp;#10;else:&amp;#10;    thisExp.addData(&quot;correct_chosen&quot;, 0)&amp;#10;    &amp;#10;&amp;#10;# only if he opted in will this even be recorded in which case he was wrong&amp;#10;&amp;#10;&amp;#10;success_act=[]&amp;#10;timedOut=False&amp;#10;&amp;#10;buy_Second_ticket.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_resp_6.keys === &quot;n&quot;)) {&amp;#10;    retry_loop = 0;&amp;#10;    num_actions = 1;&amp;#10;}&amp;#10;console.log(&quot;no issues 5&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_6.keys=='n':&amp;#10;    retry_loop=0&amp;#10;    num_actions=1&amp;#10;print('no issues 5')&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="data_saving_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6" plugin="None">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="buy_Second_ticket" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="buy_Second_ticket" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.35, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Do you want to purchase the 2nd ticket (cost: 20 coins) to jump from the platform&amp;#10;&amp;#10;Yes, in case my ride doesn't stop (press y)&amp;#10;No I'll wait (press n) &amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="action_distinction" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="distinguiish_actions/Slide3.jpeg" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="action_distinction" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.7, .7)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.4, 0.4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="action_prep_2">
      <RoutineSettingsComponent name="action_prep_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="action_prep_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_20" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="warning_2.alignHoriz = &quot;left&quot;;&amp;#10;if ((retry.thisN === 0)) {&amp;#10;    depends_which_attempt = 10;&amp;#10;    slide_n = 1;&amp;#10;} else {&amp;#10;    depends_which_attempt = 10;&amp;#10;    slide_n = 2;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="warning_2.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;if retry.thisN==0:&amp;#10;    depends_which_attempt=10&amp;#10;    slide_n=1&amp;#10;else:&amp;#10;    depends_which_attempt=10&amp;#10;    slide_n=2" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_20" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="initiate_countdown" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;if ((retry.thisN===0)) {&amp;#10;    startTime = new Date();&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="leftTime = new Date();&amp;#10;timeelapsed = (startTime - leftTime)/1000&amp;#10;text_9 = Math.round(11+timeelapsed)" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initiate_countdown" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_if_timeout_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="time_s = new Date();&amp;#10;action_c = Math.floor(time_s.getTime() / 1000);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_if_timeout_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_26" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((retry.thisN === 0)) {&amp;#10;     time_now = new Date();&amp;#10;     action_started = Math.floor(time_now.getTime() / 1000);&amp;#10;     psychoJS.experiment.addData(&quot;action_started&quot;, action_started);&amp;#10;&amp;#10;    &amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if retry.thisN==0:&amp;#10;    a=1&amp;#10;    &amp;#10;    #const time_now = new Date();&amp;#10;    #const action_started = Math.floor(time_now.getTime() / 1000);&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_26" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="warning_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="warning_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4, .35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press the spacebar when your ride is in the middle of the screen&amp;#10;&amp;#10;Press space to continue&amp;#10;&amp;#10;(timer is running)" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="ready_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="ready_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="execute_loop_exit_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if action_c-action_started&gt;9:&amp;#10;    retry.finished=True&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;    &amp;#10;print('action time was '+action_c-action_started)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((action_c - action_started) &gt; 13)) {&amp;#10;    action_cr = Math.floor(time_s.getTime() / 1000);&amp;#10;&amp;#10;    psychoJS.experiment.addData(&quot;action_ended&quot;, action_cr);&amp;#10;    timedOut=true;&amp;#10;    &amp;#10;    retry.finished = true;&amp;#10;&amp;#10;    continueRoutine = false;&amp;#10;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="execute_loop_exit_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="object_type_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((plane_selected === plane)) {&amp;#10;    selected_object = &quot;plane&quot;;&amp;#10;} else {&amp;#10;    if ((plane_selected === train)) {&amp;#10;        selected_object = &quot;train&quot;;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if plane_selected==plane:&amp;#10;    selected_object='plane'&amp;#10;&amp;#10;elif plane_selected==train:&amp;#10;    selected_object='train'&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="object_type_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="new_platform" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'distinguiish_actions/Slide' + str(slide_n) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.464)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="action_exec">
      <RoutineSettingsComponent name="action_exec" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="action_exec" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="polygon_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="initiate_countdown_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="leftTime = new Date();&amp;#10;timeelapsed = (startTime - leftTime)/1000&amp;#10;text_9 = Math.round(8+timeelapsed)" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initiate_countdown_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="easy_or_hard" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((timedOut === true)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#if easy.finished==False:&amp;#10; #   hard_or_easy_one=0&amp;#10;#else:&amp;#10; #   hard_or_easy_one=1&amp;#10;if timedOut==true:&amp;#10;    continueRoutine = false;&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="easy_or_hard" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="moving" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="yScale=.45&amp;#10;minSize = .1&amp;#10;maxSize = .1&amp;#10;pathStart=[-1,-.95]&amp;#10;pathN = 0&amp;#10;xScale=win.size[0]/win.size[1]*.45&amp;#10;&amp;#10;posClock = core.Clock()&amp;#10;sizeClock = core.Clock()&amp;#10;&amp;#10;#myPaths = data.TrialHandler(&amp;#10;#nReps=1, &amp;#10;#method='sequential', &amp;#10;#extraInfo=expInfo, &amp;#10;#originPath=-1, &amp;#10;#trialList=data.importConditions('Book1paths.xlsx'), &amp;#10;#seed=None, &amp;#10;#name='myPaths')&amp;#10;current_pos=[1]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="yScale = 0.45;&amp;#10;minSize = 0.1;&amp;#10;maxSize = 0.1;&amp;#10;pathStart = [(- 1), (- 0.95)];&amp;#10;pathN = 0;&amp;#10;xScale = ((psychoJS.window.size[0] / psychoJS.window.size[1]) * 0.45);&amp;#10;posClock = new util.Clock();&amp;#10;sizeClock = new util.Clock();&amp;#10;current_pos = [1];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="yScale = 0.45;&amp;#10;minSize = 0.1;&amp;#10;maxSize = 0.1;&amp;#10;cuePulse = 3;&amp;#10;pathStart = [(- 1), (- 0.9)];&amp;#10;pathN = 0;&amp;#10;xScale = ((psychoJS.window.size[0] / psychoJS.window.size[1]) * 0.45);&amp;#10;posClock = new util.Clock();&amp;#10;sizeClock = new util.Clock();&amp;#10;cueSize = minSize;&amp;#10;cuePos = pathStart;&amp;#10;posClock.reset();&amp;#10;sizeClock.reset();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="yScale=.45&amp;#10;minSize = .1&amp;#10;maxSize = .1&amp;#10;cuePulse = 3&amp;#10;pathStart=[-1,-.9]&amp;#10;pathN = 0&amp;#10;xScale=win.size[0]/win.size[1]*.45&amp;#10;&amp;#10;posClock = core.Clock()&amp;#10;sizeClock = core.Clock()&amp;#10;&amp;#10;#myPaths = data.TrialHandler(&amp;#10;#nReps=1, &amp;#10;#method='sequential', &amp;#10;#extraInfo=expInfo, &amp;#10;#originPath=-1, &amp;#10;#trialList=data.importConditions('Book1paths.xlsx'), &amp;#10;#seed=None, &amp;#10;#name='myPaths')&amp;#10;&amp;#10;&amp;#10;&amp;#10;#thisPath = myPaths.next()&amp;#10;cueSize = minSize&amp;#10;cuePos = pathStart&amp;#10;posClock.reset()&amp;#10;sizeClock.reset()&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="#pathN = myPaths.thisN&amp;#10;if action_2.keys == 'space':&amp;#10;    current_pos=cuePos    &amp;#10;    continueRoutine = False;&amp;#10;&amp;#10;pathTime=1&amp;#10;pathEnd=[1,-.95]&amp;#10;#if posClock.getTime() &gt; pathTime:&amp;#10;#if posClock.getTime() &gt; thisPath[&quot;pathTime&quot;]:&amp;#10;   # if pathN &lt; len(myPaths.trialList) - 1:&amp;#10;      #  pathStart = [float(thisPath[&quot;pathEnd&quot;][0]),float(thisPath[&quot;pathEnd&quot;][1])]&amp;#10;    #   pathStart = [float(pathEnd[0]),float(pathEnd[1])]&amp;#10;     #  thisPath = myPaths.nextthis()&amp;#10;      # posClock.reset()&amp;#10;    #else:&amp;#10;     #   continueRoutine = False;&amp;#10;#cuePos = (xScale*(pathStart[0]+(float(thisPath['pathEnd'][0])-pathStart[0])*posClock.getTime()/float(thisPath['pathTime'])), yScale*(pathStart[1]+(float(thisPath['pathEnd'][1])-pathStart[1])*posClock.getTime()/float(thisPath['pathTime'])))&amp;#10;cuePos = (xScale*(pathStart[0]+(float(pathEnd[0])-pathStart[0])*posClock.getTime()/float(pathTime)), yScale*(pathStart[1]+(float(pathEnd[1])-pathStart[1])*posClock.getTime()/float(pathEnd[1])))&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((action_2.keys === &quot;space&quot;)) {&amp;#10;    current_pos = cuePos;&amp;#10;    &amp;#10;}&amp;#10;pathTime = 1;&amp;#10;pathEnd = [1, (- 0.95)];&amp;#10;cuePos = [(xScale * (pathStart[0] + (((Number.parseFloat(pathEnd[0]) - pathStart[0]) * posClock.getTime()) / Number.parseFloat(pathTime)))), (yScale * (pathStart[1] + (((Number.parseFloat(pathEnd[1]) - pathStart[1]) * posClock.getTime()) / Number.parseFloat(pathEnd[1]))))];&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="moving" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="action_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="action_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="cue_object_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="cue_object_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="moving_cue_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$plane_selected" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="moving_cue_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="cuePos" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="timer_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="timer_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.65, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Time until departure: '+ str(text_9)" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="end_after_one_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;1.1:&amp;#10;    if len(action_2.keys) != 0:&amp;#10;        current_pos=[10,10]&amp;#10;    continueRoutine=False;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 1.1)) {&amp;#10;    if ((action_2.keys === undefined)) {&amp;#10;        action_2.rt = 1;&amp;#10;    }&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_after_one_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="try_again_2">
      <RoutineSettingsComponent name="try_again_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="try_again_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="initiate_countdown_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="leftTime = new Date();&amp;#10;timeelapsed = (startTime - leftTime)/1000&amp;#10;text_9 = Math.round(9+timeelapsed)" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initiate_countdown_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_if_timeout" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="time_s = new Date();&amp;#10;action_c = Math.floor(time_s.getTime() / 1000);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_if_timeout" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="execute_loop_exit" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if action_c-action_started&gt;7.5:&amp;#10;    retry.finished=True&amp;#10;    continueRoutine=False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((action_c - action_started) &gt; 10)) {&amp;#10;    action_cr = Math.floor(time_s.getTime() / 1000);&amp;#10;&amp;#10;    psychoJS.experiment.addData(&quot;action_ended&quot;, action_cr);&amp;#10;    timedOut= true;&amp;#10;    retry.finished = true;&amp;#10;&amp;#10;    continueRoutine = false;&amp;#10;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="execute_loop_exit" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="skip_cs" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((cs === 0)) {&amp;#10;    retry.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if cs==0:&amp;#10;    retry.finished=True&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_cs" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_success" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val=" dont_check_again=0; " valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((performance_arr.length&gt;20)) {&amp;#10;    temp_array=performance_arr.slice(-20)&amp;#10;    percent_acc = ecdfArray(temp_array);&amp;#10;    per = percent_acc(Math.abs((0.3 - action_2.rt)));&amp;#10;   &amp;#10;} else if  ((performance_arr.length&gt;0)) {&amp;#10;    &amp;#10;    percent_acc = ecdfArray(performance_arr);&amp;#10;    //curent attempt &amp;#10;    per = percent_acc(Math.abs((0.3 - action_2.rt)));&amp;#10;    &amp;#10;console.log((&quot;now per is&quot; + per.toString()));&amp;#10;   &amp;#10;} else {&amp;#10;    per=.5;&amp;#10;&amp;#10;    &amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;if ((action_2.keys === undefined)) {&amp;#10;    action_2.keys = [];&amp;#10;    action_2.rt = [];&amp;#10;    per=1.1;&amp;#10; &amp;#10;} else if ((performance_arr === undefined)) {&amp;#10;    per=.5;&amp;#10;    performance_arr.push(Math.abs(.3-action_2.rt));&amp;#10;    console.log(performance_arr);&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;}  else if ((performance_arr.length === 0)) {&amp;#10;    per=.5;&amp;#10;    &amp;#10;    console.log(action_2.rt);&amp;#10;    performance_arr.push(Math.abs(.3-action_2.rt));&amp;#10;    console.log(performance_arr);&amp;#10;&amp;#10;&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;}  else {&amp;#10;    performance_arr.push(Math.abs(.3-action_2.rt));&amp;#10;    per = percent_acc(Math.abs((0.3 - action_2.rt)));&amp;#10;&amp;#10;    &amp;#10;       &amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;  &amp;#10;psychoJS.experiment.addData(&quot;cdf_pos&quot;, per);&amp;#10;if ((per &lt; 0.85)) {&amp;#10;    dont_check_again = 1;&amp;#10;    determined_already==0&amp;#10;} else {&amp;#10;    if (((per &gt; 0.85) &amp;&amp; (dont_check_again === 0))) {&amp;#10;        determined_already = 1;&amp;#10;        success = 0;&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val=" &amp;#10;percent_acc = ecdfArray(performance_arr)&amp;#10;per=percent_acc(abs(.3-action_2.rt))&amp;#10;performance_arr.append(abs(.3-action_2.rt))&amp;#10;thisExp.addData(&quot;cdf_pos&quot;, per)&amp;#10;&amp;#10;    &amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_success" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="new_w_self" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="wself2=0&amp;#10;wself3=0&amp;#10;rp=0&amp;#10;&amp;#10;&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="wself2 = 0;&amp;#10;wself3 = 0;&amp;#10;rp = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((retry.thisN === 0)) {&amp;#10;    num_actions = 2;&amp;#10;} else {&amp;#10;    if ((retry.thisN === 1)) {&amp;#10;        num_actions = 3;&amp;#10;    }&amp;#10;}&amp;#10;wself1 = c_inelastic;&amp;#10;if ((num_actions === 2)) {&amp;#10;    numerator = (1 - (c_inelastic + (c_elastic / 2)));&amp;#10;    denominator = (1 - wself1);&amp;#10;    psychoJS.experiment.addData(&quot;two_action_numerator&quot;, numerator);&amp;#10;    psychoJS.experiment.addData(&quot;two_action_denomenator&quot;, denominator);&amp;#10;    must_be_under = (1 - (numerator / denominator));&amp;#10;    wself2 = must_be_under;&amp;#10;    psychoJS.experiment.addData(&quot;w_self2&quot;, must_be_under);&amp;#10;} else {&amp;#10;    if ((num_actions === 3)) {&amp;#10;        numerator = (1 - (c_inelastic + c_elastic));&amp;#10;        psychoJS.experiment.addData(&quot;three_action_numerator&quot;, numerator);&amp;#10;        denominator = ((1 - wself1) * (1 - wself2));&amp;#10;        psychoJS.experiment.addData(&quot;three_action_denomenator&quot;, denominator);&amp;#10;        must_be_under = (1 - (numerator / denominator));&amp;#10;        wself3 = must_be_under;&amp;#10;        psychoJS.experiment.addData(&quot;w_self3&quot;, must_be_under);&amp;#10;    } else {&amp;#10;        must_be_under = 0.5;&amp;#10;    }&amp;#10;}&amp;#10;if ((per &lt; 0.15)) {&amp;#10;    console.log(&quot;determined_already is becoming 1&quot;);&amp;#10;    if ((num_actions === 2)) {&amp;#10;        if ((per &lt; wself2)) {&amp;#10;            determined_already = 1;&amp;#10;            success = 1;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((num_actions === 3)) {&amp;#10;            if ((per &lt; wself3)) {&amp;#10;                determined_already = 1;&amp;#10;                success = 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if retry.thisN==0:&amp;#10;    num_actions=2&amp;#10;elif retry.thisN==1:&amp;#10;    num_actions=3&amp;#10;wself1=c_inelastic&amp;#10;&amp;#10;if num_actions==2:&amp;#10;    numerator=1-(c_inelastic+c_elastic/2)&amp;#10;    denominator=1-wself1&amp;#10;    thisExp.addData('two_action_numerator', numerator)&amp;#10;    thisExp.addData('two_action_denomenator',denominator)&amp;#10;    must_be_under=1-(numerator/denominator)&amp;#10;    wself2=must_be_under&amp;#10;    thisExp.addData('w_self2',must_be_under)&amp;#10;&amp;#10;    &amp;#10;elif num_actions==3:&amp;#10;     numerator=1-(c_inelastic+c_elastic)&amp;#10;     thisExp.addData('three_action_numerator', numerator)&amp;#10;&amp;#10;     denominator=(1-wself1)*(1-wself2)&amp;#10;     thisExp.addData('three_action_denomenator',denominator)&amp;#10;&amp;#10;     must_be_under=1-numerator/denominator&amp;#10;     wself3=must_be_under&amp;#10;     thisExp.addData('w_self3',must_be_under)&amp;#10;&amp;#10;&amp;#10;&amp;#10;else:&amp;#10;    must_be_under=.5&amp;#10;&amp;#10;&amp;#10;if per &lt;.15:&amp;#10;    print(&quot;determined_already is becoming 1&quot;)&amp;#10;&amp;#10;    if num_actions==2:&amp;#10;        if per &lt;wself2:&amp;#10;            determined_already=1&amp;#10;            success=1&amp;#10;    elif num_actions==3:&amp;#10;        if per &lt;wself3:&amp;#10;            determined_already=1&amp;#10;            success=1&amp;#10;            &amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="new_w_self" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="track_success" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;position&quot;, Math.abs((0.3 - action_2.rt)));&amp;#10;psychoJS.experiment.addData(&quot;cdf&quot;, per);&amp;#10;psychoJS.experiment.addData(&quot;full_vector&quot;, performance_arr);&amp;#10;psychoJS.experiment.addData(&quot;forced_actions&quot;, forced_actions);&amp;#10;choose_again_2.alignHoriz = &quot;left&quot;;&amp;#10;if ((plane_selected === plane)) {&amp;#10;    transp = &quot;plane&quot;;&amp;#10;} else {&amp;#10;    if ((plane_selected === train)) {&amp;#10;        transp = &quot;train&quot;;&amp;#10;    }&amp;#10;}&amp;#10;if (success) {&amp;#10;    got = (&quot;Success! You made it onto the &quot; + transp.toString());&amp;#10;} else {&amp;#10;    got = (&quot;Sorry. You missed your &quot; + transp.toString());&amp;#10;}&amp;#10;if (((forced_actions === true) || (proscribed_actions === 3))) {&amp;#10;    retry_loop = 2;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if (((retry.thisN === 1) &amp;&amp; (proscribed_actions === 2))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;continueRoutine = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="thisExp.addData(&quot;position&quot;, abs(.3-action_2.rt))&amp;#10;thisExp.addData(&quot;cdf&quot;, per)&amp;#10;thisExp.addData(&quot;full_vector&quot;, performance_arr)&amp;#10;thisExp.addData(&quot;forced_actions&quot;, forced_actions)&amp;#10;choose_again_2.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;if plane_selected==plane:&amp;#10;    transp=&quot;plane&quot;&amp;#10;elif plane_selected==train:&amp;#10;    transp=&quot;train&quot;&amp;#10;&amp;#10;if success:&amp;#10;        got='Success! You made it onto the '+ str(transp)&amp;#10;else:&amp;#10;        got='Sorry. You missed your ' + str(transp)&amp;#10;&amp;#10;#if trials_task.thisN &lt;num_1_actions:&amp;#10; #   forced_actions=True &amp;#10;  #  num_actions=1&amp;#10;   # retry_loop=0&amp;#10;    #continueRoutine=false&amp;#10;&amp;#10;   &amp;#10;#    num_actions=3&amp;#10; &amp;#10;if forced_actions==True or proscribed_actions==3:&amp;#10;    retry_loop=2&amp;#10;    continueRoutine=false&amp;#10;    &amp;#10;&amp;#10;&amp;#10;if retry.thisN==1 and proscribed_actions==2:&amp;#10;    continueRoutine=false&amp;#10;continueRoutine=false" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="track_success" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="choose_again_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="choose_again_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.45, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Enter loading area?\n\nCost: ' + 20 +' coins'+'\n\nYES-press &quot;y&quot;\nNO-press &quot;n&quot; \n\nnote- (timer is running!)'" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_try_again_2" plugin="None">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_try_again_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="re_do" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((key_try_again_2.keys === &quot;y&quot;) || (trials_task &lt; total_num_forced))) {&amp;#10;    continueRoutine = true;&amp;#10;    num_actions += 1;&amp;#10;} else {&amp;#10;    if ((key_try_again_2.keys === &quot;n&quot;)) {&amp;#10;        continueRoutine = false;&amp;#10;        retry.finished = true;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_try_again_2.keys=='y' or trials_task&lt;total_num_forced:&amp;#10;    continueRoutine=True&amp;#10;    num_actions+=1&amp;#10;elif key_try_again_2.keys=='n':&amp;#10;     continueRoutine=False &amp;#10;     retry.finished=True &amp;#10; " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="re_do" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="new_platform_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="distinguiish_actions/Slide2.jpeg" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.348)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Choose to enter" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback_2">
      <RoutineSettingsComponent name="feedback_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feedback_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="determine_success_here" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="determined_already=0&amp;#10;success=False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="determined_already = 0;&amp;#10;success = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &lt; 6)) {&amp;#10;    task_yet = 0;&amp;#10;    not_task_yet = 13;&amp;#10;} else {&amp;#10;    task_yet = 13;&amp;#10;    not_task_yet = 0;&amp;#10;}&amp;#10;if ((block.thisN &lt; 3)) {&amp;#10;    session1 = true;&amp;#10;} else {&amp;#10;    session1 = false;&amp;#10;}&amp;#10;if ((block.thisN &gt; 2)) {&amp;#10;    if ((cs === 1)) {&amp;#10;        only_if_cs_1 = 15;&amp;#10;    } else {&amp;#10;        only_if_cs_1 = 0;&amp;#10;    }&amp;#10;} else {&amp;#10;    only_if_cs_1 = 0;&amp;#10;}&amp;#10;if ((cs === 1)) {&amp;#10;    only_if_cs_2 = 15;&amp;#10;} else {&amp;#10;    only_if_cs_2 = 0;&amp;#10;}&amp;#10;if ((plane_selected === plane)) {&amp;#10;    transp = &quot;plane&quot;;&amp;#10;} else {&amp;#10;    transp = &quot;train&quot;;&amp;#10;}&amp;#10;if ((opt_in.keys === &quot;1&quot;)) {&amp;#10;    num_actions = 1;&amp;#10;} else {&amp;#10;    if ((opt_in.keys === &quot;2&quot;)) {&amp;#10;        num_actions = 2;&amp;#10;    } else {&amp;#10;        if (((opt_in.keys === &quot;3&quot;) || (forced_actions === true))) {&amp;#10;            num_actions = 3;&amp;#10;        } else {&amp;#10;            if ((opt_in.keys === &quot;9&quot;)) {&amp;#10;                num_actions = 0;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;console.log((&quot;determined already&quot; + determined_already.toString()));&amp;#10;if ((cs === 1)) {&amp;#10;    if ((num_actions &gt; 1)) {&amp;#10;        if ((determined_already === 0)) {&amp;#10;            psychoJS.experiment.addData(&quot;probablistic_press&quot;, 1);&amp;#10;        }&amp;#10;        if ((num_actions === 2)) {&amp;#10;            if ((two_ticket_success[trials_task.thisN] === 1)) {&amp;#10;                success = true;&amp;#10;                psychoJS.experiment.addData(&quot;pressed_ontime&quot;, 1);&amp;#10;            } else {&amp;#10;                success = false;&amp;#10;                psychoJS.experiment.addData(&quot;pressed_ontime&quot;, 0);&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((num_actions === 3)) {&amp;#10;                if ((three_ticket_success[trials_task.thisN] === 1)) {&amp;#10;                    success = true;&amp;#10;                    psychoJS.experiment.addData(&quot;pressed_ontime&quot;, 1);&amp;#10;                } else {&amp;#10;                    success = false;&amp;#10;                    psychoJS.experiment.addData(&quot;pressed_ontime&quot;, 0);&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    if ((determined_already === 1)) {&amp;#10;        psychoJS.experiment.addData(&quot;probablistic_press&quot;, 0);&amp;#10;    }&amp;#10;    console.log(&quot;he succesfully jumped &quot;, success.toString());&amp;#10;    if ((num_actions === 1)) {&amp;#10;        if ((single_ticket_success[trials_task.thisN] === 1)) {&amp;#10;            MADEIT = 1;&amp;#10;        } else {&amp;#10;            MADEIT = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((num_actions === 2)) {&amp;#10;            if ((two_ticket_success[trials_task.thisN] === 1)) {&amp;#10;                MADEIT = 1;&amp;#10;            } else {&amp;#10;                MADEIT = 0;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((num_actions === 3)) {&amp;#10;                if ((three_ticket_success[trials_task.thisN] === 1)) {&amp;#10;                    MADEIT = 1;&amp;#10;                } else {&amp;#10;                    MADEIT = 0;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    MADEIT = 0;&amp;#10;}&amp;#10;specify_reward_2.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN&lt;6:&amp;#10;    task_yet=0&amp;#10;    not_task_yet=13&amp;#10;else:&amp;#10;    task_yet=13&amp;#10;    not_task_yet=0&amp;#10;    &amp;#10;&amp;#10;&amp;#10;if block.thisN&lt;3:&amp;#10;    session1=True&amp;#10;else:&amp;#10;    session1=False&amp;#10;&amp;#10;if block.thisN&gt;2:&amp;#10;    if cs==1:&amp;#10;        only_if_cs_1=15&amp;#10;    else:&amp;#10;        only_if_cs_1=0&amp;#10;else:&amp;#10;     only_if_cs_1=0&amp;#10;     &amp;#10;if cs==1:&amp;#10;        only_if_cs_2=15&amp;#10;else:&amp;#10;        only_if_cs_2=0   &amp;#10;&amp;#10;&amp;#10;&amp;#10;        &amp;#10;if plane_selected==plane:&amp;#10;    transp=&quot;plane&quot;&amp;#10;else:&amp;#10;    transp=&quot;train&quot;&amp;#10;    &amp;#10;    &amp;#10;if opt_in.keys=='1':&amp;#10;    num_actions=1&amp;#10;elif opt_in.keys=='2':&amp;#10;    num_actions=2&amp;#10;elif opt_in.keys=='3' or forced_actions==True:&amp;#10;    num_actions=3&amp;#10;elif opt_in.keys=='9':&amp;#10;    num_actions=0&amp;#10;    &amp;#10;print(&quot;determined already&quot; +str(determined_already))&amp;#10;if cs==1:&amp;#10;    if num_actions&gt;1:&amp;#10;        if determined_already==0:&amp;#10;            thisExp.addData(&quot;probablistic_press&quot;, 1)&amp;#10;        if num_actions==2:&amp;#10;            if two_ticket_success[trials_task.thisN]==1:&amp;#10;                success=True &amp;#10;                thisExp.addData(&quot;pressed_ontime&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                success=False&amp;#10;                thisExp.addData(&quot;pressed_ontime&quot;, 0)&amp;#10;&amp;#10;        elif num_actions==3:&amp;#10;            if three_ticket_success[trials_task.thisN]==1:&amp;#10;                success=True&amp;#10;                thisExp.addData(&quot;pressed_ontime&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                success=False&amp;#10;                thisExp.addData(&quot;pressed_ontime&quot;, 0)&amp;#10;&amp;#10;    if determined_already==1:&amp;#10;        thisExp.addData(&quot;probablistic_press&quot;, 0)&amp;#10;&amp;#10;        &amp;#10;    print(&quot;he succesfully jumped &quot;,str(success))&amp;#10;&amp;#10;    if num_actions==1:&amp;#10;        if single_ticket_success[trials_task.thisN] == 1:&amp;#10;            MADEIT=1&amp;#10;        else:&amp;#10;            MADEIT=0&amp;#10;    elif num_actions==2:&amp;#10;        if two_ticket_success[trials_task.thisN]==1:&amp;#10;            MADEIT=1&amp;#10;        else:&amp;#10;            MADEIT=0&amp;#10;    elif num_actions==3:&amp;#10;        if three_ticket_success[trials_task.thisN]==1:&amp;#10;            MADEIT=1&amp;#10;        else:&amp;#10;            MADEIT=0&amp;#10;            &amp;#10;else:&amp;#10;    MADEIT=0&amp;#10;&amp;#10;&amp;#10;specify_reward_2.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="determined_already = 0;&amp;#10;success = false;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="determined_already = 0;&amp;#10;success=False" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_success_here" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_11" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="give_feedback_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="session1=False;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="session1=false;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((cs === 0)) {&amp;#10;    success = 0;&amp;#10;    got = &quot;Did not try&quot;;&amp;#10;    dep_time = 2;&amp;#10;    dep_time_first = 0;&amp;#10;    dep_depends = 7.5;&amp;#10;} else {&amp;#10;    dep_time = 2.5;&amp;#10;    dep_time_first = 2.5;&amp;#10;    dep_depends = 5.5;&amp;#10;}&amp;#10;ast = (c_inelastic * 1000);&amp;#10;r = randint(0, 1000);&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (MADEIT === 1) {&amp;#10;    dplace = action_transitions[plane_selected];&amp;#10;&amp;#10;    plane_to_show = plane_selected;&amp;#10;    if ((session1 === true)) {&amp;#10;        time_for_plane = 15;&amp;#10;        time_for_walking = 0;&amp;#10;&amp;#10;    } else {&amp;#10;        time_for_plane = 0;&amp;#10;        time_for_walking = 0;&amp;#10;&amp;#10;    }&amp;#10;&amp;#10;} else {&amp;#10;    dplace = state_transitions[beg_island];&amp;#10;&amp;#10;    plane_to_show = transport[0];&amp;#10;    if ((session1 === true)) {&amp;#10;        time_for_walking = 15;&amp;#10;    } else {&amp;#10;        time_for_walking = 0;&amp;#10;    }&amp;#10;    time_for_plane = 0;&amp;#10;}&amp;#10;if ((left_plane === plane_to_show)) {&amp;#10;    pos_c = [(- 0.25), 0.25];&amp;#10;} else {&amp;#10;    if ((right_plane === plane_to_show)) {&amp;#10;        pos_c = [0.25, 0.25];&amp;#10;    } else {&amp;#10;        pos_c = [0, 0.15];&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if cs==0:&amp;#10;    success=0&amp;#10;    got='Did not try';&amp;#10;    # set up timings &amp;#10;    dep_time=2&amp;#10;    dep_time_first=0&amp;#10;    dep_depends=7.5&amp;#10;else:&amp;#10;     # set up timings &amp;#10;    dep_time=2.5&amp;#10;    #what about the origin image&amp;#10;    dep_time_first=2.5&amp;#10;    dep_depends=5.5&amp;#10;    &amp;#10;&amp;#10;#ast.extend(sst)&amp;#10;ast=(w_env*10)&amp;#10;r=random.randint(0,10)&amp;#10;    &amp;#10;&amp;#10;&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="const datess = new Date();&amp;#10;&amp;#10;const trial_ended_real = Math.floor(datess.getTime() / 1000);&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;trial_ended_real&quot;, trial_ended_real);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="give_feedback_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="get_feedback" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="tracking_success=[];&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="tracking_success = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;specify_reward.alignHoriz = &quot;left&quot;;&amp;#10;total_spent = 0;&amp;#10;if ((dplace === end_island)) {&amp;#10;    got_there = true;&amp;#10;    tracking_success.push(1);&amp;#10;    suc = &quot;You WIN!&quot;;&amp;#10;} else {&amp;#10;    got_there = false;&amp;#10;    tracking_success.push(0);&amp;#10;    suc = &quot;Sorry, you missed the treasure&quot;;&amp;#10;}&amp;#10;if ((cs === 0)) {&amp;#10;    num_actions = 0;&amp;#10;}&amp;#10;if (got_there) {&amp;#10;    total_reward = 150;&amp;#10;} else {&amp;#10;    total_reward = 0;&amp;#10;}&amp;#10;if ((forced_actions === false)) {&amp;#10;    if ((num_actions === 0)) {&amp;#10;        total_earned += total_reward;&amp;#10;        total_spent = 0;&amp;#10;    } else {&amp;#10;        if ((num_actions === 1)) {&amp;#10;            total_earned += (total_reward - 40);&amp;#10;            total_spent = 40;&amp;#10;        } else {&amp;#10;            if ((num_actions === 2)) {&amp;#10;                total_earned += (total_reward - 60);&amp;#10;                total_spent = 60;&amp;#10;            } else {&amp;#10;                if ((num_actions === 3)) {&amp;#10;                    total_earned += (total_reward - 80);&amp;#10;                    total_spent = 80;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    total_earned += total_reward;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="specify_reward.alignHoriz=&quot;left&quot;&amp;#10;total_spent=0&amp;#10;if dplace ==end_island:&amp;#10;    got_there=True&amp;#10;    tracking_success.append(1)&amp;#10;    suc=&quot;You WIN!&quot;&amp;#10;else:&amp;#10;    got_there=False&amp;#10;    tracking_success.append(0)&amp;#10;    suc=&quot;Sorry, you missed the treasure&quot;&amp;#10;if cs==0:&amp;#10;    num_actions=0&amp;#10;        &amp;#10;if got_there:&amp;#10;    total_reward=150&amp;#10;else:&amp;#10;    total_reward=0&amp;#10;    &amp;#10;if forced_actions==False:&amp;#10;    if num_actions==0:&amp;#10;        total_earned+= total_reward&amp;#10;        total_spent=0&amp;#10;    elif num_actions==1:&amp;#10;        total_earned+= total_reward-40&amp;#10;        total_spent=40&amp;#10;    elif num_actions==2:&amp;#10;        total_earned+= total_reward-60&amp;#10;        total_spent=60&amp;#10;    elif num_actions==3:&amp;#10;            total_earned+= total_reward-80&amp;#10;            total_spent=80&amp;#10;else:&amp;#10;    total_earned+=total_reward&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="success = 0;&amp;#10;success_act = [];&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="success=0&amp;#10;success_act=[];" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="get_feedback" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="departure_state" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="departure_state" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$dplace" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="13" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="specify_reward" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.09" valType="num" updates="constant" name="letterHeight"/>
        <Param val="specify_reward" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.85, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$task_yet" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(suc) +'\n\nCoins spent on tickets: '+str(total_spent)+'\nTotal earned on trip: '+ str(total_reward-total_spent) + ' coins' + '\nTotal Winnings: ' + str(total_earned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="tran_selected" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$plane_to_show" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="tran_selected" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pos_c" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.2, .4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$time_for_plane" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state_supposed_to" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_supposed_to" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.7, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="inteded_location" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="inteded_location" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.7, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure Location" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="save_data" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((cs === 0)) {&amp;#10;    num_actions = 0;&amp;#10;}&amp;#10;total_actions = num_actions;&amp;#10;psychoJS.experiment.addData(&quot;total_actions&quot;, total_actions);&amp;#10;psychoJS.experiment.addData(&quot;trial_reward&quot;, total_reward);&amp;#10;psychoJS.experiment.addData(&quot;total_reward&quot;, total_earned);&amp;#10;psychoJS.experiment.addData(&quot;destination&quot;, dplace);&amp;#10;psychoJS.experiment.addData(&quot;method_used&quot;, plane_to_show);&amp;#10;psychoJS.experiment.addData(&quot;boarded&quot;, success);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if cs==0:&amp;#10;    num_actions=0&amp;#10;total_actions=num_actions&amp;#10;thisExp.addData(&quot;total_actions&quot;, total_actions)&amp;#10;&amp;#10;thisExp.addData(&quot;trial_reward&quot;,total_reward )&amp;#10;thisExp.addData(&quot;total_reward&quot;, total_earned)&amp;#10;thisExp.addData(&quot;destination&quot;, dplace)&amp;#10;thisExp.addData(&quot;method_used&quot;, plane_to_show)&amp;#10;thisExp.addData(&quot;boarded&quot;, success)&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="save_data" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="record_transition_type" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((success === 1) || (success === true))) {&amp;#10;    psychoJS.experiment.addData(&quot;jumped_ontime&quot;, 1);&amp;#10;} else {&amp;#10;    if (((success === 0) || (success === false))) {&amp;#10;        psychoJS.experiment.addData(&quot;jumped_ontime&quot;, 0);&amp;#10;    }&amp;#10;}&amp;#10;se_number = 3;&amp;#10;if ((total_actions === 1)) {&amp;#10;    se_number = 3;&amp;#10;} else {&amp;#10;    if ((total_actions === 3)) {&amp;#10;        se_number = 2;&amp;#10;    } else {&amp;#10;        if ((total_actions === 2)) {&amp;#10;            se_number = 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if success==1 or success==True:&amp;#10;    thisExp.addData(&quot;jumped_ontime&quot;, 1)&amp;#10;elif success==0 or success==False:&amp;#10;    thisExp.addData(&quot;jumped_ontime&quot;, 0)&amp;#10;&amp;#10;&amp;#10;se_number=3&amp;#10;if total_actions==1:&amp;#10;    se_number=3&amp;#10;elif total_actions==3:&amp;#10;    se_number=2&amp;#10;elif total_actions==2:&amp;#10;    se_number=1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="console.log(&quot;we do finish feedback&quot;);&amp;#10;success = false;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(&quot;we do finish feedback&quot;)&amp;#10;success=False" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="record_transition_type" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_17" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_17" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press space to continue" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="transport_rules/Slide1.jpeg" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.65, .65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_13" plugin="None">
        <Param val="'space','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_13" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="3" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="12" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="selected_transport" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$plane_selected" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="selected_transport" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.7, .15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_cs_1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="walking" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walking" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$time_for_walking" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="new_platform_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'distinguiish_actions/Slide' + str(se_number) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.7, .4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.348)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_cs_2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="selected_transport_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="selected_transport_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.7, .32)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_cs_1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You had selected &amp;#10;(but not necessarily gotten on)" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="specify_reward_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.09" valType="num" updates="constant" name="letterHeight"/>
        <Param val="specify_reward_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.85, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$not_task_yet" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(suc) +'\n\nCoins spent on tickets: '+str(total_spent)+'\nTotal earned on trip: '+ str(total_reward-total_spent) + ' coins'" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="action_reminder" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="action_reminder" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.7, .7)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_cs_2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Tickets " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="breather">
      <RoutineSettingsComponent name="breather" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="breather" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}&amp;#10;&amp;#10;numIterations = 120000;&amp;#10;learningRate = 0.01;&amp;#10;&amp;#10;weight = logisticRegression(feat_lr, la_opt_in, numIterations, learningRate);&amp;#10;&amp;#10;&amp;#10;last_message = &quot;You are done with this planet.\n\nTake a breather. Press Space when you are ready to proceed to the next planet&quot;;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="last_message='You are done with this planet.\n\nTake a breather. Press Space when you are ready to proceed to the next planet'&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_11" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="60" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$last_message&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="60" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="lab" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="lab" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="20" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$la_opt_in&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="featu" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="featu" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.7, .36)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$weight" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="end_experiment">
      <RoutineSettingsComponent name="end_experiment" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="end_experiment" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_46" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_13.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_13.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_46" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="//console.log('transfer should occur'); &amp;#10;//psychoJS.setRedirectUrls(&quot;https://hujipsych.au1.qualtrics.com/jfe/form/SV_da1EsAzG9JHmeq2?id=&quot;+expInfo['participant']);" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="end_experiment_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var today= new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });&amp;#10;console.log(today); //Ouput: &quot;11:31&quot;console.log(today); //Ouput: &quot;11:31:41&quot;&amp;#10;psychoJS.experiment.addData(&quot;experiment_ended&quot;, today);&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="psychoJS.quit({message: 'Your custom message'});&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="//psychoJS.quit({message: 'Taking you to the completion code'});" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_experiment_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_13" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="20" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="To complete the final phase of the study (5 more min!) press space and on the following screen press &quot;OK&quot;. &amp;#10;&amp;#10;When you see &quot;Thank you for participating&quot; You MUST PRESS OK and be redirected to another link. &amp;#10;&amp;#10;Otherwise your data will not be saved and you WILL NOT receive credit. &amp;#10;&amp;#10;Press space to and then ok to continue" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="opt_in_instruct">
      <RoutineSettingsComponent name="opt_in_instruct" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="opt_in_instruct" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="set_font" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="instruct_opt_in_2.alignHoriz = &quot;left&quot;;&amp;#10;choose_2.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="instruct_opt_in_2.alignHoriz=&quot;left&quot;&amp;#10;choose_2.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_font" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="dep_island_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="islands/hut.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="left_choice_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/train.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left_choice_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="right_choice_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/plane.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right_choice_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="destination_island_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="islands/town.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="destination_island_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="comp_choose_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".075" valType="num" updates="set every repeat" name="letterHeight"/>
        <Param val="comp_choose_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(- 0.55, .8)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Review instructions (Press r)" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="choose_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="choose_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.23, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Purchase a ticket (-20) (Press y)&amp;#10;Take next available transport (Press n)" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="opt_in_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="opt_in_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="hundred_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="islands/win.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="hundred_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.22, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="instruct_opt_in_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_opt_in_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.35, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="First, you decide whether you want to purchase a ticket to select your transport or &amp;#10;&amp;#10;whether you want to be placed on the next available vehicle. &amp;#10;&amp;#10;Press space to continue" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="traveling_to_new_planet">
      <RoutineSettingsComponent name="traveling_to_new_planet" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="traveling_to_new_planet" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="background_color_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="background_color_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="traveling_one" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="traveling_one" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Traveling to a new planet!: '+ Math.round(4 - t,1)" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="space_ship" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/space_ship.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="space_ship" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.75, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="ok_wait">
      <RoutineSettingsComponent name="ok_wait" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ok_wait" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="initiate_countdown_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="leftTime = new Date();&amp;#10;timeelapsed = (startTime - leftTime)/1000&amp;#10;text_9 = Math.round(3+timeelapsed)" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initiate_countdown_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_if_timeout_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="time_s = new Date();&amp;#10;action_c = Math.floor(time_s.getTime() / 1000);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_if_timeout_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="only_if_opted_out" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((proscribed_actions === 3)) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    if ((proscribed_actions === 2)) {&amp;#10;        timedOut = false;&amp;#10;    } else {&amp;#10;        if (((forced_actions === true) &amp;&amp; (num_actions &lt; 4))) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if proscribed_actions==3:&amp;#10;    continueRoutine=False&amp;#10;elif proscribed_actions==2:&amp;#10;    timedOut=false&amp;#10;elif forced_actions==True and num_actions&lt;4:&amp;#10;    continueRoutine=False&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="only_if_opted_out" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Computer_Selects" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Computer_Selects" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.03)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please wait while we evaluate your action..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="final_state_supposed_to_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_supposed_to_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="inteded_location_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="inteded_location_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure Location" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="execute_loop_exit_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if action_c-action_started&gt;7:&amp;#10;    retry.finished=True&amp;#10;    continueRoutine=False&amp;#10;print('action time was '+action_c-action_started)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((action_c - action_started) &gt; 3.6)) {&amp;#10;    retry.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;    action_cr = Math.floor(time_s.getTime() / 1000);&amp;#10;    psychoJS.experiment.addData(&quot;action_ended&quot;, action_cr);&amp;#10;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="execute_loop_exit_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_timer2_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_timer2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.65, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Time until departure: '+ str(text_9)" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="departure_state_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="departure_state_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="ok_wait_2">
      <RoutineSettingsComponent name="ok_wait_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ok_wait_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="only_if_opt_out" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((proscribed_actions &gt; 1)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if ((cs === 0)) {&amp;#10;    if_opts = 5;&amp;#10;    tpla = 0;&amp;#10;    s_text = 5;&amp;#10;    sp = 5;&amp;#10;    textss = Math.round((5 - t), 1);&amp;#10;    dep = &quot;You have chosen to walk...&quot;;&amp;#10;    time_for_this = 5;&amp;#10;} else {&amp;#10;    if ((cs === 1)) {&amp;#10;        if_opts = 0;&amp;#10;        if ((block.thisN &lt; 3)) {&amp;#10;            tpla = 3;&amp;#10;        } else {&amp;#10;            tpla = 0;&amp;#10;        }&amp;#10;        s_text = 3;&amp;#10;        sp = 3;&amp;#10;        textss = Math.round((4 - t), 1);&amp;#10;        dep = &quot;Waiting for your ride...&quot;;&amp;#10;        time_for_this = 3;&amp;#10;    }&amp;#10;}&amp;#10;console.log((&quot;time should be &quot; + sp.toString()));&amp;#10;if ((left_plane === plane_selected)) {&amp;#10;    pos_c = [(- 0.25), 0.25];&amp;#10;} else {&amp;#10;    if ((right_plane === plane_selected)) {&amp;#10;        pos_c = [0.25, 0.25];&amp;#10;    } else {&amp;#10;        pos_c = [0, 0.15];&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if proscribed_actions&gt;1:&amp;#10;    continueRoutine=false&amp;#10;&amp;#10;if cs==0:&amp;#10;    if_opts=5&amp;#10;    tpla=0&amp;#10;    s_text=5&amp;#10;    sp=5&amp;#10;    textss= Math.round(5- t,1)&amp;#10;    dep='You have chosen to walk...'&amp;#10;    time_for_this=5&amp;#10;elif cs==1:&amp;#10;    if_opts=0&amp;#10;    if block.thisN&lt;3:&amp;#10;        tpla=3&amp;#10;    else:&amp;#10;        tpla=0&amp;#10;    s_text=3&amp;#10;    sp=3&amp;#10;    textss= Math.round(4 - t,1)&amp;#10;    dep='Waiting for your ride...'&amp;#10;    time_for_this=3&amp;#10;&amp;#10;&amp;#10;&amp;#10;print(&quot;time should be &quot;+str(sp))&amp;#10;&amp;#10;if left_plane==plane_selected:&amp;#10;    pos_c=[-.25,.25]&amp;#10;elif right_plane==plane_selected:&amp;#10;    pos_c=[.25,.25]&amp;#10;else:&amp;#10;    pos_c=[0,.15]&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="only_if_opt_out" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_if_timeout_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((t &gt; 6)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;if t&gt;6:&amp;#10;    continueRoutine=false&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if cs==1:&amp;#10;    sp=3&amp;#10;    if t&gt;2.9:&amp;#10;        continueRoutine=false&amp;#10;        &amp;#10;elif cs==0:&amp;#10;    sp=5&amp;#10;    if t&gt;5.1:&amp;#10;        continueRoutine=false&amp;#10;       &amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((cs === 1)) {&amp;#10;    sp = 3;&amp;#10;    if ((t &gt; 2.9)) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((cs === 0)) {&amp;#10;        sp = 5;&amp;#10;        if ((t &gt; 5.1)) {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_if_timeout_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$sp" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="only_if_opted_out_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((proscribed_actions === 1)) {&amp;#10;    retry_loop = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;if proscribed_actions==1:&amp;#10;    retry_loop=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="only_if_opted_out_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Computer_Selects_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Computer_Selects_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.03)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$time_for_this" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$dep" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="departure_state_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="departure_state_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$time_for_this" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="planet_number_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="planet_number_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.75,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$s_text" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Planet ' +str(block.thisN+1) +' of ' + str(num_blocks)+'\nTrip '+str(trials_task.thisN+1)+' of ' + str(trial_length)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="eight" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="eight" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.65, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$sp" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Time until departure: '+ Math.round(sp - t,1)" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="tran_selected_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$plane_selected" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="tran_selected_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="pos_c" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.2, .4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="walk" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walk" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$if_opts" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="open_questions_2">
      <RoutineSettingsComponent name="open_questions_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="open_questions_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_29" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_to = &quot;Do you have any questions or feedback about any parts of the game?\n\n Response should be at least 2 sentences.\n\n&quot;;&amp;#10;document.body.style.cursor = &quot;auto&quot;;&amp;#10;psychoJS.experiment.addData(&quot;label&quot;, la_opt_in);&amp;#10;psychoJS.experiment.addData(&quot;control&quot;, feat_lr);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_to='Do you have any questions or feedback about any parts of the game?\n\n Response should be at least 2 sentences.\n\n'&amp;#10;document.body.style.cursor='auto';&amp;#10;&amp;#10;thisExp.addData(&quot;label&quot;, la_opt_in)&amp;#10;thisExp.addData(&quot;control&quot;, feat_lr)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_29" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextboxComponent name="textbox_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="textbox_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="visible" valType="str" updates="constant" name="overflow"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="Type here..." valType="str" updates="constant" name="placeholder"/>
        <Param val="(0, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(None, None)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="list" updates="constant" name="speechPoint"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Enter text here&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </TextboxComponent>
      <TextComponent name="text_18" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_18" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press this button to move on (you might need to press slightly below) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse_2" plugin="None">
        <Param val="text_7" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <TextComponent name="text_19" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_19" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="force_write_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="please_write_more.alignHoriz = &quot;left&quot;;&amp;#10;if ((need_feedback.thisN === 0)) {&amp;#10;    time_to_show = 0;&amp;#10;} else {&amp;#10;    if ((need_feedback.thisN &gt; 0)) {&amp;#10;        time_to_show = 100000;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="please_write_more.alignHoriz=&quot;left&quot;&amp;#10;if need_feedback.thisN==0:&amp;#10;    time_to_show=0&amp;#10;elif need_feedback.thisN&gt;0:&amp;#10;    time_to_show=100000" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((textbox_2.text.length &gt; 30)) {&amp;#10;    need_feedback.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if len(textbox_2.text)&gt;30:&amp;#10;    need_feedback.finished=True&amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="force_write_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="please_write_more_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="please_write_more_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_to_show" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please provide us with more detailed feedback in the textbox. &amp;#10;Specifically,&amp;#10;1) Did you feel like overall you were able to do well in the task&amp;#10;2) Was there anything confusing to you about the task?" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="ticket_query">
      <RoutineSettingsComponent name="ticket_query" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ticket_query" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_30" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((((((trials_task.thisN + 1) % 10) === 0) &amp;&amp; (trials_task.thisN &gt; 10)) || ((trials_task.thisN + 1) === trial_length))) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;ticket_officer_query.alignHoriz = &quot;left&quot;;&amp;#10;if ((plane_selected === left_plane)) {&amp;#10;    pos_query = [(- 0.1), 0];&amp;#10;} else {&amp;#10;    pos_query = [(- 0.85), 0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ((trials_task.thisN+1) % 10 ==0 and trials_task.thisN&gt;10) or (trials_task.thisN+1==trial_length):&amp;#10;    continueRoutine=True&amp;#10;else:&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;ticket_officer_query.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;if plane_selected==left_plane:&amp;#10;    pos_query=[-.1,0]&amp;#10;else:&amp;#10;    pos_query=[-.85,0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_30" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_13" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="ticket_officer_query" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ticket_officer_query" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Correct answer: +400 bonus! &amp;#10;&amp;#10;Throughout your travels on this planet, on a scale from 1 (not helpful) to 5 (very helpful), how helpful was it to enter the LOADING AREA?&amp;#10;&amp;#10;(your answer will be recorded wherever you click) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="new_platform_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="distinguiish_actions/Slide2.jpeg" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.348)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <SliderComponent name="slider" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('Completely unhelpful','Not helpful', 'average', 'Helpful', 'Very Helpful')" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.3, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="timedOUT">
      <RoutineSettingsComponent name="timedOUT" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="timedOUT" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trial_ended" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="const time_end = new Date();&amp;#10;&amp;#10;const trial_ended = Math.floor(time_end.getTime() / 1000);&amp;#10;&amp;#10;action_ending_now = Math.floor(time_end.getTime() / 1000);&amp;#10;psychoJS.experiment.addData(&quot;action_ended&quot;, action_ending_now);&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;trial_ended&quot;, trial_ended);&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trial_ended" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((timedOut === true)) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if timedOut==True:&amp;#10;    continueRoutine=True&amp;#10;else:&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_28" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_28" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="TIMED OUT!!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="timedOut_Lost">
      <RoutineSettingsComponent name="timedOut_Lost" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="timedOut_Lost" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trial_ended_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((opt_timedOut === false)) {&amp;#10;    if (((((opt_in.keys === &quot;0&quot;) || (opt_in.keys === &quot;1&quot;)) || (opt_in.keys === &quot;2&quot;)) || (opt_in.keys === &quot;3&quot;))) {&amp;#10;        sreview_ins.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((opt_timedOut === true)) {&amp;#10;            continueRoutine = false;&amp;#10;        } else {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((opt_timedOut === true)) {&amp;#10;        total_earned -= 100;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if opt_timedOut==false:&amp;#10;    if opt_in.keys=='0' or opt_in.keys=='1' or opt_in.keys=='2' or opt_in.keys=='3':&amp;#10;        sreview_ins.finished=True &amp;#10;        continueRoutine=False &amp;#10;    elif opt_timedOut==True:&amp;#10;        continueRoutine=False&amp;#10;    else:&amp;#10;        continueRoutine=False&amp;#10;elif opt_timedOut==true:&amp;#10;    total_earned-=100&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trial_ended_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="penalize" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="penalize" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_16" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_16" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_29" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_29" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'TIMED OUT!!\n\nBandits got to you and stole 100 coins.\n\nNew current earnings: ' +str(total_earned)&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="num_tickets_query">
      <RoutineSettingsComponent name="num_tickets_query" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="num_tickets_query" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_37" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="document.body.style.cursor = &quot;auto&quot;;&amp;#10;if ((plane_selected === left_plane)) {&amp;#10;    pos_query = [(- 0.1), 0];&amp;#10;} else {&amp;#10;    pos_query = [(- 0.85), 0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;document.body.style.cursor='auto';&amp;#10;if plane_selected==left_plane:&amp;#10;    pos_query=[-.1,0]&amp;#10;else:&amp;#10;    pos_query=[-.85,0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_37" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_24" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_24" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="ticket_officer_query_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ticket_officer_query_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="CORRECT ANSWER EARNS +500 bonus! &amp;#10;&amp;#10;On this planet, the optimal number of tickets to buy is:" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('0 tickets','1 ticket', '2 tickets', '3 tickets')" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.7)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="one_or_three_2">
      <RoutineSettingsComponent name="one_or_three_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="one_or_three_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_21" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_32.alignHoriz = &quot;left&quot;;&amp;#10;if ((block.thisN &lt; 6)) {&amp;#10;    if ((trials_task.thisN === 0)) {&amp;#10;        be_ready = &quot;Welcome to your new planet!\n\nNow you have a chance to practice the game. You will start with 3 free tickets to get you started\n\nPress space when ready&quot;;&amp;#10;    } else {&amp;#10;        if ((trials_task.thisN === num_3_actions)) {&amp;#10;            if ((c_elastic === 0.9)) {&amp;#10;                be_ready = &quot;Hopefully by now it's clear that only by purchasing 3 tickets (LOADING AREA) are you consistenly succesful in catching your ride\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\n\n Press space to continue&quot;;&amp;#10;            } else {&amp;#10;                if ((c_inelastic === 0.9)) {&amp;#10;                    be_ready = &quot;Your ride actually would stop for you with 1 ticket! So purchasing extra tickets, since they do cost money, is a WASTE (that affects your real money bonus)\n\n\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\nPress space to continue&quot;;&amp;#10;                } else {&amp;#10;                    if (((c_inelastic &lt; 0.3) &amp;&amp; (c_elastic &lt; 0.3))) {&amp;#10;                        be_ready = &quot;Oof. Doesn't seem like the vehicle stops for you nor does purchasing extra tickets helps.\n\nIn this case purchasing tickets is a WASTE OF MONEY\n\n\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\n\nPress space to continue&quot;;&amp;#10;                    } else {&amp;#10;                        continueRoutine = false;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (((trials_task.thisN + 1) === 11)) {&amp;#10;                if ((c_elastic === 0.9)) {&amp;#10;                    be_ready = &quot;Hopefully by now it's clear that only by purchasing 3 tickets (LOADING AREA) are you consistenly succesful in catching your ride\n\nPress space to continue&quot;;&amp;#10;                } else {&amp;#10;                    if ((c_inelastic === 0.9)) {&amp;#10;                        be_ready = &quot;Your ride actually would stop for you with 1 ticket! So purchasing extra tickets, is a WASTE (that affects your real money bonus)\n\nPress space to continue&quot;;&amp;#10;                    } else {&amp;#10;                        if (((c_inelastic &lt; 0.3) &amp;&amp; (c_elastic &lt; 0.3))) {&amp;#10;                            be_ready = &quot;Oof. Doesn't seem like the vehicle stops for you nor does purchasing tickets is a waste of money.\n\nIn this case its best to SAVE MONEY by WALKING\n\nPress space to continue&quot;;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((((force_divergence === 0) &amp;&amp; (trials_task.thisN &gt; 5)) &amp;&amp; (block.thisN &gt; 2))) {&amp;#10;                    be_ready = &quot;Notice- you may have won because walking would also take you to the treasure\n\nHowever, generally walking rarely wins you money&quot;;&amp;#10;                } else {&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((trials_task.thisN === 0)) {&amp;#10;        be_ready = &quot;Welcome to your new planet!\n\nNow it is up to you to figure out how this planet works\n\nRemmember that any coins you earn factors into a real money bonus of up to 5$!\n\nAs a first time visitor, you will receive 3 free tickets so that you can win if \n\na) Your ride stops for you\nOR\nb)You manage to jump from either platform\n\nIt could be however that you dont actually need to purchase 3 tickets to win\n\nPress space when ready&quot;;&amp;#10;    } else {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_32.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;&amp;#10;    &amp;#10;if block.thisN&lt;6:  &amp;#10;    if trials_task.thisN==0:&amp;#10;        be_ready='Welcome to your new planet!\n\nNow you have a chance to practice the game. You will start with 3 free tickets to get you started\n\nPress space when ready' &amp;#10;&amp;#10;    elif trials_task.thisN==num_3_actions:&amp;#10;   &amp;#10;        if c_elastic==.9:&amp;#10;            be_ready=&quot;Hopefully by now it's clear that only by purchasing 3 tickets (LOADING AREA) are you consistenly succesful in catching your ride\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\n\n Press space to continue&quot;&amp;#10;        elif c_inelastic==.9: &amp;#10;            be_ready=&quot;Your ride actually would stop for you with 1 ticket! So purchasing extra tickets, since they do cost money, is a WASTE (that affects your real money bonus)\n\n\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\nPress space to continue&quot;&amp;#10;        elif c_inelastic&lt;.3 and c_elastic&lt;.3:&amp;#10;            be_ready=&quot;Oof. Doesn't seem like the vehicle stops for you nor does purchasing extra tickets helps.\n\nIn this case purchasing tickets is a WASTE OF MONEY\n\n\n\nYou will no longer receive free tickets so you need to select how many tickets you want.\n\nPress space to continue&quot;&amp;#10;        &amp;#10;        else:&amp;#10;            continueRoutine=false&amp;#10;    elif trials_task.thisN+1==11:&amp;#10;        if c_elastic==.9:&amp;#10;            be_ready=&quot;Hopefully by now it's clear that only by purchasing 3 tickets (LOADING AREA) are you consistenly succesful in catching your ride\n\nPress space to continue&quot;&amp;#10;        elif c_inelastic==.9: &amp;#10;            be_ready=&quot;Your ride actually would stop for you with 1 ticket! So purchasing extra tickets, is a WASTE (that affects your real money bonus)\n\nPress space to continue&quot;&amp;#10;        elif c_inelastic&lt;.3 and c_elastic&lt;.3:&amp;#10;            be_ready=&quot;Oof. Doesn't seem like the vehicle stops for you nor does purchasing tickets is a waste of money.\n\nIn this case its best to SAVE MONEY by WALKING\n\nPress space to continue&quot;&amp;#10;    elif force_divergence==0 and trials_task.thisN&gt;5 and block.thisN&gt;2:&amp;#10;        be_ready=&quot;Notice- you may have won because walking would also take you to the treasure\n\nHowever, generally walking rarely wins you money&quot;&amp;#10;    &amp;#10;    else:&amp;#10;        continueRoutine=false&amp;#10;        &amp;#10;else:&amp;#10;    if trials_task.thisN==0:&amp;#10;        be_ready='Welcome to your new planet!\n\nNow it is up to you to figure out how this planet works\n\nRemmember that any coins you earn factors into a real money bonus of up to 5$!\n\nAs a first time visitor, you will receive 3 free tickets so that you can win if \n\na) Your ride stops for you\nOR\nb)You manage to jump from either platform\n\nIt could be however that you dont actually need to purchase 3 tickets to win\n\nPress space when ready' &amp;#10;&amp;#10;    else:&amp;#10;       # be_ready='Remmember that any coins you earn factors into a real money bonus\n\nYou will still occasionally be provided with free tickets\n\nPress space when ready' &amp;#10;&amp;#10;        continueRoutine=false&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_21" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_23" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_23" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_9" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_32" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_32" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$be_ready" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="task_quiz">
      <RoutineSettingsComponent name="task_quiz" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="task_quiz" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="cor_number_block=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="cor_number_block = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &gt; 5)) {&amp;#10;    block_testing.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;text_10.alignHoriz = &quot;left&quot;;&amp;#10;text_15.alignHoriz = &quot;left&quot;;&amp;#10;dm = 30;&amp;#10;if ((block_testing.thisN === 0)) {&amp;#10;    text_to_show = &quot;True/False: On this planet, with a single ticket the train is likely to stop for you at the station\n\nTrue (press a)\nFalse (press b)&quot;;&amp;#10;    has_coded = 3;&amp;#10;} else {&amp;#10;    if ((((block_testing.thisN === 1) || (block_testing.thisN === 3)) || (block_testing.thisN === 5))) {&amp;#10;        has_coded = 2;&amp;#10;        dm = 0;&amp;#10;        if ((cors === 1)) {&amp;#10;            cor_number_block += 1;&amp;#10;            text_to_show = &quot;You are correct!\n\n Press space to continue&quot;;&amp;#10;        } else {&amp;#10;            text_to_show = &quot;You are incorrect!\n\n Press space to continue&quot;;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((block_testing.thisN === 2)) {&amp;#10;            has_coded = 1;&amp;#10;            text_to_show = &quot;True/False: On this planet, the platform is short.\n\nTrue (press a)\nFalse (press b)&quot;;&amp;#10;        } else {&amp;#10;            if ((block_testing.thisN === 4)) {&amp;#10;                has_coded = 2;&amp;#10;                text_to_show = &quot;True/False: On this planet, buying a third ticket (going to the loading area) was helpful .\n\nTrue (press a)\nFalse (press b)&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN&gt;5:&amp;#10;    block_testing.finished=True&amp;#10;    continueRoutine=false&amp;#10;    &amp;#10;&amp;#10;&amp;#10;text_10.alignHoriz = 'left'&amp;#10;dm=30&amp;#10;if block_testing.thisN==0:&amp;#10;    text_to_show='True/False: On this planet, with a single ticket the train is likely to stop for you at the station\n\nTrue (press a)\nFalse (press b)'&amp;#10;    has_coded=3&amp;#10;elif (block_testing.thisN==1 or block_testing.thisN==3) or (block_testing.thisN==5):&amp;#10;    has_coded=2&amp;#10;    dm=0&amp;#10;    if cors==1:&amp;#10;        cor_number_block+=1&amp;#10;        text_to_show='You are correct!\n\n Press space to continue'&amp;#10;    else:&amp;#10;        text_to_show='You are incorrect!\n\n Press space to continue' &amp;#10;elif block_testing.thisN==2:&amp;#10;    has_coded=1&amp;#10;    text_to_show='True/False: On this planet, the platform is short.\n\nTrue (press a)\nFalse (press b)'&amp;#10;elif block_testing.thisN==4:&amp;#10;    has_coded=2&amp;#10;    text_to_show='True/False: On this planet, buying a third ticket (going to the loading area) was helpful .\n\nTrue (press a)\nFalse (press b)'&amp;#10;&amp;#10; " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((block.thisN &lt; 6)) {&amp;#10;    if ((block_testing.thisN === 0)) {&amp;#10;        block_quiz_correct = 0;&amp;#10;        if (((c_elastic === 0) &amp;&amp; (c_inelastic === 0.9))) {&amp;#10;            if ((block_quiz.keys === &quot;a&quot;)) {&amp;#10;                block_quiz_correct += 1;&amp;#10;                cors = 1;&amp;#10;                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;            } else {&amp;#10;                block_quiz_correct += 0;&amp;#10;                cors = 0;&amp;#10;                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((block_quiz.keys === &quot;b&quot;)) {&amp;#10;                block_quiz_correct += 1;&amp;#10;                cors = 1;&amp;#10;                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;            } else {&amp;#10;                block_quiz_correct += 0;&amp;#10;                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                cors = 0;&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((block_testing.thisN === 2)) {&amp;#10;            if (((c_elastic === 0) &amp;&amp; (c_inelastic === 0.9))) {&amp;#10;                if ((block_quiz.keys === &quot;b&quot;)) {&amp;#10;                    block_quiz_correct += 1;&amp;#10;                    cors = 1;&amp;#10;                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                } else {&amp;#10;                    block_quiz_correct += 0;&amp;#10;                    cors = 0;&amp;#10;                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((block_quiz.keys === &quot;a&quot;)) {&amp;#10;                    block_quiz_correct += 1;&amp;#10;                    cors = 1;&amp;#10;                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                } else {&amp;#10;                    block_quiz_correct += 0;&amp;#10;                    cors = 0;&amp;#10;                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                }&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((block_testing.thisN === 4)) {&amp;#10;                if (((c_elastic === 0.9) &amp;&amp; (c_inelastic === 0))) {&amp;#10;                    if ((block_quiz.keys === &quot;a&quot;)) {&amp;#10;                        psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                        block_quiz_correct += 1;&amp;#10;                        cors = 1;&amp;#10;                    } else {&amp;#10;                        block_quiz_correct += 0;&amp;#10;                        cors = 0;&amp;#10;                        psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((block_quiz.keys === &quot;a&quot;)) {&amp;#10;                        psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                        block_quiz_correct += 1;&amp;#10;                        cors = 1;&amp;#10;                    } else {&amp;#10;                        block_quiz_correct += 0;&amp;#10;                        cors = 0;&amp;#10;                        psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                    }&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((block_testing.thisN === 6)) {&amp;#10;                    if (((c_elastic === 0.9) &amp;&amp; (c_inelastic === 0))) {&amp;#10;                        if ((block_quiz.keys === &quot;d&quot;)) {&amp;#10;                            block_quiz_correct += 1;&amp;#10;                            psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                            cors = 1;&amp;#10;                        } else {&amp;#10;                            block_quiz_correct += 0;&amp;#10;                            cors = 0;&amp;#10;                            psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if (((c_elastic === 0) &amp;&amp; (c_inelastic === 0.9))) {&amp;#10;                            if ((block_quiz.keys === &quot;b&quot;)) {&amp;#10;                                block_quiz_correct += 1;&amp;#10;                                cors = 1;&amp;#10;                                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                            } else {&amp;#10;                                block_quiz_correct += 0;&amp;#10;                                cors = 0;&amp;#10;                                psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if (((c_elastic === 0.1) &amp;&amp; (c_inelastic === 0.1))) {&amp;#10;                                if ((block_quiz.keys === &quot;a&quot;)) {&amp;#10;                                    block_quiz_correct += 1;&amp;#10;                                    cors = 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 1);&amp;#10;                                } else {&amp;#10;                                    block_quiz_correct += 0;&amp;#10;                                    cors = 0;&amp;#10;                                    psychoJS.experiment.addData(&quot;final_quiz_correct&quot;, 0);&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    if ((block_quiz_correct &gt;= 4)) {&amp;#10;        block_testing.finished = true;&amp;#10;    }&amp;#10;}&amp;#10;console.log((&quot;he got correct&quot; + cor_number_block.toString()));&amp;#10;if (((block.thisN === 2)) &amp;&amp; (block_testing.thisN === 6)){&amp;#10;    if ((cor_number_block &lt;5)) {&amp;#10;        psychoJS.quit({message: 'Sorry. You cannot continue with the task. Thank you for taking part'});&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if block.thisN&lt;6:&amp;#10;    if block_testing.thisN==0:&amp;#10;        block_quiz_correct=0&amp;#10;        if c_elastic==0 and c_inelastic==.9:&amp;#10;            if block_quiz.keys=='a':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;        else:&amp;#10;            if block_quiz.keys=='b':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;                cors=0&amp;#10;    elif block_testing.thisN==2:&amp;#10;        if c_elastic==0 and c_inelastic==.9:&amp;#10;            if block_quiz.keys=='b':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;              &amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;        else:&amp;#10;            if block_quiz.keys=='a':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;    elif block_testing.thisN==4:&amp;#10;        if c_elastic==.9 and c_inelastic==0:&amp;#10;            if block_quiz.keys=='a':&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;        else:&amp;#10;            if block_quiz.keys=='a':&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;&amp;#10;    elif block_testing.thisN==6:&amp;#10;        if c_elastic==.9 and c_inelastic==0:&amp;#10;            if block_quiz.keys=='d':&amp;#10;                block_quiz_correct+=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;                cors=1&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;        elif c_elastic==0 and c_inelastic==.9:&amp;#10;            if block_quiz.keys=='b':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;        elif c_elastic==.1 and c_inelastic==.1:&amp;#10;            if block_quiz.keys=='a':&amp;#10;                block_quiz_correct+=1&amp;#10;                cors=1&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,1 )&amp;#10;&amp;#10;            else:&amp;#10;                block_quiz_correct+=0&amp;#10;                cors=0&amp;#10;                thisExp.addData(&quot;final_quiz_correct&quot;,0 )&amp;#10;&amp;#10;&amp;#10;&amp;#10;    if block_quiz_correct&gt;=4:&amp;#10;&amp;#10;       # block_quiz_loop.finished=True&amp;#10;        block_testing.finished=True&amp;#10;&amp;#10;print(&quot;he got correct&quot;+str(cor_number_block))&amp;#10;if block.thisN==2:&amp;#10;    if cor_number_block&lt;6:&amp;#10;        core.quit()&amp;#10;    &amp;#10;&amp;#10;        &amp;#10;        &amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_14" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_10" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to_show" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="new_platform_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'distinguiish_actions/Slide' + str(has_coded) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.6)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.45, 0.45)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$dm" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="block_quiz" plugin="None">
        <Param val="'a','b','c','d','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="block_quiz" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_15" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_15" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.75, .74)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Note- if you do not answer these questions correctly, you will not be able to proceed to the task" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="review_routes">
      <RoutineSettingsComponent name="review_routes" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="review_routes" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_38" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="set_of_instructions=1&amp;#10;#slide_review=1&amp;#10;&amp;#10;# for testing&amp;#10;slide_review=1&amp;#10;quiz_set=1&amp;#10;set_of_instructions=1&amp;#10;&amp;#10;&amp;#10;&amp;#10;before_task=true&amp;#10;in_task=false" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="set_of_instructions = 1;&amp;#10;slide_review = 1;&amp;#10;quiz_set = 1;&amp;#10;set_of_instructions = 1;&amp;#10;before_task = true;&amp;#10;in_task = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((before_task === true)) {&amp;#10;    if ((set_of_instructions === 1)) {&amp;#10;        if ((review_first.thisN === 0)) {&amp;#10;            slide_review = 1;&amp;#10;        }&amp;#10;        if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 4))) {&amp;#10;            slide_review += 1;&amp;#10;        } else {&amp;#10;            if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 1))) {&amp;#10;                slide_review -= 1;&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((set_of_instructions === 2)) {&amp;#10;            if ((review_second.thisN === 0)) {&amp;#10;                slide_review = 4;&amp;#10;            }&amp;#10;            if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 7))) {&amp;#10;                slide_review += 1;&amp;#10;            }&amp;#10;            if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 5))) {&amp;#10;                slide_review -= 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((set_of_instructions === 3)) {&amp;#10;                if ((review_third.thisN === 0)) {&amp;#10;                    slide_review = 7;&amp;#10;                }&amp;#10;                if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 12))) {&amp;#10;                    slide_review += 1;&amp;#10;                }&amp;#10;                if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 8))) {&amp;#10;                    slide_review -= 1;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((set_of_instructions === 4)) {&amp;#10;                    if ((review_fourth.thisN === 0)) {&amp;#10;                        slide_review = 12;&amp;#10;                    }&amp;#10;                    if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 18))) {&amp;#10;                        slide_review += 1;&amp;#10;                    }&amp;#10;                    if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 13))) {&amp;#10;                        slide_review -= 1;&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((set_of_instructions === 5)) {&amp;#10;                        if ((review_fifth.thisN === 0)) {&amp;#10;                            slide_review = 18;&amp;#10;                        }&amp;#10;                        if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 23))) {&amp;#10;                            slide_review += 1;&amp;#10;                        }&amp;#10;                        if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 19))) {&amp;#10;                            slide_review -= 1;&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((set_of_instructions === 6)) {&amp;#10;                            set_actions = 2;&amp;#10;                            if ((review_sixth.thisN === 0)) {&amp;#10;                                slide_review = 23;&amp;#10;                            }&amp;#10;                            if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 27))) {&amp;#10;                                slide_review += 1;&amp;#10;                            }&amp;#10;                            if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 23))) {&amp;#10;                                slide_review -= 1;&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((set_of_instructions === 7)) {&amp;#10;                                if ((review_seventh.thisN === 0)) {&amp;#10;                                    slide_review = 28;&amp;#10;                                }&amp;#10;                                if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 39))) {&amp;#10;                                    slide_review += 1;&amp;#10;                                }&amp;#10;                                if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 29))) {&amp;#10;                                    slide_review -= 1;&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((in_task === true)) {&amp;#10;        if ((block.thisN === 3)) {&amp;#10;            continueRoutine = true;&amp;#10;        } else {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;        if ((review_loop_1.thisN === 0)) {&amp;#10;            slide_review = 40;&amp;#10;        }&amp;#10;        if (((key_resp_first_3.keys === &quot;right&quot;) &amp;&amp; (slide_review &lt; 49))) {&amp;#10;            slide_review += 1;&amp;#10;        } else {&amp;#10;            if (((key_resp_first_3.keys === &quot;left&quot;) &amp;&amp; (slide_review &gt; 40))) {&amp;#10;                slide_review -= 1;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;if before_task==True:&amp;#10;    if set_of_instructions==1:&amp;#10;        if review_first.thisN==0:&amp;#10;            slide_review=1&amp;#10;        if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;4:&amp;#10;            slide_review +=1&amp;#10;        elif key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;1:&amp;#10;            slide_review -=1&amp;#10;            &amp;#10;      &amp;#10;    elif set_of_instructions==2:&amp;#10;        if review_second.thisN==0:&amp;#10;            slide_review=4&amp;#10;        if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;7:&amp;#10;            slide_review +=1&amp;#10;        if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;5:&amp;#10;            slide_review -=1&amp;#10;            &amp;#10;       &amp;#10;    elif set_of_instructions==3:&amp;#10;       if review_third.thisN==0:&amp;#10;            slide_review=7&amp;#10;       if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;12:&amp;#10;           slide_review +=1&amp;#10;       if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;8:&amp;#10;            slide_review -=1&amp;#10;            &amp;#10;    elif set_of_instructions==4:&amp;#10;       if review_fourth.thisN==0:&amp;#10;            slide_review=12&amp;#10;       if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;18:&amp;#10;           slide_review +=1&amp;#10;       if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;13:&amp;#10;            slide_review -=1    &amp;#10;    elif set_of_instructions==5:&amp;#10;       if review_fifth.thisN==0:&amp;#10;            slide_review=18&amp;#10;       if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;23:&amp;#10;           slide_review +=1&amp;#10;       if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;19:&amp;#10;            slide_review -=1    &amp;#10;    elif set_of_instructions==6:&amp;#10;       set_actions=2&amp;#10;       if review_sixth.thisN==0:&amp;#10;            slide_review=23&amp;#10;        &amp;#10;       if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;27:&amp;#10;           slide_review +=1&amp;#10;       if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;23:&amp;#10;            slide_review -=1   &amp;#10;    elif set_of_instructions==7:&amp;#10;       if review_seventh.thisN==0:&amp;#10;            slide_review=28&amp;#10;        &amp;#10;       if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;39:&amp;#10;           slide_review +=1&amp;#10;       if key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;29:&amp;#10;            slide_review -=1   &amp;#10;&amp;#10;&amp;#10;    &amp;#10;elif in_task==True:&amp;#10;    if block.thisN==3:&amp;#10;        continueRoutine=True&amp;#10;    else:&amp;#10;        continueRoutine=False&amp;#10;    if review_loop_1.thisN==0:&amp;#10;        slide_review=40&amp;#10;    if key_resp_first_3.keys==&quot;right&quot; and slide_review&lt;49:&amp;#10;        slide_review +=1&amp;#10;    elif key_resp_first_3.keys==&quot;left&quot; and slide_review&gt;40:&amp;#10;        slide_review -=1&amp;#10;        &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((before_task === true)) {&amp;#10;    if ((set_of_instructions === 1)) {&amp;#10;        if (((slide_review === 4) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;            slide_review += 1;&amp;#10;            review_first.finished = true;&amp;#10;            console.log(&quot;set of instructions before quiz&quot;);&amp;#10;            set_of_instructions += 1;&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((set_of_instructions === 2)) {&amp;#10;            if (((slide_review === 7) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                slide_review += 1;&amp;#10;                review_second.finished = true;&amp;#10;                set_of_instructions += 1;&amp;#10;                continueRoutine = false;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((set_of_instructions === 3)) {&amp;#10;                if (((slide_review === 12) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                    slide_review += 1;&amp;#10;                    review_third.finished = true;&amp;#10;                    set_of_instructions += 1;&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((set_of_instructions === 4)) {&amp;#10;                    if (((slide_review === 18) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                        slide_review += 1;&amp;#10;                        review_fourth.finished = true;&amp;#10;                        set_of_instructions += 1;&amp;#10;                        continueRoutine = false;&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((set_of_instructions === 5)) {&amp;#10;                        if (((slide_review === 23) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                            slide_review += 1;&amp;#10;                            review_fifth.finished = true;&amp;#10;                            set_of_instructions += 1;&amp;#10;                            continueRoutine = false;&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((set_of_instructions === 6)) {&amp;#10;                            if (((slide_review === 27) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                                slide_review += 1;&amp;#10;                                review_sixth.finished = true;&amp;#10;                                set_of_instructions += 1;&amp;#10;                                continueRoutine = false;&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((set_of_instructions === 7)) {&amp;#10;                                if (((slide_review === 39) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;                                    slide_review += 1;&amp;#10;                                    review_seventh.finished = true;&amp;#10;                                    set_of_instructions += 1;&amp;#10;                                    continueRoutine = false;&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((in_task === true)) {&amp;#10;    if (((slide_review === 49) &amp;&amp; (key_resp_first_3.keys === &quot;right&quot;))) {&amp;#10;        review_loop_1.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;if before_task==True:&amp;#10;     if set_of_instructions==1:      &amp;#10;        if slide_review == 4 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_first.finished=True &amp;#10;            print('set of instructions before quiz')&amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;     elif set_of_instructions==2:&amp;#10;        if slide_review == 7 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_second.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;     elif set_of_instructions==3:&amp;#10;        if slide_review == 12 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_third.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;     elif set_of_instructions==4:&amp;#10;        if slide_review == 18 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_fourth.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;               &amp;#10;     elif set_of_instructions==5:&amp;#10;        if slide_review == 23 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_fifth.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;     elif set_of_instructions==6:&amp;#10;        if slide_review == 27 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_sixth.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;     elif set_of_instructions==7:&amp;#10;        if slide_review == 39 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;            slide_review +=1&amp;#10;            review_seventh.finished=True &amp;#10;            set_of_instructions+=1&amp;#10;            continueRoutine=false&amp;#10;&amp;#10;&amp;#10;if in_task==True:&amp;#10;    if slide_review==49 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;         review_loop_1.finished=True&amp;#10;         continueRoutine=false&amp;#10;        &amp;#10;       &amp;#10;#elif set_of_instructions==2:&amp;#10; #   if slide_review==14 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;  #      slide_review +=1&amp;#10;   #     set_of_instructions+=1&amp;#10;        &amp;#10;    #    review_loop_2.finished=True &amp;#10;     #   continueRoutine=false&amp;#10;#elif set_of_instructions==3:&amp;#10;&amp;#10; #   if slide_review==25 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;  #      slide_review +=1&amp;#10;   #     set_of_instructions+=1&amp;#10;    #    slide_review=25&amp;#10;     #   review_loop_3.finished=True &amp;#10;      #  continueRoutine=false&amp;#10;&amp;#10;      &amp;#10;#elif set_of_instructions==4:&amp;#10;&amp;#10; #   if slide_review==46 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;  #      slide_review +=1&amp;#10;   #     set_of_instructions+=1&amp;#10;    #    new_instr.finished=True &amp;#10;     #   continueRoutine=false&amp;#10;      #  started_new_practice=True&amp;#10;   &amp;#10;        &amp;#10;#elif set_of_instructions==5:&amp;#10; #   if slide_review==46 and key_resp_first_3.keys==&quot;right&quot;:&amp;#10;  #      slide_review +=1&amp;#10;   #     set_of_instructions+=1&amp;#10;    #    new_instr2.finished=True &amp;#10;     #   continueRoutine=false&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_38" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_first_3" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_first_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="image_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'instr_new_draft/Slide' + str(slide_review) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.69, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="quiz">
      <RoutineSettingsComponent name="quiz" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="quiz" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="move_on_hard_officer=False&amp;#10;rebuy_please=False&amp;#10;#quiz_set=7&amp;#10;cor_first=0&amp;#10;times_quiz_wrong=0&amp;#10;num_wrong=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="move_on_hard_officer = false;&amp;#10;rebuy_please = false;&amp;#10;cor_first = 0;&amp;#10;times_quiz_wrong = 0;&amp;#10;num_wrong = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((num_wrong &lt; 4)) {&amp;#10;    texts = &quot;note- too many failures on the quizzes will result in not being able to proceed with the study&quot;;&amp;#10;} else {&amp;#10;    texts = &quot;WARNING- you have already failed a number of quizzes. More mistakes will risk you being kicked out of the study. Plase read the slides carefully and review them as necessaty.&quot;;&amp;#10;}&amp;#10;if ((before_task === true)) {&amp;#10;    if ((quiz_set === 1)) {&amp;#10;        test_q.alignHoriz = &quot;left&quot;;&amp;#10;        if ((round1.thisN === 0)) {&amp;#10;            text_to_show = &quot;Quiz: At the top of the screen is:\n\na) Current location\nb) Location with the treasure&quot;;&amp;#10;        } else {&amp;#10;            if ((round1.thisN === 1)) {&amp;#10;                text_to_show = &quot;Quiz: At the bottom of the screen is:\n\na) Current location\nb) teasure location&quot;;&amp;#10;            } else {&amp;#10;                if ((round1.thisN === 2)) {&amp;#10;                    text_to_show = &quot;Quiz: True/False   The coins I find in the treasure will have no effect on my bonus payment at the end of the experiment\n\na) True\nb) False&quot;;&amp;#10;                } else {&amp;#10;                    if ((round1.thisN === 3)) {&amp;#10;                        if ((cor_first &gt;= 3)) {&amp;#10;                            text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                        } else {&amp;#10;                            text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((quiz_set === 2)) {&amp;#10;            test_q.alignHoriz = &quot;left&quot;;&amp;#10;            if ((round2.thisN === 0)) {&amp;#10;                cor_first = 0;&amp;#10;                text_to_show = &quot;Quiz: If you walk from the fountain you end up at (hint- it rhymes) :\n\na) The mountain\nb) The town&quot;;&amp;#10;            } else {&amp;#10;                if ((round2.thisN === 1)) {&amp;#10;                    text_to_show = &quot;Quiz: If you walk from the desert you end up at:\n\na) The mountain\nb) The town&quot;;&amp;#10;                } else {&amp;#10;                    if ((round2.thisN === 2)) {&amp;#10;                        if ((cor_first === 2)) {&amp;#10;                            text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                        } else {&amp;#10;                            text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((quiz_set === 3)) {&amp;#10;                test_q.alignHoriz = &quot;left&quot;;&amp;#10;                if ((round3.thisN === 0)) {&amp;#10;                    cor_first = 0;&amp;#10;                    text_to_show = &quot;Quiz: Purchasing a ticket :\n\na) Allows you to select a vehicle (plane/train) based on where the treasure is found\nb) Allows you to choose where the treasure is\nc) Guarantees you protection from the bandits&quot;;&amp;#10;                } else {&amp;#10;                    if ((round3.thisN === 1)) {&amp;#10;                        text_to_show = &quot;Quiz: The plane always takes you to (hint- its the same color\n\na) The mountain\nb) The town&quot;;&amp;#10;                    } else {&amp;#10;                        if ((round3.thisN === 2)) {&amp;#10;                            text_to_show = &quot;Quiz: True/False   Where the plane/train go to depends on where you set off from\n\na) True\nb) False&quot;;&amp;#10;                        } else {&amp;#10;                            if ((round3.thisN === 3)) {&amp;#10;                                if ((cor_first === 3)) {&amp;#10;                                    text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                                } else {&amp;#10;                                    text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((quiz_set === 4)) {&amp;#10;                    test_q.alignHoriz = &quot;left&quot;;&amp;#10;                    if ((round4.thisN === 0)) {&amp;#10;                        cor_first = 0;&amp;#10;                        text_to_show = &quot;Quiz: True/False   Purchasing a ticket guarantees that the plane/train will stop for you at the station:\n\na) True\nb) False&quot;;&amp;#10;                    } else {&amp;#10;                        if ((round4.thisN === 1)) {&amp;#10;                            text_to_show = &quot;Quiz: If you are at the fountain and the train does not stop for you, you will end up\n\na) Walking to the mountain\nb) Walking to the town\nc) Taking the plane to the town\nd) Taking the plane to the mountain&quot;;&amp;#10;                        } else {&amp;#10;                            if ((round4.thisN === 2)) {&amp;#10;                                text_to_show = &quot;Quiz: True/False   On every planet, the frequency with which the plane/train stop for you is the same\n\na) True\nb) False&quot;;&amp;#10;                            } else {&amp;#10;                                if ((round4.thisN === 3)) {&amp;#10;                                    if ((cor_first === 3)) {&amp;#10;                                        text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                                    } else {&amp;#10;                                        text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((quiz_set === 5)) {&amp;#10;                        test_q.alignHoriz = &quot;left&quot;;&amp;#10;                        if ((round5.thisN === 0)) {&amp;#10;                            text_to_show = &quot;Quiz: True/False   Purchasing a second ticket to jump on improves my chances of getting on my selected ride in case it does not stop for me \n\na) True\nb) False&quot;;&amp;#10;                            cor_first = 0;&amp;#10;                        } else {&amp;#10;                            if ((round5.thisN === 1)) {&amp;#10;                                text_to_show='Quiz: True/False If I succeed after purchasing two tickets it may be that my ride stopped for me\n\na) True\nb) False'&amp;#10;                            } else {&amp;#10;                                if ((round5.thisN === 2)) {&amp;#10;                                    if ((cor_first === 2)) {&amp;#10;                                        text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                                    } else {&amp;#10;                                        text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((quiz_set === 6)) {&amp;#10;                            test_q.alignHoriz = &quot;left&quot;;&amp;#10;                            if ((round6.thisN === 0)) {&amp;#10;                                text_to_show = &quot;Quiz: True/False  If I missed my ride I could have still succeeded if I only purchased a single ticket:\n\na) True. When I chose to jump I gave up on the chance of boarding if my vehicle stops\n\nb) False. If I fail to get on it must be that my vehicle stopped for me AND I failed to jump on&quot;;&amp;#10;                                cor_first = 0;&amp;#10;                            } else {&amp;#10;                                if ((round6.thisN === 1)) {&amp;#10;                                    text_to_show = &quot;Quiz: True/False   Even with a wide platform I should still attempt to press reasonably close to the center\n\na) True. A wide platform doesn't mean I can jump from anywhere. \nb) False. A wide platform means no matter how off I am i'll still get on&quot;;&amp;#10;                                } else {&amp;#10;                                    if ((round6.thisN === 2)) {&amp;#10;                                        if ((cor_first === 2)) {&amp;#10;                                            text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                                        } else {&amp;#10;                                            text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((quiz_set === 7)) {&amp;#10;                                test_q.alignHoriz = &quot;left&quot;;&amp;#10;                                if ((round7.thisN === 0)) {&amp;#10;                                    text_to_show = &quot;Quiz: The 3rd ticket (loading station):\n\na) Improves my chances of getting on my ride (but how much varies by planet) \nb) Can only worsen my chances of getting on my ride\nc) Depends on the planet whether it improves or worsens my chances&quot;;&amp;#10;                                    cor_first = 0;&amp;#10;                                } else {&amp;#10;                                    if ((round7.thisN === 1)) {&amp;#10;                                        text_to_show = &quot;Quiz: If the ride generally stops for me after the first ticket, its always better to buy extra tickets \n\na) I have nothing to lose by purchasing three tickets\nb) Extra tickets do take away from my bonus so if I can win with fewer tickets, I should save the money&quot;;&amp;#10;                                    } else {&amp;#10;                                        if ((round7.thisN === 2)) {&amp;#10;                                            text_to_show = &quot;Quiz:  If I purchase 3 tickets and make it on\n\na) It could be my ride stopped for me (ticket 1), I jumped from the regular platform (ticket 2), or I jumped from the loading area (ticket 3)\n\nb) It must be that my ride did not stop for me (ticket 1) but I jumped on anyway\n\nc) It must be that I specifically made it from the loading area&quot;;&amp;#10;                                        } else {&amp;#10;                                            if ((round7.thisN === 3)) {&amp;#10;                                                if ((cor_first === 3)) {&amp;#10;                                                    text_to_show = &quot;Nice job! You are on a roll.\n\n Press space to continue&quot;;&amp;#10;                                                    before_task = false;&amp;#10;                                                    loop7.finished = true;&amp;#10;                                                } else {&amp;#10;                                                    text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((in_task === true)) {&amp;#10;    if ((block.thisN === 3)) {&amp;#10;        continueRoutine = true;&amp;#10;    } else {&amp;#10;        act_testing.finished = true;&amp;#10;        relearn_rules.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    if ((act_testing.thisN === 0)) {&amp;#10;        corr_total = 0;&amp;#10;        text_to_show = &quot;If after purchasing three tickets I still end up walking, then jumping is extremely difficult AND my ride never stops for me\n\na) True\nb) False&quot;;&amp;#10;    } else {&amp;#10;        if ((act_testing.thisN === 1)) {&amp;#10;            text_to_show = &quot;If I frequently board the train/plane after jumping from the regular platform, then the platform is likely relatively wide OR my ride usually stops for me \n\na) True\nb) False&quot;;&amp;#10;        } else {&amp;#10;            if ((act_testing.thisN === 2)) {&amp;#10;                text_to_show = &quot;If I frequently board the train/plane, BUT ONLY from the LOADING STATION, then the LOADING AREA is wide enough for success BUT the vehicle does not stop for me otherwise \n\na) True\nb) False&quot;;&amp;#10;            } else {&amp;#10;                if ((act_testing.thisN === 3)) {&amp;#10;                    if ((corr_total === 3)) {&amp;#10;                        text_to_show = &quot;Nice job! Now you will explore some narrow practice blocks with feedback.\n\nThese blocks will help get you accustomed to the new version of the game\n\nPress space to continue&quot;;&amp;#10;                    } else {&amp;#10;                        text_to_show = &quot;Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue&quot;;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if num_wrong&lt;4:&amp;#10;    texts='note- too many failures on the quizzes will result in not being able to proceed with the study'&amp;#10;else:  &amp;#10;    texts='WARNING- you have already failed a number of quizzes. More mistakes will risk you being kicked out of the study. Plase read the slides carefully and review them as necessaty.'&amp;#10;&amp;#10;&amp;#10;&amp;#10;if before_task==True:&amp;#10;    if quiz_set==1:&amp;#10;        test_q.alignHoriz=&quot;left&quot;&amp;#10;        if round1.thisN==0:&amp;#10;            text_to_show='Quiz: At the top of the screen is:\n\na) Current location\nb) Location with the treasure'&amp;#10;        elif round1.thisN==1:&amp;#10;            text_to_show='Quiz: At the bottom of the screen is:\n\na) Current location\nb) Location with the treasure'&amp;#10;        elif round1.thisN==2:&amp;#10;            text_to_show='Quiz: True/False   The coins I find in the treasure and the coins I lose to the bandits will have no effect on my bonus payment at the end of the experiment\n\na) True\nb) False'&amp;#10;        elif round1.thisN==3:&amp;#10;            if cor_first&gt;=3:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;#else:&amp;#10;        &amp;#10;    elif quiz_set==2:&amp;#10;        test_q.alignHoriz=&quot;left&quot;&amp;#10;        if round2.thisN==0:&amp;#10;            cor_first=0&amp;#10;            text_to_show='Quiz: If you walk from the fountain you end up at (hint- it rhymes) :\n\na) The mountain\nb) The town'&amp;#10;        elif round2.thisN==1:&amp;#10;            text_to_show='Quiz: If you walk from the desert you end up at:\n\na) The mountain\nb) The town'&amp;#10;        elif round2.thisN==2:&amp;#10;            if cor_first==2:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;    elif quiz_set==3:&amp;#10;        test_q.alignHoriz=&quot;left&quot;&amp;#10;        if round3.thisN==0:&amp;#10;            cor_first=0&amp;#10;            text_to_show='Quiz: Purchasing a ticket :\n\na) Allows you to select a vehicle (plane/train) based on where the treasure is found\nb) Allows you to choose where the treasure is\nc) Guarantees you protection from the bandits'&amp;#10;        elif round3.thisN==1:&amp;#10;            text_to_show='Quiz: The plane always takes you to (hint- its the same color\n\na) The mountain\nb) The town'&amp;#10;        elif round3.thisN==2:&amp;#10;            text_to_show='Quiz: True/False   Where the plane/train go to depends on where you set off from\n\na) True\nb) False'&amp;#10;        elif round3.thisN==3:&amp;#10;            if cor_first==3:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;   &amp;#10;    elif quiz_set==4:&amp;#10;        test_q.alignHoriz=&quot;left&quot;&amp;#10;        if round4.thisN==0:&amp;#10;            cor_first=0&amp;#10;            text_to_show='Quiz: True/False   Purchasing a ticket guarantees that the plane/train will stop for you at the station:\n\na) True. \nb) False. It may not stop for you in which case you waste money'&amp;#10;        elif round4.thisN==1:&amp;#10;            text_to_show='Quiz: If you are at the fountain and the train does not stop for you, you will end up\n\na) Walking to the mountain\nb) Walking to the town\nc) Taking the plane to the town\nd) Taking the plane to the mountain'&amp;#10;        elif round4.thisN==2:&amp;#10;            text_to_show='Quiz: True/False   On every planet, the frequency with which the plane/train stop for you is the same\n\na) True\nb) False'&amp;#10;        elif round4.thisN==3:&amp;#10;            if cor_first==3:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;    &amp;#10;    elif quiz_set==5:&amp;#10;        test_q.alignHoriz=&quot;left&quot;  &amp;#10;        if round5.thisN==0:&amp;#10;            text_to_show='Quiz: True/False   Purchasing a second ticket to jump on can only improve my chances of getting on my selected ride in case it does not stop for me \n\na) True\nb) False'&amp;#10;            cor_first=0&amp;#10;        elif round5.thisN==1:&amp;#10;            text_to_show='Quiz: True/False If I succeed after purchasing two tickets it may be that my ride still stopped for me\n\na) True\nb) False'&amp;#10;        elif round5.thisN==2:&amp;#10;            if cor_first==2:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;    &amp;#10;    &amp;#10;    &amp;#10;    elif quiz_set==6:&amp;#10;        test_q.alignHoriz=&quot;left&quot;  &amp;#10;        if round6.thisN==0:&amp;#10;            text_to_show='Quiz: True/False   If I missed my ride the only explanation is that the platform (on this planet) must be very narrow:\n\na) True. Otherwise I would have caught my ride!\nb) False. I still have to press the spacebar close enough to the center to get on. '&amp;#10;            cor_first=0&amp;#10;        elif round6.thisN==1:&amp;#10;            text_to_show='Quiz: True/False   Even with a wide platform I still need to press close to the center\n\na) True\nb) False'&amp;#10;        elif round6.thisN==2:&amp;#10;            if cor_first==2:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;    &amp;#10;    elif quiz_set==7:&amp;#10;        test_q.alignHoriz=&quot;left&quot;  &amp;#10;        if round7.thisN==0:&amp;#10;            text_to_show='Quiz: The 3rd ticket (loading station):\n\na) Usually improves my chances of getting on my ride (but how much varies by planet) \nb) Can only worsen my chances of getting on my ride\nc) Depends on the planet whether it improves or worsens my chances'&amp;#10;            cor_first=0&amp;#10;        elif round7.thisN==1:&amp;#10;            text_to_show='Quiz: True/False   If the general platform was narrow, the LOADING AREA must also be narrow\n\na) True\nb) False'&amp;#10;        elif round7.thisN==2:&amp;#10;            text_to_show='Quiz:  If I purchase 3 tickets and make it on\n\na) It could be my ride stopped for me (ticket 1), I jumped from the regular platform (ticket 2), or I jumped from the loading area (ticket 3)\n\nb) It must be that my ride did not stop for me (ticket 1) but I jumped on anyway\n\nc) It must be that I specifically made it from the loading area'&amp;#10;        elif round7.thisN==3:&amp;#10;            if cor_first==3:&amp;#10;              text_to_show='Nice job! You are on a roll.\n\n Press space to continue'&amp;#10;              before_task=false&amp;#10;              loop7.finished=True&amp;#10;              &amp;#10;            else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;&amp;#10;        &amp;#10;&amp;#10;   &amp;#10;if in_task==True:&amp;#10;    &amp;#10;    if block.thisN==3:&amp;#10;        continueRoutine=True&amp;#10;    else:&amp;#10;        act_testing.finished=True&amp;#10;        relearn_rules.finished=True&amp;#10;        continueRoutine=False   &amp;#10;    &amp;#10;    &amp;#10;    &amp;#10;    if act_testing.thisN==0:&amp;#10;        corr_total=0&amp;#10;        text_to_show=&quot;If after purchasing three tickets I still end up walking, then the LOADING STATION is likely extremely difficult to jump from\n\na) True\nb) False&quot;&amp;#10;    elif act_testing.thisN==1:&amp;#10;        text_to_show=&quot;If I frequently board the train/plane after jumping from the regular platform, then the platform is likely relatively wide \n\na) True\nb) False&quot;&amp;#10;    elif act_testing.thisN==2:&amp;#10;        text_to_show=&quot;If I frequently board the train/plane, but only from the LOADING STATION\, then only the LOADING AREA is wide enough for success \n\na) True\nb) False&quot;&amp;#10;    elif act_testing.thisN==3:&amp;#10;        if corr_total==3:&amp;#10;              text_to_show='Nice job! Now you will explore some narrow practice blocks with feedback.\n\nThese blocks will help get you accustomed to the new version of the game\n\nPress space to continue'&amp;#10;        else:&amp;#10;              text_to_show='Sorry something seems to be unclear to you.\nWe are going to review the instructions/tips one more time.\n\nPress space to continue'          &amp;#10;#else:&amp;#10; #   if act_testing.thisN==0:&amp;#10;  #      text_to_show='In order to catch a ride you must press the spacebar when'&amp;#10;   #     correct_mat='a'&amp;#10;    #    answer_one='A) The vehicle is exactly in the middle of the screen'&amp;#10;     #   answer_two='B) As soon as I see the vehicle '&amp;#10;      #  answer_three='C) Depends on the vehicle. To catch the plane I press as soon as I see it, but for the train I must press when I see them in the middle of the screen.'&amp;#10;       # answer_four=''&amp;#10;        #pos_3=[0,-.25]&amp;#10;        #pos_4=[-2,-2]&amp;#10;    #elif act_testing.thisN==1:&amp;#10;     #   text_to_show='If a ticket officer is lenient'&amp;#10;      #  correct_mat='b'&amp;#10;       # answer_one='A) It means that I will always make it on irrespective of my press'&amp;#10;        #answer_two='B) it means that I will get on as wide as I am fairly accurate'&amp;#10;        #answer_three='C) It means that I will always make it on as wide as I press the spacebar'&amp;#10;        #pos_3=[0,-.25]&amp;#10;        #pos_4=[-2,-2]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((before_task === true)) {&amp;#10;    if ((quiz_set === 1)) {&amp;#10;        if ((round1.thisN === 0)) {&amp;#10;            if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                cor_first += 1;&amp;#10;                psychoJS.experiment.addData(&quot;quiz_1&quot;, 1);&amp;#10;            } else {&amp;#10;                cor_first = 0;&amp;#10;                psychoJS.experiment.addData(&quot;quiz_1&quot;, 0);&amp;#10;                num_wrong += 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((round1.thisN === 1)) {&amp;#10;                if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                    cor_first += 1;&amp;#10;                    psychoJS.experiment.addData(&quot;quiz_1&quot;, 1);&amp;#10;                } else {&amp;#10;                    cor_first = 0;&amp;#10;                    psychoJS.experiment.addData(&quot;quiz_1&quot;, 0);&amp;#10;                    num_wrong += 1;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((round1.thisN === 2)) {&amp;#10;                    if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                        cor_first += 1;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_1&quot;, 1);&amp;#10;                    } else {&amp;#10;                        cor_first = 0;&amp;#10;                        num_wrong += 1;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_1&quot;, 0);&amp;#10;                        console.log((&quot;num wrong&quot; + num_wrong.toString()));&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((round1.thisN === 3)) {&amp;#10;                        if ((cor_first &gt;= 3)) {&amp;#10;                            quiz_set += 1;&amp;#10;                            loop1.finished = true;&amp;#10;                            cor_first = 0;&amp;#10;                        } else {&amp;#10;                            slide_review = 1;&amp;#10;                            times_quiz_wrong += 1;&amp;#10;                            review_first.thisN = 0;&amp;#10;                            set_of_instructions = 1;&amp;#10;                            cor_first = 0;&amp;#10;                            if ((loop1.thisN &gt; 2)) {&amp;#10;                                psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                            }&amp;#10;                            continueRoutine = false;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((quiz_set === 2)) {&amp;#10;            console.log((&quot;quiz set os&quot; + quiz_set.toString()));&amp;#10;            if ((round2.thisN === 0)) {&amp;#10;                if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                    cor_first += 1;&amp;#10;                    psychoJS.experiment.addData(&quot;quiz_2&quot;, 1);&amp;#10;                } else {&amp;#10;                    psychoJS.experiment.addData(&quot;quiz_2&quot;, 0);&amp;#10;                    cor_first = 0;&amp;#10;                    num_wrong += 1;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((round2.thisN === 1)) {&amp;#10;                    if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                        cor_first += 1;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_2&quot;, 1);&amp;#10;                    } else {&amp;#10;                        cor_first = 0;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_2&quot;, 0);&amp;#10;                        num_wrong += 1;&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((round2.thisN === 2)) {&amp;#10;                        if ((cor_first &gt;= 2)) {&amp;#10;                            loop2.finished = true;&amp;#10;                            quiz_set += 1;&amp;#10;                            cor_first = 0;&amp;#10;                            continueRoutine = false;&amp;#10;                        } else {&amp;#10;                            slide_review = 4;&amp;#10;                            times_quiz_wrong += 1;&amp;#10;                            set_of_instructions = 2;&amp;#10;                            if ((loop2.thisN &gt; 2)) {&amp;#10;                                psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                            }&amp;#10;                            cor_first = 0;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((quiz_set === 3)) {&amp;#10;                if ((round3.thisN === 0)) {&amp;#10;                    if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                        cor_first += 1;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_3&quot;, 1);&amp;#10;                    } else {&amp;#10;                        cor_first = 0;&amp;#10;                        psychoJS.experiment.addData(&quot;quiz_3&quot;, 0);&amp;#10;                        num_wrong += 1;&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((round3.thisN === 1)) {&amp;#10;                        if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                            cor_first += 1;&amp;#10;                            psychoJS.experiment.addData(&quot;quiz_3&quot;, 1);&amp;#10;                        } else {&amp;#10;                            cor_first = 0;&amp;#10;                            psychoJS.experiment.addData(&quot;quiz_3&quot;, 0);&amp;#10;                            num_wrong += 1;&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((round3.thisN === 2)) {&amp;#10;                            if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                                cor_first += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_3&quot;, 1);&amp;#10;                            } else {&amp;#10;                                cor_first = 0;&amp;#10;                                num_wrong += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_3&quot;, 0);&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((round3.thisN === 3)) {&amp;#10;                                if ((cor_first &gt;= 2)) {&amp;#10;                                    loop3.finished = true;&amp;#10;                                    cor_first = 0;&amp;#10;                                    quiz_set += 1;&amp;#10;                                    console.log(&quot;quiz set&quot;);&amp;#10;                                    continueRoutine = false;&amp;#10;                                } else {&amp;#10;                                    slide_review = 7;&amp;#10;                                    set_of_instructions = 3;&amp;#10;                                    times_quiz_wrong += 1;&amp;#10;                                    cor_first = 0;&amp;#10;                                    if ((loop3.thisN &gt; 2)) {&amp;#10;                                        psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                                    }&amp;#10;                                    continueRoutine = false;&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((quiz_set === 4)) {&amp;#10;                    miss_sometimes = true;&amp;#10;                    if ((round4.thisN === 0)) {&amp;#10;                        if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                            cor_first += 1;&amp;#10;                            psychoJS.experiment.addData(&quot;quiz_4&quot;, 1);&amp;#10;                        } else {&amp;#10;                            cor_first = 0;&amp;#10;                            num_wrong += 1;&amp;#10;                            psychoJS.experiment.addData(&quot;quiz_4&quot;, 0);&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((round4.thisN === 1)) {&amp;#10;                            if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                cor_first += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_4&quot;, 1);&amp;#10;                            } else {&amp;#10;                                cor_first = 0;&amp;#10;                                num_wrong += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_4&quot;, 0);&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((round4.thisN === 2)) {&amp;#10;                                if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                                    cor_first += 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_4&quot;, 1);&amp;#10;                                } else {&amp;#10;                                    cor_first = 0;&amp;#10;                                    num_wrong += 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_4&quot;, 0);&amp;#10;                                }&amp;#10;                            } else {&amp;#10;                                if ((round4.thisN === 3)) {&amp;#10;                                    if ((cor_first &gt;= 3)) {&amp;#10;                                        loop4.finished = true;&amp;#10;                                        quiz_set += 1;&amp;#10;                                        cor_first = 0;&amp;#10;                                        times_quiz_wrong += 1;&amp;#10;                                        continueRoutine = false;&amp;#10;                                    } else {&amp;#10;                                        slide_review = 12;&amp;#10;                                        cor_first = 0;&amp;#10;                                        set_of_instructions = 4;&amp;#10;                                        if ((loop4.thisN &gt; 2)) {&amp;#10;                                            psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                    miss_sometimes = true;&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                } else {&amp;#10;                    if ((quiz_set === 5)) {&amp;#10;                        if ((round5.thisN === 0)) {&amp;#10;                            if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                cor_first += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_5&quot;, 1);&amp;#10;                            } else {&amp;#10;                                cor_first = 0;&amp;#10;                                num_wrong += 1;&amp;#10;                                psychoJS.experiment.addData(&quot;quiz_5&quot;, 0);&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((round5.thisN === 1)) {&amp;#10;                                if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                    cor_first += 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_5&quot;, 1);&amp;#10;                                } else {&amp;#10;                                    cor_first = 0;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_5&quot;, 0);&amp;#10;                                    num_wrong += 1;&amp;#10;                                }&amp;#10;                            } else {&amp;#10;                                if ((round5.thisN === 2)) {&amp;#10;                                    if ((cor_first &gt;= 2)) {&amp;#10;                                        loop5.finished = true;&amp;#10;                                        quiz_set += 1;&amp;#10;                                        cor_first = 0;&amp;#10;                                        continueRoutine = false;&amp;#10;                                    } else {&amp;#10;                                        slide_review = 18;&amp;#10;                                        times_quiz_wrong += 1;&amp;#10;                                        set_of_instructions -= 1;&amp;#10;                                        cor_first = 0;&amp;#10;                                        if ((loop5.thisN &gt; 2)) {&amp;#10;                                            psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    } else {&amp;#10;                        if ((quiz_set === 6)) {&amp;#10;                            if ((round6.thisN === 0)) {&amp;#10;                                if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                                    cor_first += 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_6&quot;, 1);&amp;#10;                                } else {&amp;#10;                                    cor_first = 0;&amp;#10;                                    num_wrong += 1;&amp;#10;                                    psychoJS.experiment.addData(&quot;quiz_6&quot;, 0);&amp;#10;                                }&amp;#10;                            } else {&amp;#10;                                if ((round6.thisN === 1)) {&amp;#10;                                    if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                        cor_first += 1;&amp;#10;                                        psychoJS.experiment.addData(&quot;quiz_6&quot;, 1);&amp;#10;                                    } else {&amp;#10;                                        cor_first = 0;&amp;#10;                                        num_wrong += 1;&amp;#10;                                        psychoJS.experiment.addData(&quot;quiz_6&quot;, 0);&amp;#10;                                    }&amp;#10;                                } else {&amp;#10;                                    if ((round6.thisN === 2)) {&amp;#10;                                        if ((cor_first &gt;= 2)) {&amp;#10;                                            loop6.finished = true;&amp;#10;                                            quiz_set += 1;&amp;#10;                                            continueRoutine = false;&amp;#10;                                            cor_first = 0;&amp;#10;                                        } else {&amp;#10;                                            slide_review = 23;&amp;#10;                                            times_quiz_wrong += 1;&amp;#10;                                            set_of_instructions -= 1;&amp;#10;                                            cor_first = 0;&amp;#10;                                            if ((loop6.thisN &gt; 2)) {&amp;#10;                                                psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        } else {&amp;#10;                            if ((quiz_set === 7)) {&amp;#10;                                if ((round7.thisN === 0)) {&amp;#10;                                    if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                        cor_first += 1;&amp;#10;                                        psychoJS.experiment.addData(&quot;quiz_7&quot;, 1);&amp;#10;                                    } else {&amp;#10;                                        cor_first = 0;&amp;#10;                                        num_wrong += 1;&amp;#10;                                        psychoJS.experiment.addData(&quot;quiz_7&quot;, 0);&amp;#10;                                    }&amp;#10;                                } else {&amp;#10;                                    if ((round7.thisN === 1)) {&amp;#10;                                        if ((quiz_answer.keys === &quot;b&quot;)) {&amp;#10;                                            cor_first += 1;&amp;#10;                                            psychoJS.experiment.addData(&quot;quiz_7&quot;, 1);&amp;#10;                                        } else {&amp;#10;                                            cor_first = 0;&amp;#10;                                            num_wrong += 1;&amp;#10;                                            psychoJS.experiment.addData(&quot;quiz_7&quot;, 0);&amp;#10;                                        }&amp;#10;                                    } else {&amp;#10;                                        if ((round7.thisN === 2)) {&amp;#10;                                            if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;                                                cor_first += 1;&amp;#10;                                                psychoJS.experiment.addData(&quot;quiz_7&quot;, 1);&amp;#10;                                            } else {&amp;#10;                                                cor_first = 0;&amp;#10;                                                psychoJS.experiment.addData(&quot;quiz_7&quot;, 1);&amp;#10;                                                num_wrong += 1;&amp;#10;                                            }&amp;#10;                                        } else {&amp;#10;                                            if ((round7.thisN === 3)) {&amp;#10;                                                if ((cor_first &gt;= 3)) {&amp;#10;                                                    loop7.finished = true;&amp;#10;                                                    cor_first = 0;&amp;#10;                                                    round7.finished = true;&amp;#10;                                                    before_task = false;&amp;#10;                                                    continueRoutine = false;&amp;#10;                                                } else {&amp;#10;                                                    slide_review = 29;&amp;#10;                                                    cor_first = 0;&amp;#10;                                                    times_quiz_wrong += 1;&amp;#10;                                                    set_of_instructions -= 1;&amp;#10;                                                    if ((loop7.thisN &gt; 3)) {&amp;#10;                                                        psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;                                                    }&amp;#10;                                                }&amp;#10;                                            }&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((in_task === true)) {&amp;#10;        if ((quiz_answer.keys === &quot;a&quot;)) {&amp;#10;            corr_total += 1;&amp;#10;            psychoJS.experiment.addData(&quot;quiz_8&quot;, 1);&amp;#10;        } else {&amp;#10;            corr_total = 0;&amp;#10;            num_wrong += 1;&amp;#10;            psychoJS.experiment.addData(&quot;quiz_8&quot;, 0);&amp;#10;        }&amp;#10;        if ((corr_total &gt;= 3)) {&amp;#10;            review_loop_1.finished = true;&amp;#10;            relearn_rules.finished = true;&amp;#10;            act_testing.finished = true;&amp;#10;        } else {&amp;#10;            slide_review = 39;&amp;#10;            if ((relearn_rules.thisN &gt; 3)) {&amp;#10;                psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;num_wrong&quot;, num_wrong);&amp;#10;console.log((&quot;num_wrong&quot; + num_wrong.toString()));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if before_task==True:&amp;#10;    if quiz_set==1:&amp;#10;        if round1.thisN==0:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 0)&amp;#10;&amp;#10;                num_wrong+=1&amp;#10;               &amp;#10;    &amp;#10;        elif round1.thisN==1:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 0)&amp;#10;                num_wrong+=1&amp;#10;        elif round1.thisN==2:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_1&quot;, 0)&amp;#10;              &amp;#10;                print('num wrong'+str(num_wrong))&amp;#10;        elif round1.thisN==3:&amp;#10;            if cor_first&gt;=3:&amp;#10;                quiz_set+=1&amp;#10;                &amp;#10;                loop1.finished=True&amp;#10;&amp;#10;                cor_first=0&amp;#10;&amp;#10;            else:&amp;#10;                slide_review=1&amp;#10;                times_quiz_wrong+=1&amp;#10;                review_first.thisN=0&amp;#10;                set_of_instructions =1&amp;#10;                cor_first=0&amp;#10;                if round1.thisN&gt;2:&amp;#10;                    core.quit()&amp;#10;                continueRoutine=False&amp;#10;&amp;#10;            &amp;#10;    elif quiz_set==2:&amp;#10;        print('quiz set os'+ str(quiz_set))&amp;#10;        if round2.thisN==0:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_2&quot;, 1)&amp;#10;            else:&amp;#10;                thisExp.addData(&quot;quiz_2&quot;, 0)&amp;#10;&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;        elif round2.thisN==1:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_2&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_2&quot;, 0)&amp;#10;&amp;#10;                num_wrong+=1&amp;#10;        elif round2.thisN==2:&amp;#10;            if cor_first&gt;=2:&amp;#10;                loop2.finished=True&amp;#10;                quiz_set+=1&amp;#10;                cor_first=0&amp;#10;                continueRoutine=False&amp;#10;            else:&amp;#10;                slide_review=4&amp;#10;                times_quiz_wrong+=1&amp;#10;                set_of_instructions=2&amp;#10;                if round2.thisN&gt;2:&amp;#10;                    core.quit()&amp;#10;&amp;#10;                cor_first=0&amp;#10;    elif quiz_set==3:&amp;#10;        if round3.thisN==0:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 0)&amp;#10;&amp;#10;                num_wrong+=1&amp;#10;        elif round3.thisN==1:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 0)&amp;#10;&amp;#10;                num_wrong+=1&amp;#10;        elif round3.thisN==2:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_3&quot;, 0)&amp;#10;        elif round3.thisN==3:&amp;#10;            if cor_first&gt;=2:&amp;#10;                loop3.finished=True&amp;#10;                &amp;#10;                &amp;#10;                cor_first=0&amp;#10;                quiz_set+=1&amp;#10;                print('quiz set')&amp;#10;                continueRoutine=False&amp;#10;&amp;#10;            else:&amp;#10;                slide_review=7&amp;#10;                set_of_instructions=3&amp;#10;                times_quiz_wrong+=1&amp;#10;                cor_first=0   &amp;#10;                if round3.thisN&gt;3:&amp;#10;                    core.quit()&amp;#10;                continueRoutine=false&amp;#10;    elif quiz_set==4:&amp;#10;        miss_sometimes=True &amp;#10;        if round4.thisN==0:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 1)&amp;#10;&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 0)&amp;#10;&amp;#10;        elif round4.thisN==1:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 0)&amp;#10;        elif round4.thisN==2:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_4&quot;, 0)&amp;#10;        elif round4.thisN==3:&amp;#10;            if cor_first&gt;=3:&amp;#10;                loop4.finished=True&amp;#10;                quiz_set+=1&amp;#10;                cor_first=0&amp;#10;                times_quiz_wrong+=1&amp;#10;                continueRoutine=False&amp;#10;                &amp;#10;            else:&amp;#10;                slide_review=12&amp;#10;                cor_first=0   &amp;#10;                set_of_instructions=4&amp;#10;                if round4.thisN&gt;3:&amp;#10;                    core.quit()&amp;#10;            &amp;#10;            miss_sometimes=True&amp;#10;    elif quiz_set==5:&amp;#10;        if round5.thisN==0:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_5&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_5&quot;, 0)&amp;#10;        elif round5.thisN==1:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_5&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_5&quot;, 0)&amp;#10;&amp;#10;                num_wrong+=1&amp;#10;        elif round5.thisN==2:&amp;#10;            if cor_first&gt;=2:&amp;#10;                loop5.finished=True&amp;#10;                quiz_set+=1&amp;#10;                cor_first=0&amp;#10;                continueRoutine=False&amp;#10;                &amp;#10;            else:&amp;#10;                slide_review=18&amp;#10;                &amp;#10;                times_quiz_wrong+=1&amp;#10;                set_of_instructions-=1&amp;#10;&amp;#10;                cor_first=0 &amp;#10;                if round5.thisN&gt;3:&amp;#10;                    core.quit()&amp;#10;    elif quiz_set==6:&amp;#10;        if round6.thisN==0:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_6&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_6&quot;, 0)&amp;#10;&amp;#10;        elif round6.thisN==1:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_6&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_6&quot;, 0)&amp;#10;&amp;#10;        elif round6.thisN==2:&amp;#10;            if cor_first&gt;=2:&amp;#10;                loop6.finished=True&amp;#10;                quiz_set+=1&amp;#10;                continueRoutine=False&amp;#10;                cor_first=0&amp;#10;            else:&amp;#10;                slide_review=23&amp;#10;                times_quiz_wrong+=1&amp;#10;                set_of_instructions-=1&amp;#10;&amp;#10;                cor_first=0       &amp;#10;                if round6.thisN&gt;3:&amp;#10;                    core.quit()&amp;#10;            &amp;#10;    elif quiz_set==7:&amp;#10;        if round7.thisN==0:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 0)&amp;#10;&amp;#10;        elif round7.thisN==1:&amp;#10;            if quiz_answer.keys=='b':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                num_wrong+=1&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 0)&amp;#10;        elif round7.thisN==2:&amp;#10;            if quiz_answer.keys=='a':&amp;#10;                cor_first+=1&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 1)&amp;#10;            else:&amp;#10;                cor_first=0&amp;#10;                thisExp.addData(&quot;quiz_7&quot;, 1)&amp;#10;                num_wrong+=1&amp;#10;        elif round7.thisN==3:&amp;#10;            if cor_first&gt;=3:&amp;#10;                loop7.finished=True&amp;#10;                cor_first=0&amp;#10;                round7.finished=True&amp;#10;                before_task=False&amp;#10;                continueRoutine=False&amp;#10;&amp;#10;            else:&amp;#10;                slide_review=29&amp;#10;                cor_first=0   &amp;#10;                times_quiz_wrong+=1&amp;#10;                set_of_instructions-=1&amp;#10;                if round7.thisN&gt;3:&amp;#10;                    core.quit()&amp;#10;&amp;#10;                   &amp;#10;elif in_task==True:&amp;#10;     if quiz_answer.keys=='a':&amp;#10;        corr_total+=1&amp;#10;        thisExp.addData(&quot;quiz_8&quot;, 1)&amp;#10;     else:&amp;#10;        corr_total=0&amp;#10;        num_wrong+=1&amp;#10;        thisExp.addData(&quot;quiz_8&quot;, 0)&amp;#10;     if corr_total&gt;=3:&amp;#10;        review_loop_1.finished=True&amp;#10;        relearn_rules.finished=True&amp;#10;        act_testing.finished=True&amp;#10;&amp;#10;     else:&amp;#10;        slide_review=40&amp;#10;        if relearn_rules.thisN&gt;3:&amp;#10;            core.quit()&amp;#10;    &amp;#10;&amp;#10;thisExp.addData(&quot;num_wrong&quot;, num_wrong)&amp;#10;&amp;#10;    &amp;#10;&amp;#10;#if act_testing.thisN==0:&amp;#10; #   corr_total=[0]&amp;#10;  #  if test_action_answer.keys=='a':&amp;#10;&amp;#10;   #     test_action_answer.corr=1&amp;#10;&amp;#10;    #    corr_total.append(1)&amp;#10;&amp;#10;&amp;#10;    #else:&amp;#10;&amp;#10;     #   test_action_answer.corr=0&amp;#10;      #  corr_total=[0]&amp;#10;&amp;#10;&amp;#10;#elif act_testing.thisN==1:&amp;#10;&amp;#10; #      if test_action_answer.keys=='b':&amp;#10;&amp;#10;  #      test_action_answer.corr=1&amp;#10;&amp;#10;   #     corr_total.append(1)&amp;#10;&amp;#10;    #   else:&amp;#10;&amp;#10;     #   test_action_answer.corr=0&amp;#10;      #  corr_total=[0]&amp;#10;&amp;#10;&amp;#10;&amp;#10;       &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="test_q" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="test_q" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to_show" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="quiz_answer" plugin="None">
        <Param val="'a','b','c','d','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="quiz_answer" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="warnin" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="warnin" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.6)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="make_fake_choice">
      <RoutineSettingsComponent name="make_fake_choice" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="make_fake_choice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_23" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((last_beg === 0)) {&amp;#10;    beg_island = island_b0;&amp;#10;    last_beg = 1;&amp;#10;} else {&amp;#10;    beg_island = island_b1;&amp;#10;    last_beg = 0;&amp;#10;}&amp;#10;shuffle(islands);&amp;#10;shuffle(transport);&amp;#10;end_island = islands[0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# we set the w_env &amp;#10;&amp;#10;w_env=1&amp;#10;&amp;#10;# we need to go from place to place now &amp;#10;start_stop=random.sample([0,1,2],2)&amp;#10;&amp;#10;beg_island=islands[start_stop[0]]&amp;#10;left_plane=transport[start_stop[0]]&amp;#10;right_plane=transport[start_stop[1]]&amp;#10;end_island=islands[start_stop[1]]&amp;#10;&amp;#10;letter_height=.075&amp;#10;opt_answer=0&amp;#10;&amp;#10;#where to put computer opt in and self opt in&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_23" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="dep_island_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_1" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="explain_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="explain_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0,0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Let's see an example of what it looks like to walk! &amp;#10;&amp;#10;Press space to see where you walk to.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="show_fake_choice">
      <RoutineSettingsComponent name="show_fake_choice" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="show_fake_choice" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="show_plane_selected_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="show_back = 1000;&amp;#10;start_time = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#means subject opted into choice &amp;#10;&amp;#10;show_back=1000&amp;#10;start_time=0&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="show_plane_selected_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="walking_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walking_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dep_island_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="feeedbackss">
      <RoutineSettingsComponent name="feeedbackss" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feeedbackss" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="give_feedback_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="dep_time = 2.5;&amp;#10;dep_time_first = 2.5;&amp;#10;dplace = state_transitions[beg_island];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="     # set up timings &amp;#10;dep_time=2.5&amp;#10;    #what about the origin image&amp;#10;dep_time_first=2.5&amp;#10;&amp;#10; &amp;#10;dplace=state_transitions[beg_island]&amp;#10;# which plane do we want to show &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="give_feedback_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="departure_state_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="departure_state_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$dplace" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press space to continue " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="next_trial_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="next_trial_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="walking_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walking_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="make_choice_2">
      <RoutineSettingsComponent name="make_choice_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="make_choice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_25" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="last_time=[]&amp;#10;last_beg=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="last_time=[]; &amp;#10;last_beg=0;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((cs === 0)) {&amp;#10;    continueRoutine=false;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;shuffle(islands);&amp;#10;shuffle(transport);&amp;#10;end_island = islands[0];&amp;#10;left_plane = transport[0];&amp;#10;right_plane = transport[1];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# we set the w_env &amp;#10;&amp;#10;&amp;#10;# we need to go from place to place now &amp;#10;start_stop=random.sample([0,1,2],2)&amp;#10;&amp;#10;# decide if left or right island will be correct &amp;#10;&amp;#10;beg_island=islands[start_stop[0]]&amp;#10;&amp;#10;end_island=islands[start_stop[1]]&amp;#10;&amp;#10;# make sure correct answer is available &amp;#10;one_cor=0&amp;#10;while one_cor==0:&amp;#10;    start_stop=random.sample([0,1],2)&amp;#10;    left_plane=transport[start_stop[0]]&amp;#10;    right_plane=transport[start_stop[1]]&amp;#10;    end_island=islands[start_stop[1]]&amp;#10;&amp;#10;    if action_transitions[left_plane]==end_island or action_transitions[right_plane]==end_island:&amp;#10;        if end_island != last_time:&amp;#10;            one_cor=1&amp;#10;            last_time=end_island" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_25" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="press1" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="press1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 1 " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="left_choice_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left_choice_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24,.48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="right_choice_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right_choice_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="destination_island_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="destination_island_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.6)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_8" plugin="None">
        <Param val="1,'1','9',9" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="dep_island_23" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_23" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="press9_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="press9_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, -.05)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press 9" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="show_choice_2">
      <RoutineSettingsComponent name="show_choice_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="show_choice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="show_plane_selected_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="show_back = 0;&amp;#10;start_time = 0;&amp;#10;if ((cs === 0)) {&amp;#10;    walking_choice = 1;&amp;#10;    var_time_left = 0;&amp;#10;    var_time_right = 0;&amp;#10;} else {&amp;#10;    walking_choice = 0;&amp;#10;    if ((key_resp_8.keys === &quot;1&quot;)) {&amp;#10;        plane_selected = left_plane;&amp;#10;        var_time_left = 1;&amp;#10;        var_time_right = 0;&amp;#10;    } else {&amp;#10;        plane_selected = right_plane;&amp;#10;        var_time_left = 0;&amp;#10;        var_time_right = 1;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#means subject opted into choice &amp;#10;show_back=0&amp;#10;#when do we show plane selected&amp;#10;start_time=0&amp;#10;if cs==0:&amp;#10;    walking_choice=1&amp;#10;    var_time_left=0&amp;#10;    var_time_right=0&amp;#10;&amp;#10;else:&amp;#10;    walking_choice=0&amp;#10;    if key_resp_8.keys=='1':&amp;#10;        plane_selected=left_plane&amp;#10;        var_time_left=1&amp;#10;        var_time_right=0&amp;#10;    else: &amp;#10;        plane_selected=right_plane&amp;#10;        var_time_left=0&amp;#10;        var_time_right=1&amp;#10;&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="show_plane_selected_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="right_choice_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$right_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right_choice_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$var_time_right" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="walking_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walking_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$walking_choice" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dep_island_24" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_24" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state_supposed_to_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_supposed_to_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="inteded_location_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="inteded_location_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure Location" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="left_choice_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$left_plane" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left_choice_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.25, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$start_time" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$var_time_left" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="opt_in_choice_2">
      <RoutineSettingsComponent name="opt_in_choice_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="opt_in_choice_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="deterine_type_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_2.alignHoriz = &quot;left&quot;;&amp;#10;if ((miss_sometimes === false)) {&amp;#10;    instr_text = &quot;You decide how you want to travel\n\n\nBuy a ticket (Press Y)\nI rather walk (Press N)&quot;;&amp;#10;} else {&amp;#10;    instr_text = &quot;This time your ride will not always stop for you!\n\n\nBuy a ticket (Press Y)&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_2.alignHoriz=&quot;left&quot;&amp;#10;if miss_sometimes==False:&amp;#10;    instr_text='You decide how you want to travel\n\n\nBuy a ticket (Press Y)\nI rather walk (Press N)'&amp;#10;else:&amp;#10;    instr_text='This time your ride will not always stop for you!\n\n\nBuy a ticket (Press Y)'&amp;#10;&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="deterine_type_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_32" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="start_stop=randomsample([0,1],2)&amp;#10;r=randint(0,2);&amp;#10;&amp;#10;beg_island = islands_start[r];&amp;#10;&amp;#10;left_plane = transport[start_stop[0]];&amp;#10;right_plane = transport[start_stop[1]];&amp;#10;if ((beg_island=='islands/hut.png')) {&amp;#10;    end_island = 'islands/town.png';&amp;#10;    } else {&amp;#10;        end_island ='islands/mountain.png';   &amp;#10;    }" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# we need to go from place to place now &amp;#10;import random&amp;#10;&amp;#10;if blocks_mixed.thisRepN ==1:&amp;#10;    current_condition_mostly_as = list_as&amp;#10;    col = [0.1216, 0.4745, 0.1216]&amp;#10;&amp;#10;elif  blocks_mixed.thisRepN ==0:&amp;#10;    current_condition_mostly_as = list_ss&amp;#10;    col = [-0.2549, 0.2392, 0.2549]&amp;#10;else:&amp;#10;    current_condition_mostly_as = list_ss_as&amp;#10;    col = [0.9216, 0.7412, 0.4039]&amp;#10;&amp;#10;start_stop=random.sample([0,1],2)&amp;#10;&amp;#10;beg_island=islands[start_stop[0]]&amp;#10;left_plane=transport[start_stop[0]]&amp;#10;right_plane=transport[start_stop[1]]&amp;#10;end_island=islands[start_stop[1]]&amp;#10;&amp;#10;letter_height=.075&amp;#10;opt_answer=0&amp;#10;&amp;#10;#where to put computer opt in and self opt in&amp;#10;#if current_condition_mostly_as[mostly_as.thisRepN] != 1:&amp;#10; #   condition_text = &quot;SAS&quot;&amp;#10;#else:&amp;#10;   # condition_text = &quot;AS&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_32" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="dep_island_22" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_22" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_15" plugin="None">
        <Param val="'y','n','1','9'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_15" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="record_optin_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_resp_15.keys === &quot;y&quot;)) {&amp;#10;    cs = 1;&amp;#10;    action_or_not = 0;&amp;#10;} else {&amp;#10;    if ((key_resp_15.keys === &quot;n&quot;)) {&amp;#10;        cs = 0;&amp;#10;        action_or_not = 3;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;if key_resp_15.keys=='y':&amp;#10;    cs=1&amp;#10;    action_or_not=0&amp;#10;elif key_resp_15.keys=='n':&amp;#10;    cs=0&amp;#10;    action_or_not=3&amp;#10;    &amp;#10;    &amp;#10;#left_plane=transport[start_stop[0]]&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="record_optin_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$instr_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="feeedback__2">
      <RoutineSettingsComponent name="feeedback__2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="feeedback__2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="give_feedback_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="num_consecutive_correct = 0;&amp;#10;miss_sometimes = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="pos_d = [0, 0];&amp;#10;if ((left_plane === plane_selected)) {&amp;#10;    pos_d = [-0.25, 0.25];&amp;#10;    left_arrow = 100;&amp;#10;    right_arrow = 0;&amp;#10;} else {&amp;#10;    if ((right_plane === plane_selected)) {&amp;#10;        pos_d = [0.25, 0.25];&amp;#10;        left_arrow = 0;&amp;#10;        right_arrow = 100;&amp;#10;    }&amp;#10;}&amp;#10;miss_or=6;&amp;#10;if ((miss_sometimes === true)) {&amp;#10;    miss_or=0;&amp;#10;    if ((cs === 1)) {&amp;#10;        lets_see = randint(0, 7);&amp;#10;        &amp;#10;        if ((lets_see &gt; 2)) {&amp;#10;            cs = 0;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((cs === 1)) {&amp;#10;    plane_to_show = plane_selected;&amp;#10;    only_if_acted = 7;&amp;#10;    walking_choice = 0;&amp;#10;    dplace = action_transitions[plane_selected];&amp;#10;} else {&amp;#10;    plane_to_show = left_plane;&amp;#10;    dplace = state_transitions[beg_island];&amp;#10;    walking_choice = 7;&amp;#10;    only_if_acted = 0.0;&amp;#10;}&amp;#10;if ((dplace === end_island)) {&amp;#10;    num_consecutive_correct += 1;&amp;#10;} else {&amp;#10;    num_consecutive_correct = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="pos_c=[0,0]&amp;#10;     # set up timings &amp;#10;if left_plane==plane_to_show:&amp;#10;    pos_c=[-.25,.25]&amp;#10;    left_arrow=100&amp;#10;    right_arrow=0&amp;#10;elif right_plane==plane_to_show:&amp;#10;    pos_c=[.25,.25]&amp;#10;    left_arrow=0&amp;#10;    right_arrow=100&amp;#10;if miss_sometimes==True:&amp;#10;    print(&quot;now you will miss sometimes&quot;)&amp;#10;    if cs==1:&amp;#10;        lets_see=random.randint(0,6)&amp;#10;        if let_see&gt;2:&amp;#10;            cs=0&amp;#10;    # he gets on his riden&amp;#10;&amp;#10;&amp;#10;if cs==1:&amp;#10;    plane_to_show=plane_selected&amp;#10;    only_if_acted=7&amp;#10;    walking_choice=0&amp;#10; &amp;#10;    dplace=action_transitions[plane_selected]&amp;#10;    &amp;#10;else:&amp;#10;    plane_to_show=left_plane&amp;#10;    dplace=state_transitions[beg_island]&amp;#10;&amp;#10;    print('dplace is '+str(dplace))&amp;#10;    walking_choice=7&amp;#10;    only_if_acted=0.0&amp;#10;&amp;#10;&amp;#10;if dplace == end_island:&amp;#10;    num_consecutive_correct+=1&amp;#10;else:&amp;#10;    # was it possible to give a correct answer&amp;#10;    num_consecutive_correct=0&amp;#10;    &amp;#10;print('we do get past the code')&amp;#10;print('end island'+str(end_island))&amp;#10;print('plane_to_show'+str(plane_to_show))&amp;#10;print('only ieeeed'+str(num_consecutive_correct))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="give_feedback_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="tran_selected_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.9216, 0.9216, 0.9216" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$plane_to_show" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="tran_selected_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$pos_d" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.24, .48)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_acted" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_21" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_21" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Press space to continue " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="next_trial_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="next_trial_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="walking_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/walking.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="walking_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.24, 0.24)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$walking_choice" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="dep_island_26" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_26" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$dplace" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="final_state_supposed_to_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$end_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="final_state_supposed_to_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.66)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="counter" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="counter" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.5,-.65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$miss_or" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(num_consecutive_correct) + &quot; correct in a row&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_14" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((miss_sometimes === false)){&amp;#10;    if ((see_actions.thisRepN &gt; 15)) {&amp;#10;        psychoJS.quit({message: 'You have failed the attention check and therefore cannot proceed with the study'});&amp;#10;    }&amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="determine_loop_end" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((miss_sometimes === false)) {&amp;#10;    if ((num_consecutive_correct &gt;= 5)) {&amp;#10;        see_actions.finished = true;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if miss_sometimes==False:&amp;#10;    if num_consecutive_correct&gt;=5:&amp;#10;        see_actions.finished=True; &amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="determine_loop_end" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="inteded_location_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="inteded_location_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="7" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure Location" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="new_examples">
      <RoutineSettingsComponent name="new_examples" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="new_examples" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log((&quot;miss_sometimes&quot; + miss_sometimes.toString()));&amp;#10;if ((miss_sometimes === false)) {&amp;#10;    if ((see_actions.thisN === 0)) {&amp;#10;        texts = &quot;In the next practice, you decide how to travel.\nIf you want to walk (by pressing \&quot;N\&quot;), or whether you want to travel by train/plane (Press \&quot;Y\&quot;)\n\nTo move forward, you need to get to the treasure location 5 times in a row.\n\nPress space to continue.&quot;;&amp;#10;    } else {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((miss_ride_sometimes.thisN === 0)) {&amp;#10;        texts = &quot;In the next practice, you decide if you want to walk (by pressing \&quot;N\&quot;), or whether you want to travel by train/plane (Press \&quot;Y\&quot;)\n\nPress space to continue.&quot;;&amp;#10;    } else {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;text_5.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print('miss_sometimes'+str(miss_sometimes))&amp;#10;if miss_sometimes==false:&amp;#10;    if see_actions.thisN==0:&amp;#10;        texts='In the next practice, you decide how to travel.\nIf you want to walk (by pressing &quot;N&quot;), or whether you want to travel by train/plane (Press &quot;Y&quot;)\n\nTo move forward, you need to get to the treasure location 5 times in a row.\n\nPress space to continue.'&amp;#10;    else:&amp;#10;        continueRoutine=false&amp;#10;else:&amp;#10;    if miss_ride_sometimes.thisN==0:&amp;#10;        texts='In the next practice, you decide if you want to walk (by pressing &quot;N&quot;), or whether you want to travel by train/plane (Press &quot;Y&quot;)\n\nPress space to continue.'&amp;#10;    else:&amp;#10;        continueRoutine=false&amp;#10;    &amp;#10;text_5.alignHoriz=&quot;left&quot;&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="15" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="let_the_game_begin">
      <RoutineSettingsComponent name="let_the_game_begin" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="let_the_game_begin" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_47" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log((&quot;total_wrong&quot; + num_wrong.toString()));&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;total_num_wrong&quot;, num_wrong);&amp;#10;if ((num_wrong &gt; 7)) {&amp;#10;    psychoJS.quit({message: 'Sorry you failed too many quizz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;    psychoJS.experiment.addData(&quot;failed_test&quot;, 1);&amp;#10;&amp;#10;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_47" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="60" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="To put it all together, we will now do some practice blocks. &amp;#10;&amp;#10;Press space when you are ready to begin!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="60" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="practice_in_task">
      <RoutineSettingsComponent name="practice_in_task" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="practice_in_task" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="only_practice" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &gt; 5)) {&amp;#10;    practice_task.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN&gt;5:&amp;#10;    practice_task.finished=True&amp;#10;    continueRoutine=false&amp;#10;    &amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="only_practice" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_40" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="start_with=53" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="start_with = 53;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log((&quot;current_slide &quot; + start_with.toString()));&amp;#10;if ((c_elastic === 0.9)) {&amp;#10;    if ((practice_task.thisN === 0)) {&amp;#10;        start_with = 49;&amp;#10;    }&amp;#10;    if (((key_resp_first.keys === &quot;right&quot;) &amp;&amp; (start_with &lt; 52))) {&amp;#10;        start_with += 1;&amp;#10;    } else {&amp;#10;        if (((key_resp_first.keys === &quot;left&quot;) &amp;&amp; (start_with &gt; 50))) {&amp;#10;            start_with -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((c_inelastic === 0.9)) {&amp;#10;    if ((practice_task.thisN === 0)) {&amp;#10;        start_with = 53;&amp;#10;    }&amp;#10;    if (((key_resp_first.keys === &quot;right&quot;) &amp;&amp; (start_with &lt; 56))) {&amp;#10;        start_with += 1;&amp;#10;    } else {&amp;#10;        if (((key_resp_first.keys === &quot;left&quot;) &amp;&amp; (start_with &gt; 53))) {&amp;#10;            start_with -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (((c_inelastic &lt; 0.3) &amp;&amp; (c_elastic &lt; 0.3))) {&amp;#10;    if ((practice_task.thisN === 0)) {&amp;#10;        start_with = 56;&amp;#10;    }&amp;#10;    if (((key_resp_first.keys === &quot;right&quot;) &amp;&amp; (start_with &lt; 59))) {&amp;#10;        start_with += 1;&amp;#10;    } else {&amp;#10;        if (((key_resp_first.keys === &quot;left&quot;) &amp;&amp; (start_with &gt; 57))) {&amp;#10;            start_with -= 1;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print('current_slide '+str(start_with))&amp;#10;&amp;#10;if c_elastic==.9:&amp;#10;    if practice_task.thisN==0:&amp;#10;        start_with=49&amp;#10;    if key_resp_first.keys==&quot;right&quot; and start_with&lt;52:&amp;#10;        start_with +=1&amp;#10;    elif key_resp_first.keys==&quot;left&quot; and start_with&gt;50:&amp;#10;        start_with -=1&amp;#10;     &amp;#10;if c_inelastic==.9:&amp;#10;    if practice_task.thisN==0:&amp;#10;        start_with=53&amp;#10;    if key_resp_first.keys==&quot;right&quot; and start_with&lt;56:&amp;#10;        start_with +=1&amp;#10;    elif key_resp_first.keys==&quot;left&quot; and start_with&gt;53:&amp;#10;        start_with -=1&amp;#10;        &amp;#10;if c_inelastic&lt;.3 and c_elastic&lt;.3:&amp;#10;    if practice_task.thisN==0:&amp;#10;        start_with=56&amp;#10;    if key_resp_first.keys==&quot;right&quot; and start_with&lt;59:&amp;#10;        start_with +=1&amp;#10;    elif key_resp_first.keys==&quot;left&quot; and start_with&gt;57:&amp;#10;        start_with -=1&amp;#10;              &amp;#10;&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((c_elastic === 0.9)) {&amp;#10;    if (((start_with === 52) &amp;&amp; (key_resp_first.keys === &quot;right&quot;))) {&amp;#10;        practice_task.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;if ((c_inelastic === 0.9)) {&amp;#10;    if (((start_with === 56) &amp;&amp; (key_resp_first.keys === &quot;right&quot;))) {&amp;#10;        practice_task.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;if (((c_inelastic &lt; 0.3) &amp;&amp; (c_elastic &lt; 0.3))) {&amp;#10;    if (((start_with === 59) &amp;&amp; (key_resp_first.keys === &quot;right&quot;))) {&amp;#10;        practice_task.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if c_elastic==.9:&amp;#10;    if start_with == 52 and key_resp_first.keys==&quot;right&quot;:&amp;#10;        practice_task.finished=True &amp;#10;        continueRoutine=false&amp;#10;if c_inelastic==.9:&amp;#10;    if start_with == 56 and key_resp_first.keys==&quot;right&quot;:&amp;#10;        practice_task.finished=True &amp;#10;        continueRoutine=false        &amp;#10;if c_inelastic&lt;.3 and c_elastic&lt;.3:&amp;#10;    if start_with == 59 and key_resp_first.keys==&quot;right&quot;:&amp;#10;        practice_task.finished=True &amp;#10;        continueRoutine=false        &amp;#10;               &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_40" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'instr_new_draft/Slide' + str(start_with) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.69, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_first" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_first" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="check_action_understanding">
      <RoutineSettingsComponent name="check_action_understanding" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="check_action_understanding" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_16" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &gt; 5)) {&amp;#10;    practice_quiz.finished = true;&amp;#10;    repeat_quiz.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;answer_2.alignHoriz = &quot;left&quot;;&amp;#10;if ((practice_quiz.thisN === 0)) {&amp;#10;    text_to_show = &quot;In the next planet, ON AVERAGE, your ride will stop for you&quot;;&amp;#10;    correct_mat = &quot;C&quot;;&amp;#10;    show_which = 3;&amp;#10;    times_which = 35;&amp;#10;    answer_one = &quot;A) Frequently\n\n B) Sometimes\n\n C) Rarely&quot;;&amp;#10;} else {&amp;#10;    if ((practice_quiz.thisN === 1)) {&amp;#10;        text_to_show = &quot;In the next planet, ON AVERAGE, how frequently does your jump from the PUBLIC PLATFORM succeed?&quot;;&amp;#10;        correct_mat = &quot;A&quot;;&amp;#10;        times_which = 35;&amp;#10;        answer_one = &quot;A) Frequently\n\n B) Sometimes\n\n C) Rarely&quot;;&amp;#10;        show_which = 1;&amp;#10;    } else {&amp;#10;        if ((practice_quiz.thisN === 2)) {&amp;#10;            text_to_show = &quot;In the next planet, ON AVERAGE, how frequently does your jump from the LOADING STATION succeed?&quot;;&amp;#10;            correct_mat = &quot;A&quot;;&amp;#10;            times_which = 35;&amp;#10;            answer_one = &quot;A) Frequently\n\n B) Sometimes\n\n C) Rarely&quot;;&amp;#10;            show_which = 2;&amp;#10;        } else {&amp;#10;            times_which = 0;&amp;#10;            if ((corr_total &gt;= 3)) {&amp;#10;                text_to_show = &quot;Nice job. lets proceed to the practice planet\n\n Press space to continue&quot;;&amp;#10;                answer_one = &quot;&quot;;&amp;#10;                show_which = 1;&amp;#10;            } else {&amp;#10;                text_to_show = &quot;Seems like something was not clear. Lets do another review\n\nPress space to continue&quot;;&amp;#10;                answer_one = &quot;&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN&gt;5:&amp;#10;    practice_quiz.finished=True&amp;#10;    repeat_quiz.finished=True&amp;#10;    continueRoutine=false&amp;#10;    &amp;#10;answer_2.alignHoriz = 'left'&amp;#10;if practice_quiz.thisN==0:&amp;#10;    text_to_show='In the next planet, ON AVERAGE, your ride will stop for you'    &amp;#10;    correct_mat='C'&amp;#10;    show_which=3&amp;#10;    times_which=35&amp;#10;    answer_one='A) Frequently\n\n B) Sometimes\n\n C) Rarely'&amp;#10;elif practice_quiz.thisN==1:&amp;#10;    text_to_show='In the next planet, ON AVERAGE, how frequently does your jump from the PUBLIC PLATFORM succeed?'&amp;#10;    correct_mat='A'&amp;#10;    times_which=35&amp;#10;    answer_one='A) Frequently\n\n B) Sometimes\n\n C) Rarely'&amp;#10;    show_which=1&amp;#10;elif practice_quiz.thisN==2:&amp;#10;    text_to_show='In the next planet, ON AVERAGE, how frequently does your jump from the LOADING STATION succeed?'    &amp;#10;    correct_mat='A'&amp;#10;    times_which=35&amp;#10;    answer_one='A) Frequently\n\n B) Sometimes\n\n C) Rarely'&amp;#10;    show_which=2&amp;#10;else:&amp;#10;    times_which=0&amp;#10;    if corr_total&gt;=3:&amp;#10;        text_to_show='Nice job. lets proceed to the practice planet\n\n Press space to continue'&amp;#10;        answer_one=''&amp;#10;      &amp;#10;        show_which=1&amp;#10;    else:&amp;#10;        text_to_show='Seems like something was not clear. Lets do another review\n\nPress space to continue'&amp;#10;        answer_one=''&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((c_elastic === 0.9)) {&amp;#10;    if ((practice_quiz.thisN === 0)) {&amp;#10;        if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;            corr_total += 1;&amp;#10;        } else {&amp;#10;            corr_total = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((practice_quiz.thisN === 1)) {&amp;#10;            if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;                corr_total += 1;&amp;#10;            } else {&amp;#10;                corr_total = 0;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((practice_quiz.thisN === 2)) {&amp;#10;                if ((test_action_answer.keys === &quot;a&quot;)) {&amp;#10;                    corr_total += 1;&amp;#10;                } else {&amp;#10;                    corr_total = 0;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((practice_quiz.thisN === 3)) {&amp;#10;                    if ((corr_total &gt;= 3)) {&amp;#10;                        repeat_quiz.finished = true;&amp;#10;                        console.log(&quot;it works&quot;);&amp;#10;                    } else {&amp;#10;                        start_with = 48;&amp;#10;                        corr_total = 0;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((c_inelastic === 0.9)) {&amp;#10;    if ((practice_quiz.thisN === 0)) {&amp;#10;        if ((test_action_answer.keys === &quot;a&quot;)) {&amp;#10;            corr_total += 1;&amp;#10;        } else {&amp;#10;            corr_total = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((practice_quiz.thisN === 1)) {&amp;#10;            if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;                corr_total += 1;&amp;#10;            } else {&amp;#10;                corr_total = 0;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((practice_quiz.thisN === 2)) {&amp;#10;                if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;                    corr_total += 1;&amp;#10;                } else {&amp;#10;                    corr_total = 0;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((practice_quiz.thisN === 3)) {&amp;#10;                    if ((corr_total &gt;= 3)) {&amp;#10;                        repeat_quiz.finished = true;&amp;#10;                        console.log(&quot;it works&quot;);&amp;#10;                        corr_total = 0;&amp;#10;                    } else {&amp;#10;                        corr_total = 0;&amp;#10;                        start_with = 52;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (((c_inelastic &lt; 0.3) &amp;&amp; (c_elastic &lt; 0.3))) {&amp;#10;    if ((practice_quiz.thisN === 0)) {&amp;#10;        if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;            corr_total += 1;&amp;#10;        } else {&amp;#10;            corr_total = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((practice_quiz.thisN === 1)) {&amp;#10;            if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;                corr_total += 1;&amp;#10;            } else {&amp;#10;                corr_total = 0;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if ((practice_quiz.thisN === 2)) {&amp;#10;                if ((test_action_answer.keys === &quot;c&quot;)) {&amp;#10;                    corr_total += 1;&amp;#10;                } else {&amp;#10;                    corr_total = 0;&amp;#10;                }&amp;#10;            } else {&amp;#10;                if ((practice_quiz.thisN === 3)) {&amp;#10;                    if ((corr_total &gt;= 3)) {&amp;#10;                        repeat_quiz.finished = true;&amp;#10;                        console.log(&quot;it works&quot;);&amp;#10;                    } else {&amp;#10;                        corr_total = 0;&amp;#10;                        start_with = 54;&amp;#10;                        if ((repeat_quiz.thisN &gt; 2)) {&amp;#10;                            psychoJS.quit({message: 'Sorry you failed too many quiz questions. You cannot continue this study. Please return it since you will not be paid for your continued time'});&amp;#10;&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if c_elastic==.9:&amp;#10;    if practice_quiz.thisN==0:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==1:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;            &amp;#10;    elif practice_quiz.thisN==2:&amp;#10;        if test_action_answer.keys=='a':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==3:&amp;#10;        if corr_total&gt;=3:&amp;#10;            repeat_quiz.finished=True&amp;#10;            print('it works')&amp;#10;        else:&amp;#10;             start_with=50&amp;#10;             corr_total=0&amp;#10;&amp;#10;&amp;#10;if c_inelastic==.9:&amp;#10;    if practice_quiz.thisN==0:&amp;#10;        if test_action_answer.keys=='a':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==1:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;            &amp;#10;    elif practice_quiz.thisN==2:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==3:&amp;#10;        if corr_total&gt;=3:&amp;#10;            repeat_quiz.finished=True&amp;#10;            print('it works')&amp;#10;            corr_total=0&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;            start_with=54&amp;#10;            &amp;#10;if c_inelastic&lt;.3 and c_elastic&lt;.3:&amp;#10;    if practice_quiz.thisN==0:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==1:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;            &amp;#10;    elif practice_quiz.thisN==2:&amp;#10;        if test_action_answer.keys=='c':&amp;#10;            corr_total+=1&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;    elif practice_quiz.thisN==3:&amp;#10;        if corr_total&gt;=3:&amp;#10;            repeat_quiz.finished=True&amp;#10;        else:&amp;#10;            corr_total=0&amp;#10;            start_with=54&amp;#10;            if repeat_quiz.thisN&gt;2:&amp;#10;                core.quit()&amp;#10;                &amp;#10;            &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;                &amp;#10;  " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="test_q_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="test_q_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_to_show" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="test_action_answer" plugin="None">
        <Param val="'a','b','c','d','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$correct_mat" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="test_action_answer" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="new_platform_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'distinguiish_actions/Slide' + str(show_which) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.6)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.8, 0.464)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$times_which" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="answer_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="answer_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, .15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$answer_one" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="ticket_query_2">
      <RoutineSettingsComponent name="ticket_query_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ticket_query_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_31" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((((((trials_task.thisN + 1) % 10) === 0) &amp;&amp; (trials_task.thisN &gt; 10)) || ((trials_task.thisN + 1) === trial_length))) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;ticket_officer_query_2.alignHoriz = &quot;left&quot;;&amp;#10;if ((plane_selected === left_plane)) {&amp;#10;    pos_query = [(- 0.1), 0];&amp;#10;} else {&amp;#10;    pos_query = [(- 0.85), 0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ((trials_task.thisN+1) % 10 ==0 and trials_task.thisN&gt;10) or (trials_task.thisN+1==trial_length):&amp;#10;    continueRoutine=True&amp;#10;else:&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;&amp;#10;ticket_officer_query_2.alignHoriz=&quot;left&quot;&amp;#10;if plane_selected==left_plane:&amp;#10;    pos_query=[-.1,0]&amp;#10;else:&amp;#10;    pos_query=[-.85,0]&amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_31" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_15" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_15" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="ticket_officer_query_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ticket_officer_query_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Correct answer: +400 bonus! &amp;#10;&amp;#10;Throughout your travels on this planet, on a scale from 1 (not helpful) to 5 (very helpful), how helpful was it to enter the REGULAR PLATFORM?&amp;#10;&amp;#10;&amp;#10;(your answer will be recorded wherever you click) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="new_platform_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="distinguiish_actions/Slide1.jpeg" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.348)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <SliderComponent name="slider_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('Completely unhelpful','Not helpful', 'average', 'Helpful', 'Very Helpful')" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.7)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.3, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="ticket_query_3">
      <RoutineSettingsComponent name="ticket_query_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ticket_query_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_33" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((((((trials_task.thisN + 1) % 10) === 0) &amp;&amp; (trials_task.thisN &gt; 10)) || ((trials_task.thisN + 1) === trial_length))) {&amp;#10;    continueRoutine = true;&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;ticket_officer_query_5.alignHoriz = &quot;left&quot;;&amp;#10;if ((plane_selected === left_plane)) {&amp;#10;    pos_query = [(- 0.1), 0];&amp;#10;} else {&amp;#10;    pos_query = [(- 0.85), 0];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if ((trials_task.thisN+1) % 10 ==0 and trials_task.thisN&gt;10) or (trials_task.thisN+1==trial_length):&amp;#10;    continueRoutine=True&amp;#10;else:&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;ticket_officer_query_5.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;if plane_selected==left_plane:&amp;#10;    pos_query=[-.1,0]&amp;#10;else:&amp;#10;    pos_query=[-.85,0]" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_33" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_17" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_17" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="ticket_officer_query_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ticket_officer_query_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.3, .6)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Correct answer earns: +400 bonus! &amp;#10;&amp;#10;Throughout your travels on this planet, on a scale from 1 (not helpful) to 5 (very helpful), how helpful was it purchase a single ticket (WAITING AREA)&amp;#10;&amp;#10;(your answer will be recorded wherever you click) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="new_platform_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="distinguiish_actions/Slide3.jpeg" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="new_platform_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.348)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <SliderComponent name="slider_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('Completely unhelpful','Not helpful', 'average', 'Helpful', 'Very Helpful')" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.6)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.35, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="24" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="breather_2">
      <RoutineSettingsComponent name="breather_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="breather_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_18" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;last_message = &quot;You are done with this planet.\n\nTake a breather. Press Space when you are ready to proceed to the next planet&quot;;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="last_message='You are done with this planet.\n\nTake a breather. Press Space when you are ready to proceed to the next planet'&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_18" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_16" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_16" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="200" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$last_message&amp;#10;&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_10" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="200" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="excited">
      <RoutineSettingsComponent name="excited" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="excited" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="continue_or_not" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="trials_last_query_e=0&amp;#10;opt_out_won_e=0&amp;#10;opt_out_lost_e=0&amp;#10;opt_in_lost_high_e=0&amp;#10;opt_in_lost_e=0&amp;#10;&amp;#10;opt_in_won_e=0&amp;#10;trials_last_query_s=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="trials_last_query_e = 0;&amp;#10;opt_out_won_e = 0;&amp;#10;opt_out_lost_e = 0;&amp;#10;opt_in_lost_high_e = 0;&amp;#10;opt_in_lost_e = 0;&amp;#10;opt_in_won_e = 0;&amp;#10;trials_last_query_s = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &gt; 5)) {&amp;#10;    if ((((cs === 0) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_last_query_s &gt; 2))) {&amp;#10;        trials_last_query_s = 0;&amp;#10;        trials_last_query_e = 0;&amp;#10;        opt_out_won_e += 1;&amp;#10;        continueRoutine = true;&amp;#10;    } else {&amp;#10;        if (((((cs === 0) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_out_lost_e &lt; 6)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;            opt_out_lost_e += 1;&amp;#10;            trials_last_query_s += 1;&amp;#10;            trials_last_query_e = 0;&amp;#10;            continueRoutine = true;&amp;#10;        } else {&amp;#10;            if (((((((cs === 1) &amp;&amp; (trials_task.thisN &gt; 10)) &amp;&amp; ((c_elastic + c_inelastic) &gt; 0.6)) &amp;&amp; (num_actions === 3)) &amp;&amp; (opt_in_lost_high_e &lt; 4)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;                opt_in_lost_high_e += 1;&amp;#10;                trials_last_query_s += 1;&amp;#10;                trials_last_query_e = 0;&amp;#10;                continueRoutine = true;&amp;#10;            } else {&amp;#10;                if (((((((trials_task.thisN &gt; 10) &amp;&amp; (c_inelastic &gt; 0.6)) &amp;&amp; (num_actions === 1)) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_in_lost_high_e &lt; 4)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;                    opt_in_lost_high_e += 1;&amp;#10;                    trials_last_query_s += 1;&amp;#10;                    trials_last_query_e = 0;&amp;#10;                    continueRoutine = true;&amp;#10;                } else {&amp;#10;                    if (((((cs === 1) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_in_lost_e &lt; 4)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;                        opt_in_lost_e += 1;&amp;#10;                        trials_last_query_s += 1;&amp;#10;                        trials_last_query_e = 0;&amp;#10;                        continueRoutine = true;&amp;#10;                    } else {&amp;#10;                        if ((((((cs === 1) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_task.thisN &lt; 10)) &amp;&amp; (opt_in_won_e &lt; 6)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;                            opt_in_won_e += 1;&amp;#10;                            trials_last_query_s += 1;&amp;#10;                            trials_last_query_e = 0;&amp;#10;                            continueRoutine = true;&amp;#10;                        } else {&amp;#10;                            if (((((((cs === 1) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_task.thisN &gt; 10)) &amp;&amp; (opt_in_won_e &lt; 6)) &amp;&amp; ((c_elastic + c_inelastic) &lt; 0.4)) &amp;&amp; (trials_last_query_e &gt; 3))) {&amp;#10;                                opt_in_won_e += 1;&amp;#10;                                trials_last_query_e = 0;&amp;#10;                                trials_last_query_s += 1;&amp;#10;                                continueRoutine = true;&amp;#10;                            } else {&amp;#10;                                trials_last_query_e += 1;&amp;#10;                                trials_last_query_s += 1;&amp;#10;                                continueRoutine = false;&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    trials_last_query_e += 1;&amp;#10;    trials_last_query_s += 1;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;excited_title.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN &gt; 5:&amp;#10;    if cs==0 and total_reward==150 and trials_last_query_s&gt;2:&amp;#10;        trials_last_query_s=0&amp;#10;        trials_last_query_e=0&amp;#10;        opt_out_won_e+=1&amp;#10;        continueRoutine=True&amp;#10;&amp;#10;    elif cs==0 and total_reward==0 and opt_out_lost_e&lt;6 and trials_last_query_e&gt;3:&amp;#10;        opt_out_lost_e+=1 &amp;#10;        trials_last_query_s+=1&amp;#10;        trials_last_query_e=0&amp;#10;        continueRoutine=True &amp;#10;    # these are the opt in and lose conditions &amp;#10;    elif cs==1 and trials_task.thisN &gt; 10 and c_elastic+c_inelastic&gt;.6 and num_actions==3 and opt_in_lost_high_e&lt;4 and trials_last_query_e&gt;3:&amp;#10;        opt_in_lost_high_e+=1&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        trials_last_query_e=0&amp;#10;        continueRoutine=True &amp;#10;    elif trials_task.thisN &gt; 10 and c_inelastic&gt;.6 and num_actions==1 and total_reward==0 and opt_in_lost_high_e&lt;4 and trials_last_query_e&gt;3:&amp;#10;        opt_in_lost_high_e+=1&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        trials_last_query_e=0&amp;#10;        continueRoutine=True&amp;#10;    elif cs==1 and total_reward==0 and opt_in_lost_e&lt;4 and trials_last_query_e&gt;3:&amp;#10;        opt_in_lost_e+=1&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        trials_last_query_e=0&amp;#10;        continueRoutine=True&amp;#10;        &amp;#10;    elif cs==1 and total_reward==150 and trials_task.thisN &lt;10 and opt_in_won_e&lt;6 and trials_last_query_e&gt;3:&amp;#10;        opt_in_won_e+=1&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        trials_last_query_e=0&amp;#10;        continueRoutine=True&amp;#10;    elif cs==1 and total_reward==150 and trials_task.thisN &gt;10 and opt_in_won_e&lt;6 and c_elastic+c_inelastic&lt;.4 and trials_last_query_e&gt;3:&amp;#10;        opt_in_won_e+=1&amp;#10;        trials_last_query_e=0&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        continueRoutine=True&amp;#10;    else:&amp;#10;        trials_last_query_e+=1&amp;#10;        trials_last_query_s+=1&amp;#10;&amp;#10;        continueRoutine=False &amp;#10;    &amp;#10;else:&amp;#10;    trials_last_query_e+=1&amp;#10;    trials_last_query_s+=1&amp;#10;&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;excited_title.alignHoriz=&quot;left&quot;&amp;#10;  " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;q_out_out_won&quot;, opt_out_won);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_out_lost&quot;, opt_out_lost);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_lost_high&quot;, opt_in_lost_high);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_lost_regular&quot;, opt_in_lost);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_won&quot;, opt_in_won);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;q_out_out_won&quot;, opt_out_won)&amp;#10;thisExp.addData(&quot;q_opt_out_lost&quot;, opt_out_lost)&amp;#10;thisExp.addData(&quot;q_opt_in_lost_high&quot;, opt_in_lost_high)&amp;#10;thisExp.addData(&quot;q_opt_in_lost_regular&quot;, opt_in_lost)&amp;#10;thisExp.addData(&quot;q_opt_in_won&quot;, opt_in_won)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="continue_or_not" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_34" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="excited_query.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;excited_query.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_34" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_18" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_18" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="excited_query" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="excited_query" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, .46)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please indicate how you feel right now&amp;#10;You can click anywhere on the line &amp;#10;&amp;#10;(your answer will be recorded wherever you click) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="excited_title" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".17" valType="num" updates="constant" name="letterHeight"/>
        <Param val="excited_title" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How excited are you?" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider_excited" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('Extremely deflated', 'Extremely excited')" valType="list" updates="constant" name="labels"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_excited" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.15, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="24" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 4)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="content">
      <RoutineSettingsComponent name="content" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="content" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="continue_or_not_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="trials_last_query=0&amp;#10;trials_last_query_t=0&amp;#10;&amp;#10;opt_out_won_=0&amp;#10;opt_out_lost=0&amp;#10;opt_in_lost_high=0&amp;#10;opt_in_lost=0&amp;#10;&amp;#10;opt_in_won=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="trials_last_query = 0;&amp;#10;trials_last_query_t = 0;&amp;#10;opt_out_won = 0;&amp;#10;opt_out_lost = 0;&amp;#10;opt_in_lost_high = 0;&amp;#10;opt_in_lost = 0;&amp;#10;opt_in_won = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((block.thisN &gt; 5)) {&amp;#10;    if ((((cs === 0) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_last_query_t &gt; 2))) {&amp;#10;        trials_last_query = 0;&amp;#10;        trials_last_query_t = 0;&amp;#10;        opt_out_won += 1;&amp;#10;        continueRoutine = true;&amp;#10;    } else {&amp;#10;        if (((((cs === 0) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_out_lost &lt; 6)) &amp;&amp; (trials_last_query &gt; 3))) {&amp;#10;            opt_out_lost += 1;&amp;#10;            trials_last_query_t += 1;&amp;#10;            trials_last_query = 0;&amp;#10;            continueRoutine = true;&amp;#10;        } else {&amp;#10;            if (((((((cs === 1) &amp;&amp; (trials_task.thisN &gt; 10)) &amp;&amp; ((c_elastic + c_inelastic) &gt; 0.6)) &amp;&amp; (trials_last_query &gt; 3)) &amp;&amp; (num_actions === 3)) &amp;&amp; (opt_in_lost_high &lt; 4))) {&amp;#10;                opt_in_lost_high += 1;&amp;#10;                trials_last_query_t += 1;&amp;#10;                trials_last_query = 0;&amp;#10;                continueRoutine = true;&amp;#10;            } else {&amp;#10;                if (((((((trials_task.thisN &gt; 10) &amp;&amp; (c_inelastic &gt; 0.6)) &amp;&amp; (num_actions === 1)) &amp;&amp; (trials_last_query &gt; 3)) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_in_lost_high &lt; 4))) {&amp;#10;                    opt_in_lost_high += 1;&amp;#10;                    trials_last_query_t += 1;&amp;#10;                    trials_last_query = 0;&amp;#10;                    continueRoutine = true;&amp;#10;                } else {&amp;#10;                    if (((((cs === 1) &amp;&amp; (total_reward === 0)) &amp;&amp; (opt_in_lost &lt; 4)) &amp;&amp; (trials_last_query &gt; 3))) {&amp;#10;                        opt_in_lost += 1;&amp;#10;                        trials_last_query_t += 1;&amp;#10;                        trials_last_query = 0;&amp;#10;                        continueRoutine = true;&amp;#10;                    } else {&amp;#10;                        if ((((((cs === 1) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_last_query &gt; 3)) &amp;&amp; (trials_task.thisN &lt; 15)) &amp;&amp; (opt_in_won &lt; 6))) {&amp;#10;                            opt_in_won += 1;&amp;#10;                            trials_last_query_t += 1;&amp;#10;                            trials_last_query = 0;&amp;#10;                            continueRoutine = true;&amp;#10;                        } else {&amp;#10;                            if (((((((cs === 1) &amp;&amp; (total_reward === 150)) &amp;&amp; (trials_last_query &gt; 3)) &amp;&amp; (trials_task.thisN &gt; 10)) &amp;&amp; (opt_in_won &lt; 6)) &amp;&amp; ((c_elastic + c_inelastic) &lt; 0.4))) {&amp;#10;                                opt_in_won += 1;&amp;#10;                                trials_last_query_t += 1;&amp;#10;                                trials_last_query = 0;&amp;#10;                                continueRoutine = true;&amp;#10;                            } else {&amp;#10;                                trials_last_query += 1;&amp;#10;                                trials_last_query_t += 1;&amp;#10;                                continueRoutine = false;&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    trials_last_query += 1;&amp;#10;    trials_last_query_t += 1;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN &gt; 5:&amp;#10;    if cs==0 and total_reward==150 and trials_last_query_t&gt;2:&amp;#10;        trials_last_query=0&amp;#10;        trials_last_query_t=0&amp;#10;        opt_out_won+=1&amp;#10;        continueRoutine=True&amp;#10;&amp;#10;    elif cs==0 and total_reward==0 and opt_out_lost&lt;6 and trials_last_query&gt;3:&amp;#10;        opt_out_lost+=1 &amp;#10;        trials_last_query_t+=1&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True &amp;#10;    # these are the opt in and lose conditions &amp;#10;    elif cs==1 and trials_task.thisN &gt; 10 and c_elastic+c_inelastic&gt;.6 and trials_last_query&gt;3and num_actions==3 and opt_in_lost_high&lt;4:&amp;#10;        opt_in_lost_high+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True &amp;#10;    elif trials_task.thisN &gt; 10 and c_inelastic&gt;.6 and num_actions==1 and trials_last_query&gt;3 and total_reward==0 and opt_in_lost_high&lt;4:&amp;#10;        opt_in_lost_high+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True&amp;#10;    elif cs==1 and total_reward==0 and opt_in_lost&lt;4 and trials_last_query&gt;3:&amp;#10;        opt_in_lost+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True&amp;#10;        &amp;#10;    elif cs==1 and total_reward==150 and trials_last_query&gt;3 and trials_task.thisN &lt;15 and opt_in_won&lt;6:&amp;#10;        opt_in_won+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True&amp;#10;    elif cs==1 and total_reward==150 and trials_last_query&gt;3 and trials_task.thisN &gt;10 and opt_in_won&lt;6 and c_elastic+c_inelastic&lt;.4:&amp;#10;        opt_in_won+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        trials_last_query=0&amp;#10;        continueRoutine=True&amp;#10;    else:&amp;#10;        trials_last_query+=1&amp;#10;        trials_last_query_t+=1&amp;#10;&amp;#10;        continueRoutine=False &amp;#10;    &amp;#10;else:&amp;#10;    trials_last_query+=1&amp;#10;    trials_last_query_t+=1&amp;#10;&amp;#10;    continueRoutine=False&amp;#10;    &amp;#10;&amp;#10;  " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;q_out_out_won&quot;, opt_out_won);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_out_lost&quot;, opt_out_lost);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_lost_high&quot;, opt_in_lost_high);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_lost_regular&quot;, opt_in_lost);&amp;#10;psychoJS.experiment.addData(&quot;q_opt_in_won&quot;, opt_in_won);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;q_out_out_won&quot;, opt_out_won)&amp;#10;thisExp.addData(&quot;q_opt_out_lost&quot;, opt_out_lost)&amp;#10;thisExp.addData(&quot;q_opt_in_lost_high&quot;, opt_in_lost_high)&amp;#10;thisExp.addData(&quot;q_opt_in_lost_regular&quot;, opt_in_lost)&amp;#10;thisExp.addData(&quot;q_opt_in_won&quot;, opt_in_won)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="continue_or_not_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_35" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="content_query_2.alignHoriz = &quot;left&quot;;&amp;#10;content_title.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;    &amp;#10;content_query_2.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;content_title.alignHoriz=&quot;left&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_35" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="polygon_19" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_19" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="content_query_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.08" valType="num" updates="constant" name="letterHeight"/>
        <Param val="content_query_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, .52)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&amp;#10;&amp;#10;Please indicate how you feel right now&amp;#10;You can click anywhere on the line &amp;#10;&amp;#10;(your answer will be recorded wherever you click) " valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="content_title" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".17" valType="num" updates="constant" name="letterHeight"/>
        <Param val="content_title" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="25" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How frustrated are you?" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="borderColor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0039, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="('Extremely content','Extremely frustrated')" valType="list" updates="constant" name="labels"/>
        <Param val="0.07" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.08, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="24" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 4)" valType="list" updates="constant" name="ticks"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
    </Routine>
    <Routine name="consent_form_1">
      <RoutineSettingsComponent name="consent_form_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="consent_form_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_27" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="consent.alignHoriz = &quot;left&quot;;&amp;#10;test_1 = &quot;INFORMED CONSENT\n\nWho is conducting this research study?\n\nThis research is being conducted by the Psychology and Cognitive Sciences Departments at the Hebrew University of Jerusalem. The lead researchers for this project are Levi Solomyak and Aviv Emanuel.\n\nWhat is the purpose of this study?\n\nWe are interested in understanding how individual differences in learning and decision making contribute to psychological traits. Particularly, in the current study, we focus on how people learn about the effect of their actions. This research aims to provide an insight into how healthy brain works, to help us better understand how aberrant learning might contribute to clinical presentation of specific psychological disorders.\n\n Who can participate in the study?\n\nOnly adults (age 18 and above) who are native or fluent in English are eligible to participate. Because the study has numerous psychological surveys to fill, it is important that English is a language that you are fluent in. \n\nPress Space to continue&quot;;&amp;#10;console.log((&quot;part_id is&quot; + part_id.toString()));&amp;#10;c_inelastic = datasub[((part_id * 3) - 3)][&quot;c_inelastic&quot;];&amp;#10;c_elastic = datasub[((part_id * 3) - 3)][&quot;c_elastic&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="consent.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;test_1='INFORMED CONSENT\n\nWho is conducting this research study?\n\nThis research is being conducted by the Psychology and Cognitive Sciences Departments at the Hebrew University of Jerusalem. The lead researchers for this project are Levi Solomyak and Aviv Emanuel.\n\nWhat is the purpose of this study?\n\nWe are interested in understanding how individual differences in learning and decision making contribute to psychological traits. Particularly, in the current study, we focus on how people learn about the effect of their actions. This research aims to provide an insight into how healthy brain works, to help us better understand how aberrant learning might contribute to clinical presentation of specific psychological disorders.\n\n Who can participate in the study?\n\nOnly adults (age 18 and above) who are native or fluent in English are eligible to participate. Because the study has numerous psychological surveys to fill, it is important that English is a language that you are fluent in. \n\nPress Space to continue'&amp;#10;&amp;#10;print('part_id is'+str(part_id))&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;c_inelastic=datasub[part_id*3-3]['c_inelastic'];  &amp;#10;c_elastic=datasub[part_id*3-3]['c_elastic'];  &amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_27" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="consent" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="consent" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$test_1" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_11" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text_9" plugin="None">
        <Param val="0.0824, -0.6627, 0.7725" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'c_inelastic' +str(c_inelastic)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_12" plugin="None">
        <Param val="-0.0039, 1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'c elastic is' + str(c_elastic)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="consent_form_4">
      <RoutineSettingsComponent name="consent_form_4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="consent_form_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_28" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_22.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_22.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_28" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_22" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_22" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What about my data?&amp;#10;&amp;#10;We collect behavioral and self-reported data in this study. The data will be anonymized, and your User ID will be replaced with a non-identifiable random ID number. Some of this data might be shared in publications, public data sets or scientific reports, again without any means of identification. &amp;#10;&amp;#10;Queries and complaints&amp;#10;&amp;#10;If you have any questions, concerns or complaints regarding this study please contact the researchers: Levi Solomyak and Aviv Emanuel - levi.solomyak@mail.huji.ac.il, aviv.emanuel@mail.huji.ac.il&amp;#10;&amp;#10;&amp;#10;&amp;#10; &amp;#10;&amp;#10;I certify that I have read the informed consent and received the information to contact the investigators if necessary.&amp;#10;&amp;#10; --- for yes press Y&amp;#10; --- for no  press N&amp;#10;&amp;#10;I certify that I am a fluent in English.&amp;#10;&amp;#10; --- for yes press Y&amp;#10; --- for no  press N" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12" plugin="None">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_12" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_41" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_resp_12.keys === &quot;y&quot;)) {&amp;#10;    consent_loop.finished = true;&amp;#10;} &amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_11.keys=='n':&amp;#10;    core.quit()&amp;#10;else:&amp;#10;    consent_loop.finished=True &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_41" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="consent_5">
      <RoutineSettingsComponent name="consent_5" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="consent_5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_42" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((key_resp_11.keys === &quot;n&quot;)) {&amp;#10;    text_consent = &quot;Are you sure you do not wish to participate in this study?\n\nIf so, as you do not wish to participate in this study, please return your submission on Prolific by selecting the \&quot;Stop without completing\&quot; button.\&quot;\n\nPress n to confirm\nPress r to return to re-read the consent form&quot;;&amp;#10;} else {&amp;#10;    text_consent = &quot;Great! Then let us set off\n on an intergalactic adventure!\n\n Press r when you are ready&quot;;&amp;#10;}&amp;#10;text_23.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if key_resp_11.keys=='n':&amp;#10;    text_consent='Are you sure you do not wish to participate in this study?\n\nIf so, as you do not wish to participate in this study, please return your submission on Prolific by selecting the &quot;Stop without completing&quot; button.&quot;\n\nPress n to confirm\nPress r to return to re-read the consent form'&amp;#10;else:&amp;#10;    text_consent='Great! Then let us set off\n on an intergalactic adventure!\n\n Press r when you are ready'&amp;#10;    &amp;#10;text_23.alignHoriz=&quot;left&quot;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_42" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_43" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((key_resp_19.keys === &quot;n&quot;)) {&amp;#10;    psychoJS.quit({message: 'As you do not wish to participate in this study, please return your submission on Prolific by selecting the &quot;Stop without completing&quot; button.'}); &amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_43" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_23" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_23" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_consent&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_19" plugin="None">
        <Param val="'n','r'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_19" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent_form_2">
      <RoutineSettingsComponent name="consent_form_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="consent_form_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_44" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_24.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_24.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_44" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_24" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_24" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What will happen to me if I take part?&amp;#10;&amp;#10;&amp;#10;You will play an intergalactic game in which you will try to find treasures on various planets. You will learn what methods of transportation take you where, when to buy tickets, how to catch a moving train and how to avoid bandits from stealing your money. The game will take about an hour. You will be paid 10 dollars for completing the study, and you can earn up to an additional 5 dollars depending on your performance in the game. Credit for your participation will be provided by Prolific Academic.&amp;#10;&amp;#10;What are the possible disadvantages and risks of taking part?&amp;#10;&amp;#10;The game you will play does not pose any known risks or disadvantages. In the surveys, you will be asked to answer some questions about yourself. Please feel free to contact us in case of any distress as a result of this study (contact details are provided below). Note that you are not obligated to participate in this study, and you may terminate your participation at any point during the study. &amp;#10;&amp;#10;Press Space to continue" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_14" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_14" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="consent_form_3">
      <RoutineSettingsComponent name="consent_form_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="consent_form_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_45" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="text_25.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="text_25.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_45" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_25" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_25" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What are the possible benefits of taking part?&amp;#10;&amp;#10;While there are no immediate benefits to taking part, except from credit given for your participation, this research will help us understand better how differences in learning and decision making might contribute to clinical psychological disorders.&amp;#10;&amp;#10;&amp;#10;What do I have to pay attention to while participating?&amp;#10;&amp;#10;&amp;#10;The researcher reserves the right not to pay if it is clear that you have completed the task or surveys randomly, without paying attention, or with negligence. Paying attention and following the instructions will ensure that you will be paid the full amount. We use a variety of explicit and concealed measures to verify sincerity and a lack of negligence in task performance.&amp;#10;&amp;#10;Please refrain from doing other things (e.g. other experiments, other online or offline activities) until the end of the experiment. &amp;#10;&amp;#10;&amp;#10;Please do not proceed with this study if you are not a fluent English speaker. &amp;#10;&amp;#10;Press Space to continue&amp;#10;&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_17" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_17" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="gamble_outcome">
      <RoutineSettingsComponent name="gamble_outcome" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="gamble_outcome" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_49" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((key_resp_16.keys === &quot;b&quot;) || (key_resp_16.keys === &quot;y&quot;))) {&amp;#10;    if ((trials_2.thisN === 0)) {&amp;#10;        last_total = total_earned;&amp;#10;        r = util.randint(0, 100);&amp;#10;        if ((r &lt; win_prob)) {&amp;#10;            psychoJS.experiment.addData(&quot;gambled_won&quot;, 1);&amp;#10;            total_earned = (total_earned + 90);&amp;#10;        } else {&amp;#10;            psychoJS.experiment.addData(&quot;gambled_won&quot;, 0);&amp;#10;            total_earned = (total_earned - 60);&amp;#10;        }&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((trials_2.thisN === 1)) {&amp;#10;            r = util.randint(0, 2);&amp;#10;            if ((r === 1)) {&amp;#10;                total_earned = (total_earned + 90);&amp;#10;                psychoJS.experiment.addData(&quot;gambled_won&quot;, 1);&amp;#10;            } else {&amp;#10;                total_earned = (total_earned - 60);&amp;#10;                psychoJS.experiment.addData(&quot;gambled_won&quot;, 0);&amp;#10;            }&amp;#10;            continueRoutine = false;&amp;#10;        } else {&amp;#10;            if ((trials_2.thisN === 2)) {&amp;#10;                r = util.randint(0, 10);&amp;#10;                if ((r &gt; 5)) {&amp;#10;                    total_earned = (total_earned - 90);&amp;#10;                    psychoJS.experiment.addData(&quot;gambled_won&quot;, 1);&amp;#10;                } else {&amp;#10;                    total_earned = (total_earned - 60);&amp;#10;                    psychoJS.experiment.addData(&quot;gambled_won&quot;, 0);&amp;#10;                }&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                if ((trials_2.thisN === 3)) {&amp;#10;                    r = util.randint(0, 100);&amp;#10;                    if ((r &gt; 65)) {&amp;#10;                        total_earned += 90;&amp;#10;                        psychoJS.experiment.addData(&quot;gambled_won&quot;, 1);&amp;#10;                    } else {&amp;#10;                        total_earned -= 60;&amp;#10;                        psychoJS.experiment.addData(&quot;gambled_won&quot;, 0);&amp;#10;                    }&amp;#10;                    continueRoutine = false;&amp;#10;                } else {&amp;#10;                    if ((trials_2.thisN === 4)) {&amp;#10;                        r = util.randint(0, 100);&amp;#10;                        if ((r &gt; 70)) {&amp;#10;                            psychoJS.experiment.addData(&quot;gambled_won&quot;, 1);&amp;#10;                            total_earned = (total_earned + 90);&amp;#10;                        } else {&amp;#10;                            psychoJS.experiment.addData(&quot;gambled_won&quot;, 0);&amp;#10;                            total_earned = (total_earned - 60);&amp;#10;                        }&amp;#10;                        continueRoutine = false;&amp;#10;                    } else {&amp;#10;                        if ((trials_2.thisN === 5)) {&amp;#10;                            texts = ((((&quot;Your previous earnings were &quot; + last_total.toString()) + &quot;\nYour new earnings (after all gambles) is &quot;) + total_earned.toString()) + &quot;\n\nPress space to continue&quot;);&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    console.log(&quot;we just always end up here&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;gambled_won&quot;, null);&amp;#10;    if ((trials_2.thisN === 0)) {&amp;#10;        last_total = total_earned;&amp;#10;        continueRoutine = false;&amp;#10;    } else {&amp;#10;        if ((trials_2.thisN === 5)) {&amp;#10;            texts = ((((&quot;Your previous earnings were &quot; + last_total.toString()) + &quot;\nYour new earnings (after all gambles) is &quot;) + total_earned.toString()) + &quot;\n\nPress space to continue&quot;);&amp;#10;        } else {&amp;#10;            continueRoutine = false;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;console.log((&quot;total earned&quot; + total_earned.toString()));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;if key_resp_16.keys =='b' or key_resp_16.keys=='y':&amp;#10;    if trials_2.thisN==0:&amp;#10;        last_total=total_earned&amp;#10;&amp;#10;        r=randint(0,100)&amp;#10;        if r&lt;win_prob:&amp;#10;              thisExp.addData(&quot;gambled_won&quot;, 1)&amp;#10;&amp;#10;              total_earned=total_earned+90&amp;#10;&amp;#10;             # texts='You win! Your new earnings are '+str(total_earned+90) +' coins.\nPress space to continue'&amp;#10;        else:&amp;#10;              thisExp.addData(&quot;gambled_won&quot;, 0)&amp;#10;&amp;#10;              total_earned= total_earned-60&amp;#10;           #   texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;        continueRoutine=False &amp;#10;        &amp;#10;    elif trials_2.thisN==1:&amp;#10;        r=randint(0,2)&amp;#10;        if r==1:&amp;#10;            total_earned= total_earned+90&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 1)&amp;#10;         #   texts='You win! Your new earnings are '+str(total_earned+90) +' coins.\nPress space to continue'&amp;#10;        else:&amp;#10;            total_earned= total_earned-60&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 0)&amp;#10;&amp;#10;        continueRoutine=False &amp;#10;&amp;#10;          #  texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;    elif trials_2.thisN==2:&amp;#10;        r=randint(0,10)&amp;#10;        if r&gt;5:&amp;#10;            total_earned=total_earned-90&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 1)&amp;#10;&amp;#10;          #  texts='You win! Your new earnings are '+str(total_earned+90) +' coins.\nPress space to continue'&amp;#10;        else:&amp;#10;            total_earned=total_earned-60&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 0)&amp;#10;&amp;#10;        continueRoutine=False &amp;#10;&amp;#10;           # texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;   &amp;#10;    elif trials_2.thisN==3:&amp;#10;        r=randint(0,100)&amp;#10;        if r&gt;65:&amp;#10;            total_earned+=90&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 1)&amp;#10;           # texts='You win! Your new earnings are '+str(total_earned+90) +' coins.\nPress space to continue'&amp;#10;        else:&amp;#10;            total_earned-=60&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 0)&amp;#10;            #texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;        continueRoutine=False &amp;#10;    elif trials_2.thisN==4:&amp;#10;        r=randint(0,100)&amp;#10;        if r&gt;70:&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 1)&amp;#10;            total_earned= total_earned+90&amp;#10;           # texts='You win! Your new earnings are '+str(total_earned+90) +' coins.\nPress space to continue'&amp;#10;        else:&amp;#10;            thisExp.addData(&quot;gambled_won&quot;, 0)&amp;#10;            total_earned=total_earned-60&amp;#10;            #texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;        continueRoutine=False &amp;#10;    elif trials_2.thisN==5:&amp;#10;               # texts='You Lost. Your new earnings are '+str(total_earned-60) +' coins.\nPress space to continue'&amp;#10;            texts='Your previous earnings were '+str(last_total) +'\nYour new earnings (after all gambles) is ' +str(total_earned) +'\n\nPress space to continue'&amp;#10;else:&amp;#10;     print('we just always end up here')&amp;#10;     thisExp.addData(&quot;gambled_won&quot;, None)&amp;#10;     if trials_2.thisN==0:&amp;#10;        last_total=total_earned&amp;#10;        continueRoutine=false&amp;#10;     &amp;#10;     elif trials_2.thisN==5:&amp;#10;        texts='Your previous earnings were '+str(last_total) +'\nYour new earnings (after all gambles) is ' +str(total_earned) +'\n\nPress space to continue'&amp;#10;     else:&amp;#10;        continueRoutine=false&amp;#10;print('total earned'+str(total_earned))     &amp;#10;  #  texts='Ok you are still at '+str(total_earned) +' coins.\nPress space to continue'" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;total_earned&quot;, total_earned);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;total_earned&quot;, total_earned)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_49" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_27" plugin="None">
        <Param val="-1.0000, -1.0000, 0.0902" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_27" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$texts" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_20" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_20" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="gamblingoutcome">
      <RoutineSettingsComponent name="gamblingoutcome" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="gamblingoutcome" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_48" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trials_2.thisN === 0)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;console.log((&quot;response is: &quot; + key_resp_16.keys));&amp;#10;console.log((&quot;opt in is registed as &quot; + (key_resp_16.keys === &quot;b&quot;).toString()));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trials_2.thisN==0:&amp;#10;    continueRoutine=false&amp;#10;&amp;#10;&amp;#10;&amp;#10;print('response is: '+key_resp_16.keys)&amp;#10;print('opt in is registed as '+str(key_resp_16.keys=='b'))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;if key_resp_16.keys=='b' or key_resp_16.keys=='y':&amp;#10;    continueRoutine=True&amp;#10;&amp;#10;    tes='Determining outcome in!: '+ Math.round(3 - t,1) +'\n\n(outcomes revealed after all gambles)'&amp;#10;else:&amp;#10;    continueRoutine=True &amp;#10;    tes='Generating next offer in: '+ Math.round(3 - t,1)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((key_resp_16.keys === &quot;b&quot;) || (key_resp_16.keys === &quot;y&quot;))) {&amp;#10;    continueRoutine = true;&amp;#10;    tes = ((&quot;Determining outcome in!: &quot; + Math.round((3 - t), 1)) + &quot;\n\n(outcomes revealed after all gambles)&quot;);&amp;#10;} else {&amp;#10;    continueRoutine = true;&amp;#10;    tes = (&quot;Generating next offer in: &quot; + Math.round((3 - t), 1));&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((key_resp_16.keys === &quot;b&quot;) || (key_resp_16.keys === &quot;y&quot;))) {&amp;#10;    psychoJS.experiment.addData(&quot;took_gamble&quot;, 1);&amp;#10;} else {&amp;#10;    if (((key_resp_16.keys === &quot;a&quot;) || (key_resp_16.keys === &quot;n&quot;))) {&amp;#10;        psychoJS.experiment.addData(&quot;took_gamble&quot;, 0);&amp;#10;    } else {&amp;#10;        psychoJS.experiment.addData(&quot;took_gamble&quot;, 16);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if key_resp_16.keys=='b' or key_resp_16.keys=='y':&amp;#10;&amp;#10;    thisExp.addData(&quot;took_gamble&quot;, 1)&amp;#10;elif key_resp_16.keys=='a' or key_resp_16.keys=='n':&amp;#10;   thisExp.addData(&quot;took_gamble&quot;, 0)&amp;#10;   &amp;#10;else:&amp;#10;    thisExp.addData(&quot;took_gamble&quot;, 16)&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_48" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="background_color_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="background_color_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="traveling_one_2" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="traveling_one_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$tes" valType="str" updates="set every frame" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="space_ship_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="gamble.png" valType="file" updates="set every frame" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="space_ship_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.75, 0.8)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="risk_choices_2">
      <RoutineSettingsComponent name="risk_choices_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="risk_choices_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_24" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_24" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_36" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log((&quot;sum is&quot; + util.sum(la_opt_in).toString()));&amp;#10;console.log((&quot;total is&quot; + la_opt_in.toString()));&amp;#10;if ((util.sum(la_opt_in) === la_opt_in.length)) {&amp;#10;    psychoJS.experiment.addData(&quot;regression_not_applied&quot;, 1);&amp;#10;    feat_lr = [[0.3], [0.4], [0.5], [0.6]];&amp;#10;    la_opt_in = [0, 0, 1, 1];&amp;#10;} else {&amp;#10;    if ((util.sum(la_opt_in) === 0)) {&amp;#10;        psychoJS.experiment.addData(&quot;regression_not_applied&quot;, 1);&amp;#10;        feat_lr = [[0.3], [0.4], [0.5], [0.6]];&amp;#10;        la_opt_in = [0, 0, 1, 1];&amp;#10;    } else {&amp;#10;        psychoJS.experiment.addData(&quot;regression_not_applied&quot;, 0);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print('sum is'+str(sum(la_opt_in)))&amp;#10;print('total is'+str(la_opt_in))&amp;#10;&amp;#10;if sum(la_opt_in)==len(la_opt_in):&amp;#10;    thisExp.addData(&quot;regression_not_applied&quot;,1 )&amp;#10;&amp;#10;    &amp;#10;    feat_lr=[[.3],[.4],[.5],[.6]];&amp;#10;    la_opt_in=[0,0,1,1];&amp;#10;elif sum(la_opt_in)==0:&amp;#10;    thisExp.addData(&quot;regression_not_applied&quot;,1 )&amp;#10;&amp;#10;    feat_lr=[[.3],[.4],[.5],[.6]];&amp;#10;    la_opt_in=[0,0,1,1];&amp;#10;&amp;#10;else:&amp;#10;    thisExp.addData(&quot;regression_not_applied&quot;,0 )&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_36" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="run_reg_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="function sigmoid(x) {&amp;#10;  return 1 / (1 + Math.exp(-x));&amp;#10;}&amp;#10;&amp;#10;function logisticRegression(features, labels, iterations, learningRate) {&amp;#10;  features = features.map(feature =&gt; [1, feature]);&amp;#10;&amp;#10;  let weights = Array(features[0].length).fill(0);&amp;#10;&amp;#10;  for (let i = 0; i &lt; iterations; i++) {&amp;#10;    const predictions = features.map(point =&gt; sigmoid(dotProduct(point, weights)));&amp;#10;&amp;#10;    // calculate errors&amp;#10;    const errors = labels.map((label, index) =&gt; label - predictions[index]);&amp;#10;&amp;#10;    // calculate gradients&amp;#10;    const gradients = features.map(&amp;#10;      (point, index) =&gt; point.map(value =&gt; value * errors[index])&amp;#10;    );&amp;#10;&amp;#10;    // calculate mean gradients&amp;#10;    const meanGradients = gradients.reduce(&amp;#10;      (accumulator, currentValue) =&gt;&amp;#10;        accumulator.map((value, index) =&gt; value + currentValue[index])&amp;#10;    ).map(value =&gt; value * (1 / features.length));&amp;#10;&amp;#10;    // update weights&amp;#10;    weights = weights.map(&amp;#10;      (weight, index) =&gt; weight + learningRate * meanGradients[index]&amp;#10;    );&amp;#10;  }&amp;#10;&amp;#10;  return weights;&amp;#10;}&amp;#10;&amp;#10;// dot product function&amp;#10;function dotProduct(a, b) {&amp;#10;  return a.reduce((accumulator, currentValue, currentIndex) =&gt;&amp;#10;    accumulator + currentValue * b[currentIndex],&amp;#10;    0&amp;#10;  );&amp;#10;}" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;&amp;#10;numIterations = 120000;&amp;#10;learningRate = 0.01;&amp;#10;if ((trials_2.thisN === 0)) {&amp;#10;    weight = logisticRegression(feat_lr, la_opt_in, numIterations, learningRate);&amp;#10;    rat_indifferent=-weight[0]/weight[1];&amp;#10;    win_p=rat_indifferent+.2*(1-rat_indifferent);&amp;#10;    win_prob=Math.round((Math.round(win_p * 100) / 100) * 100);&amp;#10;&amp;#10;&amp;#10;   &amp;#10;&amp;#10;&amp;#10;    lose_prob=100-win_prob;&amp;#10;//lose_prob=Math.round(lose_p * 100) / 100 ;&amp;#10;    psychoJS.experiment.addData(&quot;win_prob&quot;, win_prob);&amp;#10;    psychoJS.experiment.addData(&quot;lose_prob&quot;, lose_prob);&amp;#10;&amp;#10;&amp;#10;    &amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="run_reg_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_52" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="coins = 0&amp;#10;win_prob = 0&amp;#10;varie_size=(1.69,1) &amp;#10;varie_position=(0,0)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="coins = 0;&amp;#10;win_prob = 0;&amp;#10;varie_size = [1.69, 1];&amp;#10;varie_position = [0, 0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((win_prob &gt; 100) || (win_prob &lt; 0))) {&amp;#10;    psychoJS.experiment.addData(&quot;not_normal_reg&quot;, 1);&amp;#10;    win_prob = 20;&amp;#10;    lose_prob = 80;&amp;#10;}&amp;#10;if ((trials_2.thisN === 1)) {&amp;#10;    text_to_show = &quot;What would you prefer?&quot;;&amp;#10;    answer_one = ((((&quot;Chance of OF WINNING: &quot; + win_prob.toString()) + &quot;%\nChance of LOSING:  &quot;) + lose_prob.toString()) + &quot;%\n\nStay Safe -Press A\nTake Gamble-Press B&quot;);&amp;#10;} else {&amp;#10;    text_to_show = &quot;What would you prefer?&quot;;&amp;#10;    answer_one = &quot;a) Win 90 coins with a 20% chance and lose 60 coins with a 80% chace\n\n\n\nb) Keep your current number of coins&quot;;&amp;#10;}&amp;#10;test_q_6.alignHoriz = &quot;left&quot;;&amp;#10;answer.alignHoriz = &quot;left&quot;;&amp;#10;if ((trials_2.thisN === 1)) {&amp;#10;    varie_size = [0.8, 0.6];&amp;#10;    varie_position = [0, (- 0.3)];&amp;#10;    only_if_slide = 25;&amp;#10;} else {&amp;#10;    varie_size = [1.71, 1.4];&amp;#10;    only_if_slide = 0;&amp;#10;    varie_position = [0, 0];&amp;#10;}&amp;#10;if ((trials_2.thisN === 1)) {&amp;#10;    if ((win_prob &gt; 90)) {&amp;#10;        risk_slide = 11;&amp;#10;    } else {&amp;#10;        if ((win_prob &gt; 80)) {&amp;#10;            risk_slide = 10;&amp;#10;        } else {&amp;#10;            if ((win_prob &gt; 70)) {&amp;#10;                risk_slide = 9;&amp;#10;            } else {&amp;#10;                if ((win_prob &gt; 60)) {&amp;#10;                    risk_slide = 8;&amp;#10;                } else {&amp;#10;                    if ((win_prob &gt; 50)) {&amp;#10;                        risk_slide = 7;&amp;#10;                    } else {&amp;#10;                        if ((win_prob &gt; 40)) {&amp;#10;                            risk_slide = 6;&amp;#10;                        } else {&amp;#10;                            if ((win_prob &gt; 30)) {&amp;#10;                                risk_slide = 5;&amp;#10;                            } else {&amp;#10;                                if ((win_prob &gt; 20)) {&amp;#10;                                    risk_slide = 4;&amp;#10;                                } else {&amp;#10;                                    if ((win_prob &gt; 10)) {&amp;#10;                                        risk_slide = 3;&amp;#10;                                    } else {&amp;#10;                                        if ((win_prob &gt; 0)) {&amp;#10;                                            risk_slide = 2;&amp;#10;                                        }&amp;#10;                                    }&amp;#10;                                }&amp;#10;                            }&amp;#10;                        }&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((trials_2.thisN === 0)) {&amp;#10;        risk_slide = 1;&amp;#10;    } else {&amp;#10;        risk_slide = (trials_2.thisN + 10);&amp;#10;    }&amp;#10;}&amp;#10;if ((trials_2.thisN &lt; 2)) {&amp;#10;    skip_first = 0;&amp;#10;} else {&amp;#10;    skip_first = 25;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#text.alignHoriz='left'&amp;#10;if win_prob&gt;100 or win_prob&lt;0:&amp;#10;    thisExp.addData(&quot;not_normal_reg&quot;, 1)&amp;#10;&amp;#10;    win_prob=20&amp;#10;    lose_prob=80&amp;#10;&amp;#10;if trials_2.thisN==1:&amp;#10;    text_to_show='What would you prefer?'&amp;#10;    #correct_mat='a'&amp;#10;    answer_one='Chance of OF WINNING: ' + str(win_prob)+'%\nChance of LOSING:  '+str(lose_prob)+'%\n\nStay Safe -Press A\nTake Gamble-Press B'&amp;#10;&amp;#10;else:&amp;#10;    text_to_show='What would you prefer?'&amp;#10;    answer_one='a) Win 90 coins with a 20% chance and lose 60 coins with a 80% chace\n\n\n\nb) Keep your current number of coins'&amp;#10;&amp;#10;&amp;#10;test_q_6.alignHoriz=&quot;left&quot;&amp;#10;answer.alignHoriz=&quot;left&quot;&amp;#10;if trials_2.thisN ==1:&amp;#10;    varie_size=(.8,.6) &amp;#10;    varie_position=(0,-.3)&amp;#10;    only_if_slide=25&amp;#10;    &amp;#10;else:&amp;#10;    varie_size=(1.71,1.4) &amp;#10;    only_if_slide=0&amp;#10;    varie_position=(0,0)&amp;#10;&amp;#10;if trials_2.thisN==1:&amp;#10;    if win_prob&gt;90:&amp;#10;        risk_slide=11&amp;#10;    elif win_prob&gt;80:&amp;#10;        risk_slide=10&amp;#10;    elif win_prob&gt;70:&amp;#10;        risk_slide=9&amp;#10;    elif win_prob&gt;60:&amp;#10;        risk_slide=8&amp;#10;    elif win_prob&gt;50:&amp;#10;        risk_slide=7&amp;#10;    elif win_prob&gt;40:&amp;#10;        risk_slide=6&amp;#10;    elif win_prob&gt;30:&amp;#10;        risk_slide=5&amp;#10;    elif win_prob&gt;20:&amp;#10;        risk_slide=4&amp;#10;    elif win_prob&gt;10:&amp;#10;        risk_slide=3&amp;#10;    elif win_prob&gt;0:&amp;#10;        risk_slide=2&amp;#10;          &amp;#10;elif trials_2.thisN==0:&amp;#10;    risk_slide=1&amp;#10;else:&amp;#10;    risk_slide=trials_2.thisN+10&amp;#10;&amp;#10;&amp;#10;if trials_2.thisN&lt;2:    &amp;#10;    skip_first=0&amp;#10;else:&amp;#10;    skip_first=25" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_52" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="test_q_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="test_q_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4, .75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What would you prefer?" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="answer" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="answer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4, .5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$only_if_slide" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$answer_one  " valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$'risk_distributions_final/Slide' + str(risk_slide) + '.jpeg'" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$varie_position" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="$varie_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="code_53" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log((&quot;win prob &quot; + win_prob.toString()));&amp;#10;console.log((&quot;weights&quot; + weight.toString()));&amp;#10;text_31.alignHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print('win prob '+str(win_prob))&amp;#10;print('weights' +str(weight))&amp;#10;text_31.alignHoriz=&quot;left&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_53" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_31" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.099" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_31" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-1.15, 1.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$skip_first" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Don't take gamble: press A&amp;#10;Take gamble : press B" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_16" plugin="None">
        <Param val="'a','b','y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_16" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="opt_in_choice_3">
      <RoutineSettingsComponent name="opt_in_choice_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="opt_in_choice_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="data_saving_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (((block.thisN === 6) &amp;&amp; (trials_task.thisN === 0))) {&amp;#10;    total_earned = 0;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if block.thisN==6 and trials_task.thisN==0:&amp;#10;    total_earned=0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;block&quot;, block.thisN);&amp;#10;psychoJS.experiment.addData(&quot;trials&quot;, trials_task.thisN);&amp;#10;psychoJS.experiment.addData(&quot;left_option&quot;, left_plane);&amp;#10;psychoJS.experiment.addData(&quot;right_option&quot;, right_plane);&amp;#10;psychoJS.experiment.addData(&quot;treasure_island&quot;, end_island);&amp;#10;psychoJS.experiment.addData(&quot;starting_island&quot;, beg_island);&amp;#10;psychoJS.experiment.addData(&quot;single_ticket&quot;, single_ticket_success[trials_task.thisN]);&amp;#10;psychoJS.experiment.addData(&quot;second_ticket&quot;, two_ticket_success[trials_task.thisN]);&amp;#10;psychoJS.experiment.addData(&quot;third_ticket&quot;, three_ticket_success[trials_task.thisN]);&amp;#10;console.log((&quot;id number to use is &quot; + part_id.toString()));&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="#where to put computer opt in and self opt in&amp;#10;thisExp.addData(&quot;block&quot;, block.thisN)&amp;#10;thisExp.addData(&quot;trials&quot;, trials_task.thisN)&amp;#10;&amp;#10;thisExp.addData(&quot;left_option&quot;, left_plane)&amp;#10;thisExp.addData(&quot;right_option&quot;, right_plane)&amp;#10;thisExp.addData(&quot;treasure_island&quot;, end_island)&amp;#10;thisExp.addData(&quot;starting_island&quot;, beg_island)&amp;#10;thisExp.addData(&quot;single_ticket&quot;, single_ticket_success[trials_task.thisN])&amp;#10;thisExp.addData(&quot;second_ticket&quot;, two_ticket_success[trials_task.thisN])&amp;#10;thisExp.addData(&quot;third_ticket&quot;, three_ticket_success[trials_task.thisN])&amp;#10;&amp;#10;print('id number to use is '+str(part_id))&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="data_saving_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="initiate_action_success_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="//var begin_trial= new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });&amp;#10;const date = new Date();&amp;#10;&amp;#10;const trial_started = Math.floor(date.getTime() / 1000);&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;trial_started&quot;, trial_started);&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;success_on = [];&amp;#10;spot = randint(0, 1);&amp;#10;earn = [-.55, 0.7];&amp;#10;&amp;#10;if ((spot === 0)) {&amp;#10;    comp_choose_loc = [- 0.75, .8];&amp;#10;    I_choose = [0.25, 0.8];&amp;#10;&amp;#10;} else {&amp;#10;    comp_choose_loc = [0.55, 0.8];&amp;#10;    I_choose = [- 0.2, 0.8];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# they havent been succesful yet &amp;#10;success_on=[]&amp;#10;&amp;#10;spot=random.randint(0,1)&amp;#10;if spot==0:&amp;#10;    comp_choose_loc=(-.55,.8)&amp;#10;    I_choose=(.55,.8)&amp;#10;else:&amp;#10;    comp_choose_loc=(.55,.8)&amp;#10;    I_choose=(-.55,.8)&amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initiate_action_success_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="set_transports_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="last_beg=1&amp;#10;total_earned=0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="last_beg = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;shuffle(islands_start);&amp;#10;beg_island = islands_start[0];&amp;#10;&amp;#10;shuffle(islands);&amp;#10;shuffle(transport);&amp;#10;end_island = islands[1];&amp;#10;left_plane = transport[0];&amp;#10;right_plane = transport[1];&amp;#10;comp_choose.alignHoriz=&quot;left&quot;;&amp;#10;if ((shuffledArray[trials_task.thisN]==1)){&amp;#10;    force_divergence=1;&amp;#10;&amp;#10;&amp;#10;&amp;#10;} else{&amp;#10;    force_divergence=0;&amp;#10;  &amp;#10;&amp;#10;}&amp;#10;//force_divergence = randint(0, 10);&amp;#10;if ((force_divergence === 1)) {&amp;#10;    psychoJS.experiment.addData(&quot;ss_transition&quot;, 0);&amp;#10;&amp;#10;    if ((beg_island === &quot;islands/hut.png&quot;)) {&amp;#10;        end_island = &quot;islands/town.png&quot;;&amp;#10;    } else {&amp;#10;        end_island = &quot;islands/mountain.png&quot;;&amp;#10;    }&amp;#10;}&amp;#10;else {&amp;#10;    psychoJS.experiment.addData(&quot;ss_transition&quot;, 1);&amp;#10;&amp;#10;    if ((beg_island === &quot;islands/hut.png&quot;)) {&amp;#10;        end_island = &quot;islands/mountain.png&quot;;&amp;#10;    } else {&amp;#10;        end_island = &quot;islands/town.png&quot;;&amp;#10;    }&amp;#10;    &amp;#10;    &amp;#10;    &amp;#10;}&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="solution=False&amp;#10;if last_beg==0:&amp;#10;    beg_island=islands[1]&amp;#10;    last_beg=1&amp;#10;else:&amp;#10;    beg_island=islands[0]&amp;#10;    last_beg=0&amp;#10;random.shuffle(islands)&amp;#10;random.shuffle(transport)&amp;#10;end_island=islands[0]&amp;#10;left_plane=transport[0]&amp;#10;right_plane=transport[1]&amp;#10;&amp;#10;&amp;#10;choose.alignHoriz=&quot;left&quot;&amp;#10;comp_choose.alignHoriz=&quot;left&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="set_transports_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="record_wself_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;letter_height=.075&amp;#10;opt_answer=0&amp;#10;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;c_inelastic&quot;, c_inelastic);&amp;#10;psychoJS.experiment.addData(&quot;c_elastic&quot;,c_elastic);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# we need to go from place to place now &amp;#10;&amp;#10;&amp;#10;letter_height=.075&amp;#10;opt_answer=0&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="record_wself_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="record_optin_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="la_opt_in=[];&amp;#10;feat_lr=[];" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="la_opt_in = [];&amp;#10;feat_lr = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="forced_actions = false;&amp;#10;num_1_actions = 0;&amp;#10;if ((block.thisN &lt; 6)) {&amp;#10;    num_3_actions = 4;&amp;#10;} else {&amp;#10;    num_3_actions = 5;&amp;#10;}&amp;#10;total_num_forced = (num_1_actions + num_3_actions);&amp;#10;if ((trials_task.thisN &lt; num_3_actions)) {&amp;#10;    forced_actions = true;&amp;#10;    cs = 1;&amp;#10;    acted_or_not = 0;&amp;#10;    action_or_not = 2.5;&amp;#10;    comp_select_time = 0;&amp;#10;    num_actions = 1;&amp;#10;    retry_loop = 2;&amp;#10;    comp_extra_five = 0;&amp;#10;    continueRoutine = false;&amp;#10;    sreview_ins.finished = true;&amp;#10;}&amp;#10;if (((trials_task.thisN === total_num_forced) || (trials_task.thisN === (total_num_forced + 1)))) {&amp;#10;    only_first_trial = 1000;&amp;#10;} else {&amp;#10;    only_first_trial = 0;&amp;#10;}&amp;#10;if ((forced_actions === true)) {&amp;#10;    continueRoutine = false;&amp;#10;    allowed_on_opt = [&quot;y&quot;];&amp;#10;    opt_in_text_shown = &quot;Activate Free Ticket for 3 attempts(Press 'Y')&quot;;&amp;#10;} else {&amp;#10;    allowed_on_opt = [&quot;9&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;];&amp;#10;    opt_in_text_shown = &quot;How much do you want to invest in boarding a ride?\n\n0- 0 tickets (walk)\n1 ticket (Cost: 40 coins)\n2 tickets (Cost:60 coins, 1 jump)\n3 tickets (Cost: 80 coins, 2 jumps)&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="forced_actions=False&amp;#10;#print('c_elastic '+str(c_elastic))&amp;#10;#print('c_inelastic '+str(c_inelastic))&amp;#10;num_1_actions=0&amp;#10;&amp;#10;if block.thisN&lt;6:&amp;#10;    num_3_actions=4&amp;#10;   &amp;#10;else:&amp;#10;    num_3_actions=5&amp;#10;total_num_forced=num_1_actions+num_3_actions&amp;#10;&amp;#10;    &amp;#10;if trials_task.thisN &lt;num_3_actions: &amp;#10;    forced_actions=True&amp;#10;    cs=1&amp;#10;    acted_or_not=0&amp;#10;    action_or_not=2.5&amp;#10;    comp_select_time=0&amp;#10;    num_actions=1&amp;#10;    retry_loop=2&amp;#10;    comp_extra_five=0&amp;#10;    continueRoutine=false&amp;#10;&amp;#10;    sreview_ins.finished=True&amp;#10;        &amp;#10;#elif (trials_task.thisN+1) % 5 ==0 and trials_task.thisN&gt;3 and trials_task.thisN&lt;21:&amp;#10;   # print(&quot;this is a case of &quot;+str((trials_task.thisN+1) % 5 ==0))&amp;#10;   # print(&quot;trial recorded as &quot;+trials_task.thisN)&amp;#10; #   forced_actions=False&amp;#10;  #  cs=1&amp;#10;   # acted_or_not=0&amp;#10;    #action_or_not=2.5&amp;#10;    #comp_select_time=0&amp;#10;    #num_actions=1&amp;#10;    #retry_loop=2&amp;#10;    #comp_extra_five=0&amp;#10;    #continueRoutine=false&amp;#10;&amp;#10;    #sreview_ins.finished=True&amp;#10;&amp;#10;if trials_task.thisN==total_num_forced or trials_task.thisN==total_num_forced+1:&amp;#10;    only_first_trial=1000&amp;#10;else:&amp;#10;    only_first_trial=0&amp;#10;    &amp;#10;if forced_actions==True:&amp;#10;    continueRoutine=false&amp;#10;    allowed_on_opt=['y']&amp;#10;    opt_in_text_shown=&quot;Activate Free Ticket for 3 attempts(Press 'Y')&quot;&amp;#10;else:&amp;#10;    allowed_on_opt=['9','1','2','3']&amp;#10;    opt_in_text_shown=&quot;How much do you want to invest in boarding a ride?\n\n0- 0 tickets (walk)\n1 ticket (Cost: 40 coins)\n2 tickets (Cost:60 coins, 1 jump)\n3 tickets (Cost: 80 coins, 2 jumps)&quot;&amp;#10;&amp;#10;    &amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((forced_actions === false)) {&amp;#10;    if ((((opt_in.keys === &quot;1&quot;) || (opt_in.keys === &quot;2&quot;)) || (opt_in.keys === &quot;3&quot;))) {&amp;#10;        cs = 1;&amp;#10;        acted_or_not = 0;&amp;#10;        action_or_not = 2.5;&amp;#10;        comp_select_time = 0;&amp;#10;        (num_actions === 0);&amp;#10;        retry_loop = 2;&amp;#10;        comp_extra_five = 0;&amp;#10;        sreview_ins.finished = true;&amp;#10;    } else {&amp;#10;        if ((opt_in.keys === &quot;9&quot;)) {&amp;#10;            cs = 0;&amp;#10;            acted_or_not = 2;&amp;#10;            action_or_not = 0;&amp;#10;            comp_select_time = 3;&amp;#10;            (num_actions === 0);&amp;#10;            retry_loop = 0;&amp;#10;            comp_extra_five = 1;&amp;#10;            sreview_ins.finished = true;&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((block.thisN &gt; 5)) {&amp;#10;    la_opt_in.push(cs);&amp;#10;    feat_lr.push([(c_inelastic + (c_elastic / 2))]);&amp;#10;}&amp;#10;if ((opt_in.keys === &quot;1&quot;)) {&amp;#10;    proscribed_actions = 1;&amp;#10;} else {&amp;#10;    if ((opt_in.keys === &quot;2&quot;)) {&amp;#10;        proscribed_actions = 2;&amp;#10;    } else {&amp;#10;        if ((opt_in.keys === &quot;3&quot;)) {&amp;#10;            proscribed_actions = 3;&amp;#10;        } else {&amp;#10;            if ((opt_in.keys === &quot;9&quot;)) {&amp;#10;                proscribed_actions = 0;&amp;#10;            } else {&amp;#10;                proscribed_actions = 444;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if forced_actions==False:&amp;#10;    &amp;#10;    if opt_in.keys=='1' or opt_in.keys=='2' or opt_in.keys=='3':&amp;#10;        cs=1&amp;#10;        acted_or_not=0&amp;#10;        action_or_not=2.5&amp;#10;        comp_select_time=0&amp;#10;        num_actions==0&amp;#10;        retry_loop=2&amp;#10;        comp_extra_five=0&amp;#10;        sreview_ins.finished=True&amp;#10;    elif opt_in.keys=='9':&amp;#10;&amp;#10;        cs=0&amp;#10;        acted_or_not=2&amp;#10;        action_or_not=0&amp;#10;        comp_select_time=3&amp;#10;        num_actions==0&amp;#10;        retry_loop=0&amp;#10;        comp_extra_five=1&amp;#10;        sreview_ins.finished=True&amp;#10;if block.thisN&gt;5:&amp;#10;        la_opt_in.push(cs)&amp;#10;        feat_lr.push([c_inelastic+(c_elastic/2)])&amp;#10;&amp;#10;    &amp;#10;if opt_in.keys=='1':&amp;#10;    proscribed_actions=1&amp;#10;elif opt_in.keys=='2':&amp;#10;    proscribed_actions=2&amp;#10;elif opt_in.keys=='3':&amp;#10;    proscribed_actions=3&amp;#10;elif opt_in.keys=='9':&amp;#10;    proscribed_actions=0&amp;#10;else:&amp;#10;    proscribed_actions=444&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="record_optin_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="background_color_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$color_back" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="background_color_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(5, 5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="dep_island_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$beg_island" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="dep_island_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .725)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.33, 0.66)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="comp_choose" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="comp_choose" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.4,.4)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$opt_in_text_shown" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="here" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.075" valType="num" updates="constant" name="letterHeight"/>
        <Param val="here" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.5, .85)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are here" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="origin_pointer" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="planes/pointer.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="origin_pointer" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.25, .85)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.22, 0.22)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="cur_winnings_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cur_winnings_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.65,.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'\n\n\n'+'Current total earnings: ' + str(total_earned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="planet_number_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="planet_number_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(.75,-.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Planet ' +str(block.thisN+1) +' of ' +str(num_blocks)+ '\nTrip '+str(trials_task.thisN+1)+' of ' + str(trial_length)" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="timeOut_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="total_opt_timedOut=0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="startOptTime = new Date();&amp;#10;start_opt_time= Math.floor(startOptTime.getTime() / 1000);&amp;#10;psychoJS.experiment.addData(&quot;optIn_started&quot;, start_opt_time);&amp;#10;opt_timedOut=false;&amp;#10;first_opt = Math.floor(startOptTime.getTime() / 1000);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="time_sopt = new Date();&amp;#10;currentOpt_time= Math.floor(time_sopt.getTime() / 1000);&amp;#10;&amp;#10;&amp;#10;if (((currentOpt_time - first_opt) &gt; 25)) {&amp;#10;    timeOfOpttimeOut = Math.floor(time_sopt.getTime() / 1000);&amp;#10;&amp;#10;    psychoJS.experiment.addData(&quot;opt_timeout_time&quot;, timeOfOpttimeOut);&amp;#10;    psychoJS.experiment.addData(&quot;opt_timeout&quot;, 1);&amp;#10;&amp;#10;    opt_timedOut=true;&amp;#10;&amp;#10;    continueRoutine = false;&amp;#10;    total_opt_timedOut+=1;&amp;#10;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="&amp;#10;end_opt = new Date();&amp;#10;end_opt_time= Math.floor(end_opt.getTime() / 1000);&amp;#10;psychoJS.experiment.addData(&quot;opt_end_time&quot;, end_opt_time);&amp;#10;&amp;#10;&amp;#10;&amp;#10;if ((total_opt_timedOut&gt;8)){&amp;#10;    psychoJS.quit({message: 'You have timed out too many times and therefore cannot proceed with the study'});&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;}" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="timeOut_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="occluded_treasure_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="occluded_treasure_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.75)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.35)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_30" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_30" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Treasure Location: Shown after you decide whether to walk or to buy a ticket" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="opt_in" plugin="None">
        <Param val="'1','2','3','9'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="opt_in" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="opt_inr.jpg" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .26)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.5, 1.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="init_code"/>
    <LoopInitiator loopType="TrialHandler" name="consent_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="consent_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="consent_form_1"/>
    <Routine name="consent_form_2"/>
    <Routine name="consent_form_3"/>
    <Routine name="consent_form_4"/>
    <Routine name="consent_5"/>
    <LoopTerminator name="consent_loop"/>
    <LoopInitiator loopType="TrialHandler" name="loop1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="loop1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_first">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="20" valType="num"/>
      <Param name="name" updates="None" val="review_first" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_first"/>
    <LoopInitiator loopType="TrialHandler" name="round1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="round1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round1"/>
    <LoopTerminator name="loop1"/>
    <LoopInitiator loopType="TrialHandler" name="loop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="25" valType="num"/>
      <Param name="name" updates="None" val="loop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_second">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_second" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_second"/>
    <LoopInitiator loopType="TrialHandler" name="round2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="round2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round2"/>
    <LoopTerminator name="loop2"/>
    <LoopInitiator loopType="TrialHandler" name="walk_examples">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="walk_examples" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="make_fake_choice"/>
    <Routine name="show_fake_choice"/>
    <Routine name="feeedbackss"/>
    <LoopTerminator name="walk_examples"/>
    <LoopInitiator loopType="TrialHandler" name="loop3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="loop3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_third">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_third" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_third"/>
    <LoopInitiator loopType="TrialHandler" name="round3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="round3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round3"/>
    <LoopTerminator name="loop3"/>
    <LoopInitiator loopType="TrialHandler" name="see_actions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="16" valType="num"/>
      <Param name="name" updates="None" val="see_actions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="new_examples"/>
    <Routine name="opt_in_choice_2"/>
    <Routine name="make_choice_2"/>
    <Routine name="show_choice_2"/>
    <Routine name="feeedback__2"/>
    <LoopTerminator name="see_actions"/>
    <LoopInitiator loopType="TrialHandler" name="loop4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="loop4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_fourth">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_fourth" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_fourth"/>
    <LoopInitiator loopType="TrialHandler" name="round4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="round4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round4"/>
    <LoopTerminator name="loop4"/>
    <LoopInitiator loopType="TrialHandler" name="miss_ride_sometimes">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="miss_ride_sometimes" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="new_examples"/>
    <Routine name="opt_in_choice_2"/>
    <Routine name="make_choice_2"/>
    <Routine name="show_choice_2"/>
    <Routine name="feeedback__2"/>
    <LoopTerminator name="miss_ride_sometimes"/>
    <LoopInitiator loopType="TrialHandler" name="loop5">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="145" valType="num"/>
      <Param name="name" updates="None" val="loop5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_fifth">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_fifth" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_fifth"/>
    <LoopInitiator loopType="TrialHandler" name="round5">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="round5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round5"/>
    <LoopTerminator name="loop5"/>
    <LoopInitiator loopType="TrialHandler" name="couple_of_examples">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="couple_of_examples" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="action_prep"/>
    <Routine name="action_execution"/>
    <LoopTerminator name="couple_of_examples"/>
    <LoopInitiator loopType="TrialHandler" name="loop6">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="53" valType="num"/>
      <Param name="name" updates="None" val="loop6" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_sixth">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_sixth" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_sixth"/>
    <LoopInitiator loopType="TrialHandler" name="round6">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="round6" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round6"/>
    <LoopTerminator name="loop6"/>
    <LoopInitiator loopType="TrialHandler" name="platform_examples">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="9" valType="num"/>
      <Param name="name" updates="None" val="platform_examples" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="action_prep"/>
    <Routine name="action_execution"/>
    <Routine name="feedback"/>
    <LoopTerminator name="platform_examples"/>
    <LoopInitiator loopType="TrialHandler" name="loop7">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="loop7" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_seventh">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="52" valType="num"/>
      <Param name="name" updates="None" val="review_seventh" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_seventh"/>
    <LoopInitiator loopType="TrialHandler" name="round7">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="round7" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="round7"/>
    <LoopTerminator name="loop7"/>
    <LoopInitiator loopType="TrialHandler" name="trials_review">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="num"/>
      <Param name="name" updates="None" val="trials_review" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="open_questions"/>
    <LoopTerminator name="trials_review"/>
    <Routine name="let_the_game_begin"/>
    <LoopInitiator loopType="TrialHandler" name="block">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="10" valType="num"/>
      <Param name="name" updates="None" val="block" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="init_block"/>
    <LoopInitiator loopType="TrialHandler" name="relearn_rules">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="relearn_rules" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="review_loop_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="30" valType="num"/>
      <Param name="name" updates="None" val="review_loop_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="review_routes"/>
    <LoopTerminator name="review_loop_1"/>
    <LoopInitiator loopType="TrialHandler" name="act_testing">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="act_testing" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="quiz"/>
    <LoopTerminator name="act_testing"/>
    <LoopTerminator name="relearn_rules"/>
    <LoopInitiator loopType="TrialHandler" name="repeat_quiz">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="3" valType="num"/>
      <Param name="name" updates="None" val="repeat_quiz" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="practice_task">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="25" valType="num"/>
      <Param name="name" updates="None" val="practice_task" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="practice_in_task"/>
    <LoopTerminator name="practice_task"/>
    <LoopInitiator loopType="TrialHandler" name="practice_quiz">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="num"/>
      <Param name="name" updates="None" val="practice_quiz" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="check_action_understanding"/>
    <LoopTerminator name="practice_quiz"/>
    <LoopTerminator name="repeat_quiz"/>
    <Routine name="traveling_to_new_planet"/>
    <LoopInitiator loopType="TrialHandler" name="trials_task">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="$trial_length" valType="num"/>
      <Param name="name" updates="None" val="trials_task" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="one_or_three_2"/>
    <LoopInitiator loopType="TrialHandler" name="sreview_ins">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="10" valType="num"/>
      <Param name="name" updates="None" val="sreview_ins" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="opt_in_choice_3"/>
    <Routine name="timedOut_Lost"/>
    <LoopTerminator name="sreview_ins"/>
    <Routine name="make_choice"/>
    <Routine name="show_choice"/>
    <Routine name="ok_wait_2"/>
    <LoopInitiator loopType="TrialHandler" name="retry">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="$retry_loop" valType="num"/>
      <Param name="name" updates="None" val="retry" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="action_prep_2"/>
    <Routine name="action_exec"/>
    <Routine name="try_again_2"/>
    <Routine name="ok_wait"/>
    <LoopTerminator name="retry"/>
    <Routine name="timedOUT"/>
    <Routine name="feedback_2"/>
    <Routine name="excited"/>
    <Routine name="content"/>
    <LoopTerminator name="trials_task"/>
    <Routine name="num_tickets_query"/>
    <Routine name="breather_2"/>
    <LoopTerminator name="block"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="6" valType="num"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="risk_choices_2"/>
    <Routine name="gamblingoutcome"/>
    <Routine name="gamble_outcome"/>
    <LoopTerminator name="trials_2"/>
    <LoopInitiator loopType="TrialHandler" name="need_feedback">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="num"/>
      <Param name="name" updates="None" val="need_feedback" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="open_questions_2"/>
    <LoopTerminator name="need_feedback"/>
    <Routine name="end_experiment"/>
  </Flow>
</PsychoPy2experiment>
